// Code generated by protoc-gen-go. DO NOT EDIT.
// source: xdevice.proto

package xdevice

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	empty "github.com/golang/protobuf/ptypes/empty"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type CommonReq struct {
	Resourceid           []string `protobuf:"bytes,1,rep,name=resourceid,proto3" json:"resourceid,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CommonReq) Reset()         { *m = CommonReq{} }
func (m *CommonReq) String() string { return proto.CompactTextString(m) }
func (*CommonReq) ProtoMessage()    {}
func (*CommonReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_97eac33c4427d001, []int{0}
}

func (m *CommonReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CommonReq.Unmarshal(m, b)
}
func (m *CommonReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CommonReq.Marshal(b, m, deterministic)
}
func (m *CommonReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CommonReq.Merge(m, src)
}
func (m *CommonReq) XXX_Size() int {
	return xxx_messageInfo_CommonReq.Size(m)
}
func (m *CommonReq) XXX_DiscardUnknown() {
	xxx_messageInfo_CommonReq.DiscardUnknown(m)
}

var xxx_messageInfo_CommonReq proto.InternalMessageInfo

func (m *CommonReq) GetResourceid() []string {
	if m != nil {
		return m.Resourceid
	}
	return nil
}

type DebugDeviceRes struct {
	Devices              []*DeviceRuntime `protobuf:"bytes,1,rep,name=devices,proto3" json:"devices,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *DebugDeviceRes) Reset()         { *m = DebugDeviceRes{} }
func (m *DebugDeviceRes) String() string { return proto.CompactTextString(m) }
func (*DebugDeviceRes) ProtoMessage()    {}
func (*DebugDeviceRes) Descriptor() ([]byte, []int) {
	return fileDescriptor_97eac33c4427d001, []int{1}
}

func (m *DebugDeviceRes) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DebugDeviceRes.Unmarshal(m, b)
}
func (m *DebugDeviceRes) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DebugDeviceRes.Marshal(b, m, deterministic)
}
func (m *DebugDeviceRes) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DebugDeviceRes.Merge(m, src)
}
func (m *DebugDeviceRes) XXX_Size() int {
	return xxx_messageInfo_DebugDeviceRes.Size(m)
}
func (m *DebugDeviceRes) XXX_DiscardUnknown() {
	xxx_messageInfo_DebugDeviceRes.DiscardUnknown(m)
}

var xxx_messageInfo_DebugDeviceRes proto.InternalMessageInfo

func (m *DebugDeviceRes) GetDevices() []*DeviceRuntime {
	if m != nil {
		return m.Devices
	}
	return nil
}

type DebugSpotRes struct {
	Spots                []*SpotRuntime `protobuf:"bytes,1,rep,name=spots,proto3" json:"spots,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *DebugSpotRes) Reset()         { *m = DebugSpotRes{} }
func (m *DebugSpotRes) String() string { return proto.CompactTextString(m) }
func (*DebugSpotRes) ProtoMessage()    {}
func (*DebugSpotRes) Descriptor() ([]byte, []int) {
	return fileDescriptor_97eac33c4427d001, []int{2}
}

func (m *DebugSpotRes) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DebugSpotRes.Unmarshal(m, b)
}
func (m *DebugSpotRes) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DebugSpotRes.Marshal(b, m, deterministic)
}
func (m *DebugSpotRes) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DebugSpotRes.Merge(m, src)
}
func (m *DebugSpotRes) XXX_Size() int {
	return xxx_messageInfo_DebugSpotRes.Size(m)
}
func (m *DebugSpotRes) XXX_DiscardUnknown() {
	xxx_messageInfo_DebugSpotRes.DiscardUnknown(m)
}

var xxx_messageInfo_DebugSpotRes proto.InternalMessageInfo

func (m *DebugSpotRes) GetSpots() []*SpotRuntime {
	if m != nil {
		return m.Spots
	}
	return nil
}

type DebugWorkReq struct {
	Index                []int32  `protobuf:"varint,1,rep,packed,name=index,proto3" json:"index,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DebugWorkReq) Reset()         { *m = DebugWorkReq{} }
func (m *DebugWorkReq) String() string { return proto.CompactTextString(m) }
func (*DebugWorkReq) ProtoMessage()    {}
func (*DebugWorkReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_97eac33c4427d001, []int{3}
}

func (m *DebugWorkReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DebugWorkReq.Unmarshal(m, b)
}
func (m *DebugWorkReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DebugWorkReq.Marshal(b, m, deterministic)
}
func (m *DebugWorkReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DebugWorkReq.Merge(m, src)
}
func (m *DebugWorkReq) XXX_Size() int {
	return xxx_messageInfo_DebugWorkReq.Size(m)
}
func (m *DebugWorkReq) XXX_DiscardUnknown() {
	xxx_messageInfo_DebugWorkReq.DiscardUnknown(m)
}

var xxx_messageInfo_DebugWorkReq proto.InternalMessageInfo

func (m *DebugWorkReq) GetIndex() []int32 {
	if m != nil {
		return m.Index
	}
	return nil
}

type DebugWorkRes struct {
	Workers              []*WorkerRuntime `protobuf:"bytes,1,rep,name=workers,proto3" json:"workers,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *DebugWorkRes) Reset()         { *m = DebugWorkRes{} }
func (m *DebugWorkRes) String() string { return proto.CompactTextString(m) }
func (*DebugWorkRes) ProtoMessage()    {}
func (*DebugWorkRes) Descriptor() ([]byte, []int) {
	return fileDescriptor_97eac33c4427d001, []int{4}
}

func (m *DebugWorkRes) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DebugWorkRes.Unmarshal(m, b)
}
func (m *DebugWorkRes) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DebugWorkRes.Marshal(b, m, deterministic)
}
func (m *DebugWorkRes) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DebugWorkRes.Merge(m, src)
}
func (m *DebugWorkRes) XXX_Size() int {
	return xxx_messageInfo_DebugWorkRes.Size(m)
}
func (m *DebugWorkRes) XXX_DiscardUnknown() {
	xxx_messageInfo_DebugWorkRes.DiscardUnknown(m)
}

var xxx_messageInfo_DebugWorkRes proto.InternalMessageInfo

func (m *DebugWorkRes) GetWorkers() []*WorkerRuntime {
	if m != nil {
		return m.Workers
	}
	return nil
}

type DebugBindRes struct {
	Br                   []*BindRuntime `protobuf:"bytes,1,rep,name=br,proto3" json:"br,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *DebugBindRes) Reset()         { *m = DebugBindRes{} }
func (m *DebugBindRes) String() string { return proto.CompactTextString(m) }
func (*DebugBindRes) ProtoMessage()    {}
func (*DebugBindRes) Descriptor() ([]byte, []int) {
	return fileDescriptor_97eac33c4427d001, []int{5}
}

func (m *DebugBindRes) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DebugBindRes.Unmarshal(m, b)
}
func (m *DebugBindRes) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DebugBindRes.Marshal(b, m, deterministic)
}
func (m *DebugBindRes) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DebugBindRes.Merge(m, src)
}
func (m *DebugBindRes) XXX_Size() int {
	return xxx_messageInfo_DebugBindRes.Size(m)
}
func (m *DebugBindRes) XXX_DiscardUnknown() {
	xxx_messageInfo_DebugBindRes.DiscardUnknown(m)
}

var xxx_messageInfo_DebugBindRes proto.InternalMessageInfo

func (m *DebugBindRes) GetBr() []*BindRuntime {
	if m != nil {
		return m.Br
	}
	return nil
}

type BindRuntime struct {
	Resourceid           string   `protobuf:"bytes,1,opt,name=resourceid,proto3" json:"resourceid,omitempty"`
	Binds                []string `protobuf:"bytes,2,rep,name=binds,proto3" json:"binds,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BindRuntime) Reset()         { *m = BindRuntime{} }
func (m *BindRuntime) String() string { return proto.CompactTextString(m) }
func (*BindRuntime) ProtoMessage()    {}
func (*BindRuntime) Descriptor() ([]byte, []int) {
	return fileDescriptor_97eac33c4427d001, []int{6}
}

func (m *BindRuntime) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BindRuntime.Unmarshal(m, b)
}
func (m *BindRuntime) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BindRuntime.Marshal(b, m, deterministic)
}
func (m *BindRuntime) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BindRuntime.Merge(m, src)
}
func (m *BindRuntime) XXX_Size() int {
	return xxx_messageInfo_BindRuntime.Size(m)
}
func (m *BindRuntime) XXX_DiscardUnknown() {
	xxx_messageInfo_BindRuntime.DiscardUnknown(m)
}

var xxx_messageInfo_BindRuntime proto.InternalMessageInfo

func (m *BindRuntime) GetResourceid() string {
	if m != nil {
		return m.Resourceid
	}
	return ""
}

func (m *BindRuntime) GetBinds() []string {
	if m != nil {
		return m.Binds
	}
	return nil
}

type WorkerRuntime struct {
	Index                int32    `protobuf:"varint,1,opt,name=index,proto3" json:"index,omitempty"`
	Rundata              string   `protobuf:"bytes,2,opt,name=rundata,proto3" json:"rundata,omitempty"`
	Devices              []string `protobuf:"bytes,3,rep,name=devices,proto3" json:"devices,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *WorkerRuntime) Reset()         { *m = WorkerRuntime{} }
func (m *WorkerRuntime) String() string { return proto.CompactTextString(m) }
func (*WorkerRuntime) ProtoMessage()    {}
func (*WorkerRuntime) Descriptor() ([]byte, []int) {
	return fileDescriptor_97eac33c4427d001, []int{7}
}

func (m *WorkerRuntime) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WorkerRuntime.Unmarshal(m, b)
}
func (m *WorkerRuntime) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WorkerRuntime.Marshal(b, m, deterministic)
}
func (m *WorkerRuntime) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WorkerRuntime.Merge(m, src)
}
func (m *WorkerRuntime) XXX_Size() int {
	return xxx_messageInfo_WorkerRuntime.Size(m)
}
func (m *WorkerRuntime) XXX_DiscardUnknown() {
	xxx_messageInfo_WorkerRuntime.DiscardUnknown(m)
}

var xxx_messageInfo_WorkerRuntime proto.InternalMessageInfo

func (m *WorkerRuntime) GetIndex() int32 {
	if m != nil {
		return m.Index
	}
	return 0
}

func (m *WorkerRuntime) GetRundata() string {
	if m != nil {
		return m.Rundata
	}
	return ""
}

func (m *WorkerRuntime) GetDevices() []string {
	if m != nil {
		return m.Devices
	}
	return nil
}

type EventStatusRuntime struct {
	Level                int32    `protobuf:"varint,1,opt,name=level,proto3" json:"level,omitempty"`
	Status               int32    `protobuf:"varint,2,opt,name=status,proto3" json:"status,omitempty"`
	Lastguid             string   `protobuf:"bytes,3,opt,name=lastguid,proto3" json:"lastguid,omitempty"`
	Id                   string   `protobuf:"bytes,4,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *EventStatusRuntime) Reset()         { *m = EventStatusRuntime{} }
func (m *EventStatusRuntime) String() string { return proto.CompactTextString(m) }
func (*EventStatusRuntime) ProtoMessage()    {}
func (*EventStatusRuntime) Descriptor() ([]byte, []int) {
	return fileDescriptor_97eac33c4427d001, []int{8}
}

func (m *EventStatusRuntime) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EventStatusRuntime.Unmarshal(m, b)
}
func (m *EventStatusRuntime) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EventStatusRuntime.Marshal(b, m, deterministic)
}
func (m *EventStatusRuntime) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EventStatusRuntime.Merge(m, src)
}
func (m *EventStatusRuntime) XXX_Size() int {
	return xxx_messageInfo_EventStatusRuntime.Size(m)
}
func (m *EventStatusRuntime) XXX_DiscardUnknown() {
	xxx_messageInfo_EventStatusRuntime.DiscardUnknown(m)
}

var xxx_messageInfo_EventStatusRuntime proto.InternalMessageInfo

func (m *EventStatusRuntime) GetLevel() int32 {
	if m != nil {
		return m.Level
	}
	return 0
}

func (m *EventStatusRuntime) GetStatus() int32 {
	if m != nil {
		return m.Status
	}
	return 0
}

func (m *EventStatusRuntime) GetLastguid() string {
	if m != nil {
		return m.Lastguid
	}
	return ""
}

func (m *EventStatusRuntime) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type SpotRuntime struct {
	Resourceid           string                `protobuf:"bytes,1,opt,name=resourceid,proto3" json:"resourceid,omitempty"`
	Name                 string                `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Citype               int32                 `protobuf:"varint,3,opt,name=citype,proto3" json:"citype,omitempty"`
	Spottype             int32                 `protobuf:"varint,4,opt,name=spottype,proto3" json:"spottype,omitempty"`
	Bindid               string                `protobuf:"bytes,5,opt,name=bindid,proto3" json:"bindid,omitempty"`
	Parent               string                `protobuf:"bytes,6,opt,name=parent,proto3" json:"parent,omitempty"`
	Precision            int32                 `protobuf:"varint,7,opt,name=precision,proto3" json:"precision,omitempty"`
	Valuetype            int32                 `protobuf:"varint,8,opt,name=valuetype,proto3" json:"valuetype,omitempty"`
	Valuesource          int32                 `protobuf:"varint,9,opt,name=valuesource,proto3" json:"valuesource,omitempty"`
	Laststatus           int32                 `protobuf:"varint,10,opt,name=laststatus,proto3" json:"laststatus,omitempty"`
	Lasttime             int64                 `protobuf:"varint,11,opt,name=lasttime,proto3" json:"lasttime,omitempty"`
	Lastvalue            string                `protobuf:"bytes,12,opt,name=lastvalue,proto3" json:"lastvalue,omitempty"`
	Eventstatus          []*EventStatusRuntime `protobuf:"bytes,13,rep,name=eventstatus,proto3" json:"eventstatus,omitempty"`
	Processor            []string              `protobuf:"bytes,14,rep,name=processor,proto3" json:"processor,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *SpotRuntime) Reset()         { *m = SpotRuntime{} }
func (m *SpotRuntime) String() string { return proto.CompactTextString(m) }
func (*SpotRuntime) ProtoMessage()    {}
func (*SpotRuntime) Descriptor() ([]byte, []int) {
	return fileDescriptor_97eac33c4427d001, []int{9}
}

func (m *SpotRuntime) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SpotRuntime.Unmarshal(m, b)
}
func (m *SpotRuntime) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SpotRuntime.Marshal(b, m, deterministic)
}
func (m *SpotRuntime) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SpotRuntime.Merge(m, src)
}
func (m *SpotRuntime) XXX_Size() int {
	return xxx_messageInfo_SpotRuntime.Size(m)
}
func (m *SpotRuntime) XXX_DiscardUnknown() {
	xxx_messageInfo_SpotRuntime.DiscardUnknown(m)
}

var xxx_messageInfo_SpotRuntime proto.InternalMessageInfo

func (m *SpotRuntime) GetResourceid() string {
	if m != nil {
		return m.Resourceid
	}
	return ""
}

func (m *SpotRuntime) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *SpotRuntime) GetCitype() int32 {
	if m != nil {
		return m.Citype
	}
	return 0
}

func (m *SpotRuntime) GetSpottype() int32 {
	if m != nil {
		return m.Spottype
	}
	return 0
}

func (m *SpotRuntime) GetBindid() string {
	if m != nil {
		return m.Bindid
	}
	return ""
}

func (m *SpotRuntime) GetParent() string {
	if m != nil {
		return m.Parent
	}
	return ""
}

func (m *SpotRuntime) GetPrecision() int32 {
	if m != nil {
		return m.Precision
	}
	return 0
}

func (m *SpotRuntime) GetValuetype() int32 {
	if m != nil {
		return m.Valuetype
	}
	return 0
}

func (m *SpotRuntime) GetValuesource() int32 {
	if m != nil {
		return m.Valuesource
	}
	return 0
}

func (m *SpotRuntime) GetLaststatus() int32 {
	if m != nil {
		return m.Laststatus
	}
	return 0
}

func (m *SpotRuntime) GetLasttime() int64 {
	if m != nil {
		return m.Lasttime
	}
	return 0
}

func (m *SpotRuntime) GetLastvalue() string {
	if m != nil {
		return m.Lastvalue
	}
	return ""
}

func (m *SpotRuntime) GetEventstatus() []*EventStatusRuntime {
	if m != nil {
		return m.Eventstatus
	}
	return nil
}

func (m *SpotRuntime) GetProcessor() []string {
	if m != nil {
		return m.Processor
	}
	return nil
}

type ChildStatusRun struct {
	Resourceid           string   `protobuf:"bytes,1,opt,name=resourceid,proto3" json:"resourceid,omitempty"`
	Status               int32    `protobuf:"varint,2,opt,name=status,proto3" json:"status,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ChildStatusRun) Reset()         { *m = ChildStatusRun{} }
func (m *ChildStatusRun) String() string { return proto.CompactTextString(m) }
func (*ChildStatusRun) ProtoMessage()    {}
func (*ChildStatusRun) Descriptor() ([]byte, []int) {
	return fileDescriptor_97eac33c4427d001, []int{10}
}

func (m *ChildStatusRun) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ChildStatusRun.Unmarshal(m, b)
}
func (m *ChildStatusRun) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ChildStatusRun.Marshal(b, m, deterministic)
}
func (m *ChildStatusRun) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ChildStatusRun.Merge(m, src)
}
func (m *ChildStatusRun) XXX_Size() int {
	return xxx_messageInfo_ChildStatusRun.Size(m)
}
func (m *ChildStatusRun) XXX_DiscardUnknown() {
	xxx_messageInfo_ChildStatusRun.DiscardUnknown(m)
}

var xxx_messageInfo_ChildStatusRun proto.InternalMessageInfo

func (m *ChildStatusRun) GetResourceid() string {
	if m != nil {
		return m.Resourceid
	}
	return ""
}

func (m *ChildStatusRun) GetStatus() int32 {
	if m != nil {
		return m.Status
	}
	return 0
}

type DeviceRuntime struct {
	Resourceid           string            `protobuf:"bytes,1,opt,name=resourceid,proto3" json:"resourceid,omitempty"`
	Citype               int32             `protobuf:"varint,2,opt,name=citype,proto3" json:"citype,omitempty"`
	Devicetype           string            `protobuf:"bytes,3,opt,name=devicetype,proto3" json:"devicetype,omitempty"`
	Bindboard            []string          `protobuf:"bytes,4,rep,name=bindboard,proto3" json:"bindboard,omitempty"`
	Status               int32             `protobuf:"varint,5,opt,name=status,proto3" json:"status,omitempty"`
	Lasttime             int64             `protobuf:"varint,6,opt,name=lasttime,proto3" json:"lasttime,omitempty"`
	Needupdate           bool              `protobuf:"varint,7,opt,name=needupdate,proto3" json:"needupdate,omitempty"`
	Threadindex          int32             `protobuf:"varint,8,opt,name=threadindex,proto3" json:"threadindex,omitempty"`
	Childstatus          []*ChildStatusRun `protobuf:"bytes,9,rep,name=childstatus,proto3" json:"childstatus,omitempty"`
	Childs               []*SpotRuntime    `protobuf:"bytes,10,rep,name=childs,proto3" json:"childs,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *DeviceRuntime) Reset()         { *m = DeviceRuntime{} }
func (m *DeviceRuntime) String() string { return proto.CompactTextString(m) }
func (*DeviceRuntime) ProtoMessage()    {}
func (*DeviceRuntime) Descriptor() ([]byte, []int) {
	return fileDescriptor_97eac33c4427d001, []int{11}
}

func (m *DeviceRuntime) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeviceRuntime.Unmarshal(m, b)
}
func (m *DeviceRuntime) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeviceRuntime.Marshal(b, m, deterministic)
}
func (m *DeviceRuntime) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeviceRuntime.Merge(m, src)
}
func (m *DeviceRuntime) XXX_Size() int {
	return xxx_messageInfo_DeviceRuntime.Size(m)
}
func (m *DeviceRuntime) XXX_DiscardUnknown() {
	xxx_messageInfo_DeviceRuntime.DiscardUnknown(m)
}

var xxx_messageInfo_DeviceRuntime proto.InternalMessageInfo

func (m *DeviceRuntime) GetResourceid() string {
	if m != nil {
		return m.Resourceid
	}
	return ""
}

func (m *DeviceRuntime) GetCitype() int32 {
	if m != nil {
		return m.Citype
	}
	return 0
}

func (m *DeviceRuntime) GetDevicetype() string {
	if m != nil {
		return m.Devicetype
	}
	return ""
}

func (m *DeviceRuntime) GetBindboard() []string {
	if m != nil {
		return m.Bindboard
	}
	return nil
}

func (m *DeviceRuntime) GetStatus() int32 {
	if m != nil {
		return m.Status
	}
	return 0
}

func (m *DeviceRuntime) GetLasttime() int64 {
	if m != nil {
		return m.Lasttime
	}
	return 0
}

func (m *DeviceRuntime) GetNeedupdate() bool {
	if m != nil {
		return m.Needupdate
	}
	return false
}

func (m *DeviceRuntime) GetThreadindex() int32 {
	if m != nil {
		return m.Threadindex
	}
	return 0
}

func (m *DeviceRuntime) GetChildstatus() []*ChildStatusRun {
	if m != nil {
		return m.Childstatus
	}
	return nil
}

func (m *DeviceRuntime) GetChilds() []*SpotRuntime {
	if m != nil {
		return m.Childs
	}
	return nil
}

func init() {
	proto.RegisterType((*CommonReq)(nil), "xdevice.CommonReq")
	proto.RegisterType((*DebugDeviceRes)(nil), "xdevice.DebugDeviceRes")
	proto.RegisterType((*DebugSpotRes)(nil), "xdevice.DebugSpotRes")
	proto.RegisterType((*DebugWorkReq)(nil), "xdevice.DebugWorkReq")
	proto.RegisterType((*DebugWorkRes)(nil), "xdevice.DebugWorkRes")
	proto.RegisterType((*DebugBindRes)(nil), "xdevice.DebugBindRes")
	proto.RegisterType((*BindRuntime)(nil), "xdevice.BindRuntime")
	proto.RegisterType((*WorkerRuntime)(nil), "xdevice.WorkerRuntime")
	proto.RegisterType((*EventStatusRuntime)(nil), "xdevice.EventStatusRuntime")
	proto.RegisterType((*SpotRuntime)(nil), "xdevice.SpotRuntime")
	proto.RegisterType((*ChildStatusRun)(nil), "xdevice.ChildStatusRun")
	proto.RegisterType((*DeviceRuntime)(nil), "xdevice.DeviceRuntime")
}

func init() { proto.RegisterFile("xdevice.proto", fileDescriptor_97eac33c4427d001) }

var fileDescriptor_97eac33c4427d001 = []byte{
	// 724 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x9c, 0x55, 0x4d, 0x4f, 0xdb, 0x4c,
	0x10, 0x56, 0x1c, 0x92, 0x90, 0x31, 0xc9, 0x61, 0xc5, 0x0b, 0x56, 0x78, 0x85, 0x90, 0xc5, 0x01,
	0xb5, 0x55, 0xa8, 0x68, 0x55, 0x09, 0xa4, 0x4a, 0x15, 0x1f, 0x52, 0xcf, 0x46, 0x15, 0xed, 0xd1,
	0xc9, 0x6e, 0xc3, 0x0a, 0xc7, 0xeb, 0xae, 0xd7, 0x29, 0xfc, 0xb5, 0xfe, 0x9e, 0x1e, 0xfa, 0x33,
	0xaa, 0x9d, 0x5d, 0x6f, 0xd6, 0x24, 0x2d, 0xa8, 0x37, 0xcf, 0x33, 0x33, 0xcf, 0x7c, 0x7a, 0x07,
	0x06, 0xf7, 0x94, 0x2d, 0xf8, 0x94, 0x8d, 0x0b, 0x29, 0x94, 0x20, 0x3d, 0x2b, 0x8e, 0xf6, 0x66,
	0x42, 0xcc, 0x32, 0x76, 0x8c, 0xf0, 0xa4, 0xfa, 0x7a, 0xcc, 0xe6, 0x85, 0x7a, 0x30, 0x56, 0xf1,
	0x4b, 0xe8, 0x5f, 0x88, 0xf9, 0x5c, 0xe4, 0x09, 0xfb, 0x46, 0xf6, 0x01, 0x24, 0x2b, 0x45, 0x25,
	0xa7, 0x8c, 0xd3, 0xa8, 0x75, 0xd0, 0x3e, 0xea, 0x27, 0x1e, 0x12, 0x9f, 0xc3, 0xf0, 0x92, 0x4d,
	0xaa, 0xd9, 0x25, 0x12, 0x27, 0xac, 0x24, 0xaf, 0xa1, 0x67, 0xa2, 0x94, 0x68, 0x1e, 0x9e, 0xec,
	0x8c, 0xeb, 0x2c, 0xac, 0x51, 0x95, 0x2b, 0x3e, 0x67, 0x49, 0x6d, 0x16, 0x9f, 0xc1, 0x16, 0x72,
	0x5c, 0x17, 0x42, 0x69, 0x86, 0x17, 0xd0, 0x29, 0x0b, 0xa1, 0x6a, 0xff, 0x6d, 0xe7, 0x8f, 0x06,
	0xd6, 0xdb, 0x98, 0xc4, 0x87, 0xd6, 0xf7, 0x46, 0xc8, 0x3b, 0x9d, 0xef, 0x36, 0x74, 0x78, 0x4e,
	0xd9, 0x3d, 0xfa, 0x76, 0x12, 0x23, 0xc4, 0x1f, 0x1a, 0x56, 0x98, 0xe3, 0x77, 0x21, 0xef, 0x98,
	0x5c, 0xcd, 0xf1, 0x06, 0x71, 0x97, 0xa3, 0x35, 0x8b, 0xdf, 0x5a, 0x86, 0x73, 0x9e, 0x53, 0xcd,
	0x70, 0x08, 0xc1, 0x44, 0xae, 0x24, 0x88, 0x5a, 0xeb, 0x1a, 0x4c, 0x64, 0x7c, 0x01, 0xa1, 0x07,
	0xad, 0x34, 0xb3, 0xd5, 0x6c, 0xa6, 0x4e, 0x7e, 0xc2, 0x73, 0x5a, 0x46, 0x01, 0xf6, 0xd9, 0x08,
	0xf1, 0x17, 0x18, 0x34, 0x92, 0xf2, 0x6b, 0x6c, 0xb9, 0x1a, 0x49, 0x04, 0x3d, 0x59, 0xe5, 0x34,
	0x55, 0x69, 0x14, 0x20, 0x73, 0x2d, 0x6a, 0x4d, 0x3d, 0x91, 0x36, 0x12, 0xbb, 0xce, 0xe7, 0x40,
	0xae, 0x16, 0x2c, 0x57, 0xd7, 0x2a, 0x55, 0x55, 0xe9, 0xf1, 0x67, 0x6c, 0xc1, 0xb2, 0x9a, 0x1f,
	0x05, 0xb2, 0x03, 0xdd, 0x12, 0xcd, 0x90, 0xbe, 0x93, 0x58, 0x89, 0x8c, 0x60, 0x33, 0x4b, 0x4b,
	0x35, 0xab, 0x38, 0x8d, 0xda, 0x18, 0xd8, 0xc9, 0x64, 0x08, 0x01, 0xa7, 0xd1, 0x06, 0xa2, 0x01,
	0xa7, 0xf1, 0x8f, 0x36, 0x84, 0xde, 0x10, 0x9f, 0x6c, 0x08, 0x81, 0x8d, 0x3c, 0x9d, 0x33, 0x5b,
	0x10, 0x7e, 0xeb, 0x3c, 0xa6, 0x5c, 0x3d, 0x14, 0x0c, 0xa3, 0x75, 0x12, 0x2b, 0xe9, 0x3c, 0xf4,
	0x4a, 0xa0, 0x66, 0x03, 0x35, 0x4e, 0xd6, 0x3e, 0xba, 0x97, 0x9c, 0x46, 0x1d, 0x64, 0xb2, 0x92,
	0xc6, 0x8b, 0x54, 0xb2, 0x5c, 0x45, 0x5d, 0x83, 0x1b, 0x89, 0xfc, 0x0f, 0xfd, 0x42, 0xb2, 0x29,
	0x2f, 0xb9, 0xc8, 0xa3, 0x1e, 0x92, 0x2d, 0x01, 0xad, 0x5d, 0xa4, 0x59, 0xc5, 0x30, 0xd4, 0xa6,
	0xd1, 0x3a, 0x80, 0x1c, 0x40, 0x88, 0x82, 0x29, 0x22, 0xea, 0xa3, 0xde, 0x87, 0x74, 0xd5, 0xba,
	0x43, 0xb6, 0x9b, 0x80, 0x06, 0x1e, 0x52, 0x77, 0x54, 0x77, 0x28, 0x0a, 0x0f, 0x5a, 0x47, 0xed,
	0xc4, 0xc9, 0x3a, 0xb6, 0xfe, 0x46, 0xba, 0x68, 0x0b, 0x93, 0x5e, 0x02, 0xe4, 0x3d, 0x84, 0x4c,
	0xcf, 0xd3, 0x52, 0x0f, 0x70, 0x3d, 0xf7, 0xdc, 0x7a, 0xae, 0xce, 0x3a, 0xf1, 0xed, 0x4d, 0xd9,
	0x62, 0xca, 0xca, 0x52, 0xc8, 0x68, 0x88, 0xab, 0xb2, 0x04, 0xe2, 0x8f, 0x30, 0xbc, 0xb8, 0xe5,
	0x19, 0x75, 0x04, 0x4f, 0x8e, 0xef, 0x0f, 0x2b, 0x13, 0xff, 0x0c, 0x60, 0xd0, 0x78, 0x0b, 0x9e,
	0xc3, 0x64, 0x87, 0x1e, 0x34, 0x86, 0xbe, 0x0f, 0x60, 0x6a, 0x73, 0x0b, 0xd1, 0x4f, 0x3c, 0x44,
	0x57, 0xa4, 0x47, 0x3d, 0x11, 0xa9, 0xd4, 0x7b, 0x88, 0x15, 0x39, 0xc0, 0xcb, 0xaf, 0xb3, 0x6e,
	0xa5, 0x71, 0x00, 0xdd, 0x47, 0x03, 0xd8, 0x07, 0xc8, 0x19, 0xa3, 0x55, 0x41, 0x53, 0xc5, 0x70,
	0x37, 0x36, 0x13, 0x0f, 0xd1, 0xe3, 0x57, 0xb7, 0x92, 0xa5, 0xd4, 0xfc, 0xa2, 0x66, 0x3d, 0x7c,
	0x88, 0x9c, 0x42, 0x38, 0xd5, 0x7d, 0xb4, 0xa1, 0xfb, 0x38, 0xa4, 0x5d, 0x37, 0xa4, 0x66, 0x8f,
	0x13, 0xdf, 0x96, 0xbc, 0x82, 0xae, 0x11, 0x23, 0xf8, 0xcb, 0xd3, 0x68, 0x6d, 0x4e, 0x7e, 0x05,
	0xd0, 0xfb, 0x6c, 0xfa, 0x4c, 0xce, 0x60, 0xeb, 0x13, 0x26, 0x68, 0x65, 0xb2, 0x8c, 0x57, 0xbf,
	0xf5, 0xa3, 0x9d, 0xb1, 0x39, 0x0b, 0xe3, 0xfa, 0x2c, 0x8c, 0xaf, 0xf4, 0x59, 0x20, 0xf8, 0x3e,
	0x67, 0xec, 0x1f, 0x7d, 0x43, 0xef, 0x3e, 0xac, 0x75, 0xdd, 0xf5, 0xee, 0x43, 0xe3, 0x92, 0xbc,
	0x83, 0xbe, 0xbb, 0x0b, 0x6b, 0x3d, 0xff, 0x6b, 0x7a, 0xd6, 0xf7, 0xe3, 0xd4, 0xfa, 0xe9, 0x57,
	0x93, 0x3c, 0xb2, 0xb1, 0x77, 0x62, 0xb4, 0x16, 0x5e, 0x86, 0xd4, 0xaf, 0xf6, 0x73, 0x42, 0xda,
	0x73, 0x30, 0xe9, 0x62, 0xd9, 0x6f, 0x7e, 0x07, 0x00, 0x00, 0xff, 0xff, 0x2d, 0x57, 0xf6, 0x26,
	0x71, 0x07, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// XDeviceClient is the client API for XDevice service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type XDeviceClient interface {
	UpdateDevice(ctx context.Context, in *CommonReq, opts ...grpc.CallOption) (*empty.Empty, error)
	DeleteDevice(ctx context.Context, in *CommonReq, opts ...grpc.CallOption) (*empty.Empty, error)
	DebugDevice(ctx context.Context, in *CommonReq, opts ...grpc.CallOption) (*DebugDeviceRes, error)
	DebugSpot(ctx context.Context, in *CommonReq, opts ...grpc.CallOption) (*DebugSpotRes, error)
	DebugWork(ctx context.Context, in *DebugWorkReq, opts ...grpc.CallOption) (*DebugWorkRes, error)
	DebugBind(ctx context.Context, in *CommonReq, opts ...grpc.CallOption) (*DebugBindRes, error)
}

type xDeviceClient struct {
	cc *grpc.ClientConn
}

func NewXDeviceClient(cc *grpc.ClientConn) XDeviceClient {
	return &xDeviceClient{cc}
}

func (c *xDeviceClient) UpdateDevice(ctx context.Context, in *CommonReq, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/xdevice.XDevice/UpdateDevice", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *xDeviceClient) DeleteDevice(ctx context.Context, in *CommonReq, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/xdevice.XDevice/DeleteDevice", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *xDeviceClient) DebugDevice(ctx context.Context, in *CommonReq, opts ...grpc.CallOption) (*DebugDeviceRes, error) {
	out := new(DebugDeviceRes)
	err := c.cc.Invoke(ctx, "/xdevice.XDevice/DebugDevice", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *xDeviceClient) DebugSpot(ctx context.Context, in *CommonReq, opts ...grpc.CallOption) (*DebugSpotRes, error) {
	out := new(DebugSpotRes)
	err := c.cc.Invoke(ctx, "/xdevice.XDevice/DebugSpot", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *xDeviceClient) DebugWork(ctx context.Context, in *DebugWorkReq, opts ...grpc.CallOption) (*DebugWorkRes, error) {
	out := new(DebugWorkRes)
	err := c.cc.Invoke(ctx, "/xdevice.XDevice/DebugWork", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *xDeviceClient) DebugBind(ctx context.Context, in *CommonReq, opts ...grpc.CallOption) (*DebugBindRes, error) {
	out := new(DebugBindRes)
	err := c.cc.Invoke(ctx, "/xdevice.XDevice/DebugBind", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// XDeviceServer is the server API for XDevice service.
type XDeviceServer interface {
	UpdateDevice(context.Context, *CommonReq) (*empty.Empty, error)
	DeleteDevice(context.Context, *CommonReq) (*empty.Empty, error)
	DebugDevice(context.Context, *CommonReq) (*DebugDeviceRes, error)
	DebugSpot(context.Context, *CommonReq) (*DebugSpotRes, error)
	DebugWork(context.Context, *DebugWorkReq) (*DebugWorkRes, error)
	DebugBind(context.Context, *CommonReq) (*DebugBindRes, error)
}

// UnimplementedXDeviceServer can be embedded to have forward compatible implementations.
type UnimplementedXDeviceServer struct {
}

func (*UnimplementedXDeviceServer) UpdateDevice(ctx context.Context, req *CommonReq) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateDevice not implemented")
}
func (*UnimplementedXDeviceServer) DeleteDevice(ctx context.Context, req *CommonReq) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteDevice not implemented")
}
func (*UnimplementedXDeviceServer) DebugDevice(ctx context.Context, req *CommonReq) (*DebugDeviceRes, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DebugDevice not implemented")
}
func (*UnimplementedXDeviceServer) DebugSpot(ctx context.Context, req *CommonReq) (*DebugSpotRes, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DebugSpot not implemented")
}
func (*UnimplementedXDeviceServer) DebugWork(ctx context.Context, req *DebugWorkReq) (*DebugWorkRes, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DebugWork not implemented")
}
func (*UnimplementedXDeviceServer) DebugBind(ctx context.Context, req *CommonReq) (*DebugBindRes, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DebugBind not implemented")
}

func RegisterXDeviceServer(s *grpc.Server, srv XDeviceServer) {
	s.RegisterService(&_XDevice_serviceDesc, srv)
}

func _XDevice_UpdateDevice_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CommonReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(XDeviceServer).UpdateDevice(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/xdevice.XDevice/UpdateDevice",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(XDeviceServer).UpdateDevice(ctx, req.(*CommonReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _XDevice_DeleteDevice_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CommonReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(XDeviceServer).DeleteDevice(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/xdevice.XDevice/DeleteDevice",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(XDeviceServer).DeleteDevice(ctx, req.(*CommonReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _XDevice_DebugDevice_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CommonReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(XDeviceServer).DebugDevice(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/xdevice.XDevice/DebugDevice",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(XDeviceServer).DebugDevice(ctx, req.(*CommonReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _XDevice_DebugSpot_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CommonReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(XDeviceServer).DebugSpot(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/xdevice.XDevice/DebugSpot",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(XDeviceServer).DebugSpot(ctx, req.(*CommonReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _XDevice_DebugWork_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DebugWorkReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(XDeviceServer).DebugWork(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/xdevice.XDevice/DebugWork",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(XDeviceServer).DebugWork(ctx, req.(*DebugWorkReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _XDevice_DebugBind_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CommonReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(XDeviceServer).DebugBind(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/xdevice.XDevice/DebugBind",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(XDeviceServer).DebugBind(ctx, req.(*CommonReq))
	}
	return interceptor(ctx, in, info, handler)
}

var _XDevice_serviceDesc = grpc.ServiceDesc{
	ServiceName: "xdevice.XDevice",
	HandlerType: (*XDeviceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "UpdateDevice",
			Handler:    _XDevice_UpdateDevice_Handler,
		},
		{
			MethodName: "DeleteDevice",
			Handler:    _XDevice_DeleteDevice_Handler,
		},
		{
			MethodName: "DebugDevice",
			Handler:    _XDevice_DebugDevice_Handler,
		},
		{
			MethodName: "DebugSpot",
			Handler:    _XDevice_DebugSpot_Handler,
		},
		{
			MethodName: "DebugWork",
			Handler:    _XDevice_DebugWork_Handler,
		},
		{
			MethodName: "DebugBind",
			Handler:    _XDevice_DebugBind_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "xdevice.proto",
}
