{
  "version": 3,
  "sources": ["browser-route-module:E:\\Workspace\\jsonhero-web-main\\app\\routes\\actions\\$id\\update.ts?browser", "../../../../../app/routes/actions/$id/update.ts"],
  "sourcesContent": ["export * from \"E:\\\\Workspace\\\\jsonhero-web-main\\\\app\\\\routes\\\\actions\\\\$id\\\\update.ts\";", "import { ActionFunction, json } from \"remix\";\nimport invariant from \"tiny-invariant\";\nimport { sendEvent } from \"~/graphJSON.server\";\nimport { updateDocument } from \"~/jsonDoc.server\";\n\nexport const action: ActionFunction = async ({ params, request, context }) => {\n  invariant(params.id, \"expected params.id\");\n\n  const title = (await request.formData()).get(\"title\");\n\n  invariant(typeof title === \"string\", \"expected title\");\n\n  try {\n    const document = await updateDocument(params.id, title);\n\n    if (!document) return json({ error: \"No document with that slug\" });\n\n    context.waitUntil(\n      sendEvent({\n        type: \"update-doc\",\n        id: document.id,\n        title,\n      })\n    );\n\n    return json(document);\n  } catch (error) {\n    if (error instanceof Error) {\n      return json({ error: error.message });\n    } else {\n      return json({ error: \"Unknown error\" });\n    }\n  }\n};\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;AAAA;;;ACAA;AAEA,uBAA0B;AAC1B,qBAA+B;AAExB,IAAM,SAAyB,OAAO,EAAE,QAAQ,SAAS,cAAc;AAC5E,YAAU,OAAO,IAAI;AAErB,QAAM,QAAS,OAAM,QAAQ,YAAY,IAAI;AAE7C,YAAU,OAAO,UAAU,UAAU;AAErC,MAAI;AACF,UAAM,WAAW,MAAM,mCAAe,OAAO,IAAI;AAEjD,QAAI,CAAC;AAAU,aAAO,KAAK,EAAE,OAAO;AAEpC,YAAQ,UACN,gCAAU;AAAA,MACR,MAAM;AAAA,MACN,IAAI,SAAS;AAAA,MACb;AAAA;AAIJ,WAAO,KAAK;AAAA,WACL,OAAP;AACA,QAAI,iBAAiB,OAAO;AAC1B,aAAO,KAAK,EAAE,OAAO,MAAM;AAAA,WACtB;AACL,aAAO,KAAK,EAAE,OAAO;AAAA;AAAA;AAAA;",
  "names": []
}
