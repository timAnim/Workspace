{
  "version": 3,
  "sources": ["empty-module:~/theme.server", "browser-route-module:E:\\Workspace\\jsonhero-web-main\\app\\routes\\actions\\setTheme.ts?browser", "../../../../app/routes/actions/setTheme.ts"],
  "sourcesContent": ["module.exports = {};", "export * from \"E:\\\\Workspace\\\\jsonhero-web-main\\\\app\\\\routes\\\\actions\\\\setTheme.ts\";", "import { json, redirect } from \"remix\";\nimport type { ActionFunction, LoaderFunction } from \"remix\";\nimport { getThemeSession } from \"~/theme.server\";\nimport { isTheme } from \"~/components/ThemeProvider\";\nimport { sendEvent } from \"~/graphJSON.server\";\n\nexport const action: ActionFunction = async ({ request, context }) => {\n  const themeSession = await getThemeSession(request);\n  const requestText = await request.text();\n  const form = new URLSearchParams(requestText);\n  const theme = form.get(\"theme\");\n\n  if (!isTheme(theme)) {\n    return json({\n      success: false,\n      message: `theme value of ${theme} is not a valid theme`,\n    });\n  }\n\n  themeSession.setTheme(theme);\n\n  context.waitUntil(\n    sendEvent({\n      type: \"set-theme\",\n      theme,\n    })\n  );\n\n  return json(\n    { success: true },\n    { headers: { \"Set-Cookie\": await themeSession.commit() } }\n  );\n};\n\nexport const loader: LoaderFunction = () => redirect(\"/\", { status: 404 });\n"],
  "mappings": ";;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA,WAAO,UAAU;AAAA;AAAA;;;ACAjB;;;ACAA;AAEA,mBAAgC;AAEhC,uBAA0B;AAEnB,IAAM,SAAyB,OAAO,EAAE,SAAS,cAAc;AACpE,QAAM,eAAe,MAAM,kCAAgB;AAC3C,QAAM,cAAc,MAAM,QAAQ;AAClC,QAAM,OAAO,IAAI,gBAAgB;AACjC,QAAM,QAAQ,KAAK,IAAI;AAEvB,MAAI,CAAC,QAAQ,QAAQ;AACnB,WAAO,KAAK;AAAA,MACV,SAAS;AAAA,MACT,SAAS,kBAAkB;AAAA;AAAA;AAI/B,eAAa,SAAS;AAEtB,UAAQ,UACN,gCAAU;AAAA,IACR,MAAM;AAAA,IACN;AAAA;AAIJ,SAAO,KACL,EAAE,SAAS,QACX,EAAE,SAAS,EAAE,cAAc,MAAM,aAAa;AAAA;AAI3C,IAAM,SAAyB,MAAM,SAAS,KAAK,EAAE,QAAQ;",
  "names": []
}
