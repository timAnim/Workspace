{
  "version": 3,
  "sources": ["browser-route-module:E:\\Workspace\\jsonhero-web-main\\app\\routes\\j\\$id\\editor.tsx?browser", "../../../../../app/routes/j/$id/editor.tsx", "../../../../../app/components/JsonEditor.tsx", "../../../../../app/components/CodeEditor.tsx"],
  "sourcesContent": ["export { default } from \"E:\\\\Workspace\\\\jsonhero-web-main\\\\app\\\\routes\\\\j\\\\$id\\\\editor.tsx\";", "import { JsonEditor } from \"~/components/JsonEditor\";\n\nexport default function EditorView() {\n  return <JsonEditor />;\n}\n", "import { CodeEditor } from \"./CodeEditor\";\nimport { useJson } from \"~/hooks/useJson\";\nimport { useCallback, useMemo, useRef } from \"react\";\nimport {\n  useJsonColumnViewAPI,\n  useJsonColumnViewState,\n} from \"~/hooks/useJsonColumnView\";\nimport { ViewUpdate } from \"@uiw/react-codemirror\";\nimport jsonMap from \"json-source-map\";\nimport { JSONHeroPath } from \"@jsonhero/path\";\nimport {usePreferences} from '~/components/PreferencesProvider'\n\nexport function JsonEditor() {\n  const [json] = useJson();\n  const { selectedNodeId } = useJsonColumnViewState();\n  const { goToNodeId } = useJsonColumnViewAPI();\n  const [preferences] = usePreferences();\n\n  const jsonMapped = useMemo(() => {\n    return jsonMap.stringify(json, null, preferences?.indent || 2);\n  }, [json, preferences]);\n\n  const selection = useMemo<{ start: number; end: number } | undefined>(() => {\n    if (!selectedNodeId) {\n      return;\n    }\n\n    const path = new JSONHeroPath(selectedNodeId);\n    const pointer = path.jsonPointer();\n\n    const location = jsonMapped.pointers[pointer];\n\n    if (location) {\n      if (location.key) {\n        return { start: location.key.pos, end: location.valueEnd.pos };\n      }\n\n      return { start: location.value.pos, end: location.valueEnd.pos };\n    }\n  }, [selectedNodeId, jsonMapped]);\n\n  const currentSelectedLine = useRef<number | undefined>(undefined);\n\n  const onUpdate = useCallback(\n    (update: ViewUpdate) => {\n      if (!update.selectionSet) {\n        return;\n      }\n\n      const range = update.state.selection.ranges[0];\n      const line = update.state.doc.lineAt(range.anchor);\n\n      if (\n        currentSelectedLine.current &&\n        currentSelectedLine.current === line.number\n      ) {\n        return;\n      }\n\n      currentSelectedLine.current = line.number;\n\n      // Find the key if the selected line using jsonMapped.pointers\n      const pointerEntry = Object.entries(jsonMapped.pointers).find(\n        ([pointer, info]) => {\n          return info.value.line === line.number - 1;\n        }\n      );\n\n      if (!pointerEntry) {\n        return;\n      }\n\n      const [pointer] = pointerEntry;\n\n      const path = JSONHeroPath.fromPointer(pointer);\n\n      goToNodeId(path.toString(), \"editor\");\n    },\n    [goToNodeId]\n  );\n\n  return (\n    <CodeEditor\n      language=\"json\"\n      content={jsonMapped.json}\n      readOnly={true}\n      onUpdate={onUpdate}\n      selection={selection}\n    />\n  );\n}\n", "import { json as jsonLang } from \"@codemirror/lang-json\";\nimport {\n  EditorView,\n  TransactionSpec,\n  useCodeMirror,\n  ViewUpdate,\n} from \"@uiw/react-codemirror\";\nimport { useRef, useEffect } from \"react\";\nimport { useJsonDoc } from \"~/hooks/useJsonDoc\";\nimport { getEditorSetup } from \"~/utilities/codeMirrorSetup\";\nimport { darkTheme, lightTheme } from \"~/utilities/codeMirrorTheme\";\nimport { useTheme } from \"./ThemeProvider\";\nimport { useHotkeys } from \"react-hotkeys-hook\";\n\nexport type CodeEditorProps = {\n  content: string;\n  language?: \"json\";\n  readOnly?: boolean;\n  onChange?: (value: string) => void;\n  onUpdate?: (update: ViewUpdate) => void;\n  selection?: { start: number; end: number };\n};\n\nconst languages = {\n  json: jsonLang,\n};\n\ntype CodeEditorDefaultProps = Required<\n  Omit<CodeEditorProps, \"content\" | \"onChange\" | \"onUpdate\">\n>;\n\nconst defaultProps: CodeEditorDefaultProps = {\n  language: \"json\",\n  readOnly: true,\n  selection: { start: 0, end: 0 },\n};\n\nexport function CodeEditor(opts: CodeEditorProps) {\n  const { content, language, readOnly, onChange, onUpdate, selection } = {\n    ...defaultProps,\n    ...opts,\n  };\n\n  const [theme] = useTheme();\n\n  const extensions = getEditorSetup();\n\n  const languageExtension = languages[language];\n\n  extensions.push(languageExtension());\n\n  const editor = useRef(null);\n  const { setContainer, view, state } = useCodeMirror({\n    container: editor.current,\n    extensions,\n    editable: !readOnly,\n    contentEditable: !readOnly,\n    value: content,\n    autoFocus: false,\n    theme: theme === \"light\" ? lightTheme() : darkTheme(),\n    indentWithTab: false,\n    basicSetup: false,\n    onChange,\n    onUpdate,\n  });\n\n  useEffect(() => {\n    if (editor.current) {\n      setContainer(editor.current);\n    }\n  }, [editor.current]);\n\n  const setSelectionRef = useRef(false);\n\n  useEffect(() => {\n    if (setSelectionRef.current) {\n      return;\n    }\n\n    if (view) {\n      setSelectionRef.current = true;\n\n      const selectionStart = selection?.start ?? defaultProps.selection.start;\n      const selectionEnd = selection?.end ?? defaultProps.selection.end;\n\n      const lineNumber = state?.doc.lineAt(selectionStart).number;\n\n      const transactionSpec: TransactionSpec = {\n        selection: { anchor: selectionStart, head: selectionEnd },\n        effects: EditorView.scrollIntoView(selectionStart, {\n          y: \"start\",\n          yMargin: 100,\n        }),\n      };\n\n      view.dispatch(transactionSpec);\n    }\n  }, [selection, view, setSelectionRef.current]);\n\n  const { minimal } = useJsonDoc();\n\n  useHotkeys(\n   \"ctrl+a,meta+a,command+a\",\n   (e) => {\n     e.preventDefault();\n     view?.dispatch({ selection: { anchor: 0, head: state?.doc.length } });\n   },\n   [view, state]\n );\n\n\n  return (\n    <div>\n      <div\n        className={`${\n          minimal ? \"h-jsonViewerHeightMinimal\" : \"h-jsonViewerHeight\"\n        } overflow-y-auto no-scrollbar`}\n        ref={editor}\n      />\n    </div>\n  );\n}\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;ACAA;;;ACAA;;;ACAA;AAOA,mBAAkC;AAgBlC,IAAM,YAAY;AAAA,EAChB;AAAA;AAOF,IAAM,eAAuC;AAAA,EAC3C,UAAU;AAAA,EACV,UAAU;AAAA,EACV,WAAW,EAAE,OAAO,GAAG,KAAK;AAAA;AAGvB,oBAAoB,MAAuB;AAChD,QAAM,EAAE,SAAS,UAAU,UAAU,UAAU,UAAU,cAAc;AAAA,OAClE;AAAA,OACA;AAAA;AAGL,QAAM,CAAC,SAAS;AAEhB,QAAM,aAAa;AAEnB,QAAM,oBAAoB,UAAU;AAEpC,aAAW,KAAK;AAEhB,QAAM,SAAS,yBAAO;AACtB,QAAM,EAAE,cAAc,MAAM,UAAU,cAAc;AAAA,IAClD,WAAW,OAAO;AAAA,IAClB;AAAA,IACA,UAAU,CAAC;AAAA,IACX,iBAAiB,CAAC;AAAA,IAClB,OAAO;AAAA,IACP,WAAW;AAAA,IACX,OAAO,UAAU,UAAU,eAAe;AAAA,IAC1C,eAAe;AAAA,IACf,YAAY;AAAA,IACZ;AAAA,IACA;AAAA;AAGF,8BAAU,MAAM;AACd,QAAI,OAAO,SAAS;AAClB,mBAAa,OAAO;AAAA;AAAA,KAErB,CAAC,OAAO;AAEX,QAAM,kBAAkB,yBAAO;AAE/B,8BAAU,MAAM;AA1ElB;AA2EI,QAAI,gBAAgB,SAAS;AAC3B;AAAA;AAGF,QAAI,MAAM;AACR,sBAAgB,UAAU;AAE1B,YAAM,iBAAiB,6CAAW,UAAX,YAAoB,aAAa,UAAU;AAClE,YAAM,eAAe,6CAAW,QAAX,YAAkB,aAAa,UAAU;AAE9D,YAAM,aAAa,+BAAO,IAAI,OAAO,gBAAgB;AAErD,YAAM,kBAAmC;AAAA,QACvC,WAAW,EAAE,QAAQ,gBAAgB,MAAM;AAAA,QAC3C,SAAS,WAAW,eAAe,gBAAgB;AAAA,UACjD,GAAG;AAAA,UACH,SAAS;AAAA;AAAA;AAIb,WAAK,SAAS;AAAA;AAAA,KAEf,CAAC,WAAW,MAAM,gBAAgB;AAErC,QAAM,EAAE,YAAY;AAEpB,aACC,2BACA,CAAC,MAAM;AACL,MAAE;AACF,iCAAM,SAAS,EAAE,WAAW,EAAE,QAAQ,GAAG,MAAM,+BAAO,IAAI;AAAA,KAE5D,CAAC,MAAM;AAIR,SACE,oCAAC,OAAD,MACE,oCAAC,OAAD;AAAA,IACE,WAAW,GACT,UAAU,8BAA8B;AAAA,IAE1C,KAAK;AAAA;AAAA;;;ADnHb,oBAA6C;AAM7C,6BAAoB;AACpB,kBAA6B;AAGtB,sBAAsB;AAC3B,QAAM,CAAC,SAAQ;AACf,QAAM,EAAE,mBAAmB;AAC3B,QAAM,EAAE,eAAe;AACvB,QAAM,CAAC,eAAe;AAEtB,QAAM,aAAa,2BAAQ,MAAM;AAC/B,WAAO,+BAAQ,UAAU,OAAM,MAAM,4CAAa,WAAU;AAAA,KAC3D,CAAC,OAAM;AAEV,QAAM,YAAY,2BAAoD,MAAM;AAC1E,QAAI,CAAC,gBAAgB;AACnB;AAAA;AAGF,UAAM,OAAO,IAAI,yBAAa;AAC9B,UAAM,UAAU,KAAK;AAErB,UAAM,WAAW,WAAW,SAAS;AAErC,QAAI,UAAU;AACZ,UAAI,SAAS,KAAK;AAChB,eAAO,EAAE,OAAO,SAAS,IAAI,KAAK,KAAK,SAAS,SAAS;AAAA;AAG3D,aAAO,EAAE,OAAO,SAAS,MAAM,KAAK,KAAK,SAAS,SAAS;AAAA;AAAA,KAE5D,CAAC,gBAAgB;AAEpB,QAAM,sBAAsB,0BAA2B;AAEvD,QAAM,WAAW,+BACf,CAAC,WAAuB;AACtB,QAAI,CAAC,OAAO,cAAc;AACxB;AAAA;AAGF,UAAM,QAAQ,OAAO,MAAM,UAAU,OAAO;AAC5C,UAAM,OAAO,OAAO,MAAM,IAAI,OAAO,MAAM;AAE3C,QACE,oBAAoB,WACpB,oBAAoB,YAAY,KAAK,QACrC;AACA;AAAA;AAGF,wBAAoB,UAAU,KAAK;AAGnC,UAAM,eAAe,OAAO,QAAQ,WAAW,UAAU,KACvD,CAAC,CAAC,UAAS,UAAU;AACnB,aAAO,KAAK,MAAM,SAAS,KAAK,SAAS;AAAA;AAI7C,QAAI,CAAC,cAAc;AACjB;AAAA;AAGF,UAAM,CAAC,WAAW;AAElB,UAAM,OAAO,yBAAa,YAAY;AAEtC,eAAW,KAAK,YAAY;AAAA,KAE9B,CAAC;AAGH,SACE,oCAAC,YAAD;AAAA,IACE,UAAS;AAAA,IACT,SAAS,WAAW;AAAA,IACpB,UAAU;AAAA,IACV;AAAA,IACA;AAAA;AAAA;;;ADrFS,uBAAsB;AACnC,SAAO,oCAAC,YAAD;AAAA;",
  "names": []
}
