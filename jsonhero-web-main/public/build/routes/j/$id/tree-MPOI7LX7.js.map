{
  "version": 3,
  "sources": ["browser-route-module:E:\\Workspace\\jsonhero-web-main\\app\\routes\\j\\$id\\tree.tsx?browser", "../../../../../app/routes/j/$id/tree.tsx", "../../../../../app/components/JsonTreeView.tsx"],
  "sourcesContent": ["export { default } from \"E:\\\\Workspace\\\\jsonhero-web-main\\\\app\\\\routes\\\\j\\\\$id\\\\tree.tsx\";", "import { JsonTreeView } from \"~/components/JsonTreeView\";\n\nexport default function TreeViewPage() {\n  return <JsonTreeView />;\n}\n", "import { ChevronDownIcon, ChevronRightIcon } from \"@heroicons/react/outline\";\nimport { useEffect, useRef } from \"react\";\nimport {\n  useJsonColumnViewAPI,\n  useJsonColumnViewState,\n} from \"~/hooks/useJsonColumnView\";\nimport { useJsonDoc } from \"~/hooks/useJsonDoc\";\nimport { JsonTreeViewNode, useJsonTreeViewContext } from \"~/hooks/useJsonTree\";\nimport { VirtualNode } from \"~/hooks/useVirtualTree\";\nimport { CopySelectedNodeShortcut } from \"./CopySelectedNode\";\nimport { Body } from \"./Primitives/Body\";\nimport { Mono } from \"./Primitives/Mono\";\n\nexport function JsonTreeView() {\n  const { selectedNodeId, selectedNodeSource } = useJsonColumnViewState();\n  const { goToNodeId } = useJsonColumnViewAPI();\n\n  const { tree, parentRef } = useJsonTreeViewContext();\n\n  // Scroll to the selected node when this component is first rendered.\n  const scrolledToNodeRef = useRef(false);\n\n  useEffect(() => {\n    if (!scrolledToNodeRef.current && selectedNodeId) {\n      tree.scrollToNode(selectedNodeId);\n      scrolledToNodeRef.current = true;\n    }\n  }, [selectedNodeId, scrolledToNodeRef]);\n\n  // Yup, this is hacky.\n  // This is to prevent the selection not changing the first time you try to move to a new node in the tree\n  const focusCount = useRef<number>(0);\n\n  // This focuses and scrolls to the selected node when the selectedNodeId\n  // is set from a source other than this tree (e.g. the search bar, path bar, related values).\n  useEffect(() => {\n    if (\n      tree.focusedNodeId &&\n      selectedNodeId &&\n      tree.focusedNodeId !== selectedNodeId\n    ) {\n      if (selectedNodeId === \"$\") {\n        return;\n      }\n\n      if (selectedNodeSource !== \"tree\" && focusCount.current > 0) {\n        focusCount.current = focusCount.current + 1;\n        tree.focusNode(selectedNodeId);\n        tree.scrollToNode(selectedNodeId);\n      }\n    }\n  }, [tree.focusedNodeId, goToNodeId, selectedNodeId, selectedNodeSource]);\n\n  // This is what syncs the tree view's focused node to the column view selected node\n  const previousFocusedNodeId = useRef<string | null>(null);\n\n  useEffect(() => {\n    let updated = false;\n\n    if (!previousFocusedNodeId.current) {\n      previousFocusedNodeId.current = tree.focusedNodeId;\n      updated = true;\n    }\n\n    if (\n      tree.focusedNodeId &&\n      (updated || previousFocusedNodeId.current !== tree.focusedNodeId)\n    ) {\n      previousFocusedNodeId.current = tree.focusedNodeId;\n      goToNodeId(tree.focusedNodeId, \"tree\");\n    }\n  }, [previousFocusedNodeId, tree.focusedNodeId, tree.focusNode, goToNodeId]);\n\n  const treeRef = useRef<HTMLDivElement>(null);\n\n  useEffect(() => {\n    if (treeRef.current) {\n      treeRef.current.focus({ preventScroll: true });\n    }\n  }, [treeRef.current]);\n\n  const { minimal } = useJsonDoc();\n\n  return (\n    <>\n      <CopySelectedNodeShortcut />\n      <div\n        className=\"text-white w-full\"\n        ref={parentRef}\n        style={{\n          height: `calc(100vh - ${minimal ? \"66px\" : \"106px\"})`,\n          overflowY: \"auto\",\n          overflowX: \"hidden\",\n        }}\n      >\n        <div\n          className=\"relative w-full outline-none\"\n          style={{ height: `${tree.totalSize}px` }}\n          {...tree.getTreeProps()}\n          ref={treeRef}\n        >\n          {tree.nodes.map((virtualNode) => (\n            <TreeViewNode\n              virtualNode={virtualNode}\n              key={virtualNode.node.id}\n              onToggle={(node, e) => tree.toggleNode(node.id, e)}\n              selectedNodeId={selectedNodeId}\n            />\n          ))}\n        </div>\n      </div>\n    </>\n  );\n}\n\nfunction TreeViewNode({\n  virtualNode,\n  onToggle,\n  selectedNodeId,\n}: {\n  virtualNode: VirtualNode<JsonTreeViewNode>;\n  selectedNodeId?: string;\n  onToggle?: (node: JsonTreeViewNode, e: MouseEvent) => void;\n}) {\n  const { node, virtualItem, depth } = virtualNode;\n\n  const indentClassName = computeTreeNodePaddingClass(depth);\n\n  const isSelected = selectedNodeId === node.id;\n\n  return (\n    <div\n      style={{\n        position: \"absolute\",\n        top: 0,\n        left: 0,\n        width: \"100%\",\n        height: `${virtualNode.size}px`,\n        transform: `translateY(${virtualNode.start}px)`,\n      }}\n      key={virtualNode.node.id}\n      {...virtualNode.getItemProps()}\n    >\n      <div\n        className={`h-full flex pl-5 rounded-sm select-none ${\n          isSelected\n            ? \"bg-indigo-700\"\n            : virtualItem.index % 2\n            ? \"dark:bg-slate-900\"\n            : \"bg-slate-100 bg-opacity-90 dark:bg-slate-800 dark:bg-opacity-30\"\n        }`}\n      >\n        <div className={`pl-2 w-2/6 items-center flex`}>\n          {node.children && node.children.length > 0 && (\n            <span\n              onClick={(e) => {\n                if (onToggle) {\n                  e.preventDefault();\n                  onToggle(node, e.nativeEvent);\n                }\n              }}\n            >\n              {virtualNode.isCollapsed ? (\n                <ChevronRightIcon\n                  className={`w-4 h-4 mr-1 -ml-5  ${\n                    isSelected\n                      ? \"text-slate-100\"\n                      : \"text-slate-600 dark:text-slate-100\"\n                  }`}\n                />\n              ) : (\n                <ChevronDownIcon\n                  className={`w-4 h-4 mr-1 -ml-5 ${\n                    isSelected\n                      ? \"text-slate-100\"\n                      : \"text-slate-600 dark:text-slate-100\"\n                  }`}\n                />\n              )}\n            </span>\n          )}\n\n          <Body\n            className={`${indentClassName} leading-8 truncate whitespace-nowrap pl-2 pr-2 ${\n              isSelected\n                ? \"text-slate-100\"\n                : \"text-slate-700 dark:text-slate-200\"\n            }`}\n          >\n            {node.longTitle ?? node.name}\n          </Body>\n        </div>\n\n        <div className=\"flex w-4/6 items-center\">\n          <span className=\"mr-2\">\n            {node.icon && (\n              <node.icon\n                className={`h-5 w-5 ${\n                  isSelected\n                    ? \"text-slate-100\"\n                    : \"text-slate-400 dark:text-slate-500\"\n                }`}\n              />\n            )}\n          </span>\n          {node.subtitle && (\n            <Mono\n              className={`truncate pr-1 transition ${\n                isSelected\n                  ? \"text-slate-100\"\n                  : \"text-slate-500 dark:text-slate-200\"\n              }`}\n            >\n              {node.subtitle}\n            </Mono>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nfunction computeTreeNodePaddingClass(depth: number) {\n  switch (depth) {\n    case 0:\n      return \"ml-[4px] border-l border-slate-400/70\";\n    case 1:\n      return \"ml-[calc(12px_+_4px)] border-l border-pink-400/70\";\n    case 2:\n      return \"ml-[calc(12px_*_2_+_4px)] border-l border-blue-400/70\";\n    case 3:\n      return \"ml-[calc(12px_*_3_+_4px)] border-l border-orange-400/70\";\n    case 4:\n      return \"ml-[calc(12px_*_4_+_4px)] border-l border-emerald-400/70\";\n    case 5:\n      return \"ml-[calc(12px_*_5_+_4px)] border-l border-pink-400/70\";\n    case 6:\n      return \"ml-[calc(12px_*_6_+_4px)] border-l border-blue-400/70\";\n    case 7:\n      return \"ml-[calc(12px_*_7_+_4px)] border-l border-orange-400/70\";\n    case 8:\n      return \"ml-[calc(12px_*_8_+_4px)] border-l border-emerald-400/70\";\n    case 9:\n      return \"ml-[calc(12px_*_9_+_4px)] border-l border-pink-400/70\";\n    case 10:\n      return \"ml-[calc(12px_*_10_+_4px)] border-l border-orange-400/70\";\n    default:\n      return \"ml-[calc(12px_*_11_+_4px)] border-l border-slate-400/70\";\n  }\n}\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;ACAA;;;ACAA;AACA,mBAAkC;AAY3B,wBAAwB;AAC7B,QAAM,EAAE,gBAAgB,uBAAuB;AAC/C,QAAM,EAAE,eAAe;AAEvB,QAAM,EAAE,MAAM,cAAc;AAG5B,QAAM,oBAAoB,yBAAO;AAEjC,8BAAU,MAAM;AACd,QAAI,CAAC,kBAAkB,WAAW,gBAAgB;AAChD,WAAK,aAAa;AAClB,wBAAkB,UAAU;AAAA;AAAA,KAE7B,CAAC,gBAAgB;AAIpB,QAAM,aAAa,yBAAe;AAIlC,8BAAU,MAAM;AACd,QACE,KAAK,iBACL,kBACA,KAAK,kBAAkB,gBACvB;AACA,UAAI,mBAAmB,KAAK;AAC1B;AAAA;AAGF,UAAI,uBAAuB,UAAU,WAAW,UAAU,GAAG;AAC3D,mBAAW,UAAU,WAAW,UAAU;AAC1C,aAAK,UAAU;AACf,aAAK,aAAa;AAAA;AAAA;AAAA,KAGrB,CAAC,KAAK,eAAe,YAAY,gBAAgB;AAGpD,QAAM,wBAAwB,yBAAsB;AAEpD,8BAAU,MAAM;AACd,QAAI,UAAU;AAEd,QAAI,CAAC,sBAAsB,SAAS;AAClC,4BAAsB,UAAU,KAAK;AACrC,gBAAU;AAAA;AAGZ,QACE,KAAK,iBACJ,YAAW,sBAAsB,YAAY,KAAK,gBACnD;AACA,4BAAsB,UAAU,KAAK;AACrC,iBAAW,KAAK,eAAe;AAAA;AAAA,KAEhC,CAAC,uBAAuB,KAAK,eAAe,KAAK,WAAW;AAE/D,QAAM,UAAU,yBAAuB;AAEvC,8BAAU,MAAM;AACd,QAAI,QAAQ,SAAS;AACnB,cAAQ,QAAQ,MAAM,EAAE,eAAe;AAAA;AAAA,KAExC,CAAC,QAAQ;AAEZ,QAAM,EAAE,YAAY;AAEpB,SACE,0DACE,oCAAC,0BAAD,OACA,oCAAC,OAAD;AAAA,IACE,WAAU;AAAA,IACV,KAAK;AAAA,IACL,OAAO;AAAA,MACL,QAAQ,gBAAgB,UAAU,SAAS;AAAA,MAC3C,WAAW;AAAA,MACX,WAAW;AAAA;AAAA,KAGb,oCAAC,OAAD;AAAA,IACE,WAAU;AAAA,IACV,OAAO,EAAE,QAAQ,GAAG,KAAK;AAAA,OACrB,KAAK;AAAA,IACT,KAAK;AAAA,KAEJ,KAAK,MAAM,IAAI,CAAC,gBACf,oCAAC,cAAD;AAAA,IACE;AAAA,IACA,KAAK,YAAY,KAAK;AAAA,IACtB,UAAU,CAAC,MAAM,MAAM,KAAK,WAAW,KAAK,IAAI;AAAA,IAChD;AAAA;AAAA;AASd,sBAAsB;AAAA,EACpB;AAAA,EACA;AAAA,EACA;AAAA,GAKC;AA3HH;AA4HE,QAAM,EAAE,MAAM,aAAa,UAAU;AAErC,QAAM,kBAAkB,4BAA4B;AAEpD,QAAM,aAAa,mBAAmB,KAAK;AAE3C,SACE,oCAAC,OAAD;AAAA,IACE,OAAO;AAAA,MACL,UAAU;AAAA,MACV,KAAK;AAAA,MACL,MAAM;AAAA,MACN,OAAO;AAAA,MACP,QAAQ,GAAG,YAAY;AAAA,MACvB,WAAW,cAAc,YAAY;AAAA;AAAA,IAEvC,KAAK,YAAY,KAAK;AAAA,OAClB,YAAY;AAAA,KAEhB,oCAAC,OAAD;AAAA,IACE,WAAW,2CACT,aACI,kBACA,YAAY,QAAQ,IACpB,sBACA;AAAA,KAGN,oCAAC,OAAD;AAAA,IAAK,WAAW;AAAA,KACb,KAAK,YAAY,KAAK,SAAS,SAAS,KACvC,oCAAC,QAAD;AAAA,IACE,SAAS,CAAC,MAAM;AACd,UAAI,UAAU;AACZ,UAAE;AACF,iBAAS,MAAM,EAAE;AAAA;AAAA;AAAA,KAIpB,YAAY,cACX,oCAAC,0BAAD;AAAA,IACE,WAAW,uBACT,aACI,mBACA;AAAA,OAIR,oCAAC,yBAAD;AAAA,IACE,WAAW,sBACT,aACI,mBACA;AAAA,OAOd,oCAAC,MAAD;AAAA,IACE,WAAW,GAAG,kEACZ,aACI,mBACA;AAAA,KAGL,WAAK,cAAL,YAAkB,KAAK,QAI5B,oCAAC,OAAD;AAAA,IAAK,WAAU;AAAA,KACb,oCAAC,QAAD;AAAA,IAAM,WAAU;AAAA,KACb,KAAK,QACJ,oCAAC,KAAK,MAAN;AAAA,IACE,WAAW,WACT,aACI,mBACA;AAAA,OAKX,KAAK,YACJ,oCAAC,MAAD;AAAA,IACE,WAAW,4BACT,aACI,mBACA;AAAA,KAGL,KAAK;AAAA;AASpB,qCAAqC,OAAe;AAClD,UAAQ;AAAA,SACD;AACH,aAAO;AAAA,SACJ;AACH,aAAO;AAAA,SACJ;AACH,aAAO;AAAA,SACJ;AACH,aAAO;AAAA,SACJ;AACH,aAAO;AAAA,SACJ;AACH,aAAO;AAAA,SACJ;AACH,aAAO;AAAA,SACJ;AACH,aAAO;AAAA,SACJ;AACH,aAAO;AAAA,SACJ;AACH,aAAO;AAAA,SACJ;AACH,aAAO;AAAA;AAEP,aAAO;AAAA;AAAA;;;ADrPE,wBAAwB;AACrC,SAAO,oCAAC,cAAD;AAAA;",
  "names": []
}
