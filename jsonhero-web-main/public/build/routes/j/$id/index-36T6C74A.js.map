{
  "version": 3,
  "sources": ["browser-route-module:E:\\Workspace\\jsonhero-web-main\\app\\routes\\j\\$id\\index.tsx?browser", "../../../../../app/routes/j/$id/index.tsx", "../../../../../app/components/JsonColumnView.tsx", "../../../../../app/components/Columns.tsx", "../../../../../app/components/BlankColumn.tsx", "../../../../../app/components/Column.tsx", "../../../../../app/components/ColumnItem.tsx"],
  "sourcesContent": ["export { default } from \"E:\\\\Workspace\\\\jsonhero-web-main\\\\app\\\\routes\\\\j\\\\$id\\\\index.tsx\";", "import { JsonColumnView } from \"~/components/JsonColumnView\";\n\nexport default function DefaultView() {\n  return <JsonColumnView />;\n}\n", "import {\n  useJsonColumnViewAPI,\n  useJsonColumnViewState,\n} from \"../hooks/useJsonColumnView\";\nimport { useHotkeys } from \"react-hotkeys-hook\";\nimport { Columns } from \"./Columns\";\nimport { CopySelectedNodeShortcut } from \"./CopySelectedNode\";\n\nexport function JsonColumnView() {\n  const { getColumnViewProps, columns } = useJsonColumnViewState();\n\n  return (\n    <>\n      <KeyboardShortcuts />\n      <div {...getColumnViewProps()}>\n        <Columns columns={columns} />\n      </div>\n    </>\n  );\n}\n\nfunction KeyboardShortcuts() {\n  const api = useJsonColumnViewAPI();\n\n  useHotkeys(\n    \"down\",\n    (e) => {\n      e.preventDefault();\n      api.goToNextSibling();\n    },\n    { enabled: true },\n    [api]\n  );\n\n  useHotkeys(\n    \"up\",\n    (e) => {\n      e.preventDefault();\n      api.goToPreviousSibling();\n    },\n    [api]\n  );\n\n  useHotkeys(\n    \"right\",\n    (e) => {\n      e.preventDefault();\n      api.goToChildren();\n    },\n    [api]\n  );\n\n  useHotkeys(\n    \"left,alt+left\",\n    (e) => {\n      e.preventDefault();\n      api.goToParent({ source: e });\n    },\n    [api]\n  );\n\n  useHotkeys(\n    \"esc\",\n    (e) => {\n      e.preventDefault();\n      api.resetSelection();\n    },\n    [api]\n  );\n\n  return <>\n    <CopySelectedNodeShortcut />\n  </>;\n}\n", "import { JSONHeroPath } from \"@jsonhero/path\";\nimport { memo, useMemo } from \"react\";\nimport { useJson } from \"~/hooks/useJson\";\nimport {\n  useJsonColumnViewAPI,\n  useJsonColumnViewState,\n} from \"~/hooks/useJsonColumnView\";\nimport { ColumnDefinition } from \"~/useColumnView\";\nimport { BlankColumn } from \"./BlankColumn\";\nimport { Column } from \"./Column\";\nimport { ColumnItem } from \"./ColumnItem\";\n\nfunction ColumnsElement({ columns }: { columns: ColumnDefinition[] }) {\n  const [json] = useJson();\n  const { selectedPath, highlightedPath, highlightedNodeId } =\n    useJsonColumnViewState();\n  const { goToNodeId } = useJsonColumnViewAPI();\n  const highlightedItemIsValue = useMemo<boolean>(() => {\n    if (highlightedNodeId == null) {\n      return false;\n    }\n\n    const path = new JSONHeroPath(highlightedNodeId);\n    let item = path.first(json);\n\n    return typeof item !== \"object\";\n  }, [highlightedPath, json]);\n\n  return (\n    <div className=\"columns flex flex-grow overflow-x-auto focus:outline-none no-scrollbar\">\n      {columns.map((column) => {\n        return (\n          <Column\n            key={column.id}\n            id={column.id}\n            title={column.title}\n            icon={column.icon}\n            hasHighlightedElement={\n              highlightedPath[highlightedPath.length - 2] === column.id\n            }\n          >\n            {column.items.map((item) => (\n              <ColumnItem\n                key={item.id}\n                item={item}\n                json={json}\n                isSelected={selectedPath.includes(item.id)}\n                isHighlighted={\n                  highlightedPath[highlightedPath.length - 1] === item.id\n                }\n                onClick={(id) => goToNodeId(id, \"columnView\")}\n              />\n            ))}\n          </Column>\n        );\n      })}\n      {highlightedItemIsValue ? <BlankColumn /> : null}\n    </div>\n  );\n}\nexport const Columns = memo(ColumnsElement);\n", "import { memo } from \"react\";\n\nfunction BlankColumnElement() {\n  return (\n    <div\n      className={\n        \"column flex-none border-r-[1px] border-slate-300 w-80 transition dark:border-slate-600\"\n      }\n    ></div>\n  );\n}\n\nexport const BlankColumn = memo(BlankColumnElement);\n", "import { Title } from \"./Primitives/Title\";\nimport { colorForItemAtPath } from \"~/utilities/colors\";\nimport { IconComponent } from \"~/useColumnView\";\nimport { useJson } from \"../hooks/useJson\";\nimport { memo, useMemo } from \"react\";\nimport { useJsonDoc } from \"~/hooks/useJsonDoc\";\n\nexport type ColumnProps = {\n  id: string;\n  title: string;\n  icon?: IconComponent;\n  hasHighlightedElement: boolean;\n  children: React.ReactNode;\n};\n\nfunction ColumnElement(column: ColumnProps) {\n  const { id, title, children } = column;\n  const [json] = useJson();\n  const { minimal } = useJsonDoc();\n  const iconColor = useMemo(() => colorForItemAtPath(id, json), [id, json]);\n\n  return (\n    <div\n      className={\n        \"column flex-none border-r-[1px] border-slate-300 w-80 transition dark:border-slate-600\"\n      }\n    >\n      <div className=\"flex items-center text-slate-800 bg-slate-50 mb-[3px] p-2 pb-0 transition dark:bg-slate-900 dark:text-slate-300\">\n        {column.icon && <column.icon className=\"h-6 w-6 mr-1\" />}\n        <Title className=\"text-ellipsis overflow-hidden\">{title}</Title>\n      </div>\n      <div\n        className={`overflow-y-auto ${\n          minimal ? \"h-viewerHeightMinimal\" : \"h-viewerHeight\"\n        } no-scrollbar`}\n      >\n        {children}\n      </div>\n    </div>\n  );\n}\n\nexport const Column = memo(ColumnElement);\n", "import { ChevronRightIcon } from \"@heroicons/react/outline\";\nimport { Mono } from \"./Primitives/Mono\";\nimport { memo, useEffect, useMemo, useRef } from \"react\";\nimport { ColumnViewNode } from \"~/useColumnView\";\nimport { colorForItemAtPath } from \"~/utilities/colors\";\nimport { Body } from \"./Primitives/Body\";\n\nexport type ColumnItemProps = {\n  item: ColumnViewNode;\n  json: unknown;\n  isSelected: boolean;\n  isHighlighted: boolean;\n  onClick?: (id: string) => void;\n};\n\nfunction ColumnItemElement({\n  item,\n  json,\n  isSelected,\n  isHighlighted,\n  onClick,\n}: ColumnItemProps) {\n  const htmlElement = useRef<HTMLDivElement>(null);\n\n  const showArrow = item.children.length > 0;\n\n  const stateStyle = useMemo<string>(() => {\n    if (isHighlighted) {\n      return \"bg-slate-300 text-slate-700 hover:bg-slate-400 hover:bg-opacity-60 transition duration-75 ease-out dark:bg-white dark:bg-opacity-[15%] dark:text-slate-100\";\n    }\n\n    if (isSelected) {\n      return \"bg-slate-200 hover:bg-slate-300 transition duration-75 ease-out dark:bg-white dark:bg-opacity-[5%] dark:hover:bg-white dark:hover:bg-opacity-[10%] dark:text-slate-200\";\n    }\n\n    return \"hover:bg-slate-100 transition duration-75 ease-out dark:hover:bg-white dark:hover:bg-opacity-[5%] dark:text-slate-400\";\n  }, [isSelected, isHighlighted]);\n\n  const iconColor = useMemo<string>(\n    () => colorForItemAtPath(item.id, json),\n    [item.id, json]\n  );\n\n  useEffect(() => {\n    if (isSelected || isHighlighted) {\n      htmlElement.current?.scrollIntoView({\n        block: \"nearest\",\n        inline: \"center\",\n      });\n    }\n  }, [isSelected, isHighlighted]);\n\n  return (\n    <div\n      className={`flex h-9 items-center justify-items-stretch mx-1 px-1 py-1 my-1 rounded-sm ${stateStyle}`}\n      onClick={() => onClick && onClick(item.id)}\n      ref={htmlElement}\n    >\n      <div className=\"w-4 flex-none flex-col justify-items-center\">\n        {item.icon && (\n          <item.icon\n            className={`h-5 w-5 ${\n              isSelected && isHighlighted\n                ? \"text-slate-900 dark:text-slate-300\"\n                : \"text-slate-500\"\n            }`}\n          />\n        )}\n      </div>\n\n      <div className=\"flex flex-grow flex-shrink items-baseline justify-between truncate\">\n        <Body className=\"flex-grow flex-shrink-0 pl-3 pr-2 \">{item.title}</Body>\n        {item.subtitle && (\n          <Mono\n            className={`truncate pr-1 transition duration-75 ${\n              isHighlighted\n                ? \"text-gray-500 dark:text-slate-100\"\n                : \"text-gray-400 dark:text-gray-500\"\n            }`}\n          >\n            {item.subtitle}\n          </Mono>\n        )}\n      </div>\n\n      {showArrow && (\n        <ChevronRightIcon className=\"flex-none w-4 h-4 text-gray-400\" />\n      )}\n    </div>\n  );\n}\n\nexport const ColumnItem = memo(ColumnItemElement);\n"],
  "mappings": "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",
  "names": []
}
