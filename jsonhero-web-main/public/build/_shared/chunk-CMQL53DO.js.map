{
  "version": 3,
  "sources": ["../../../app/components/PreferencesProvider.tsx"],
  "sourcesContent": ["import {createContext, Dispatch, ReactNode, SetStateAction, useContext, useEffect, useState} from 'react';\n\ninterface Preferences {\n  indent: number;\n}\n\nconst PreferencesDefaults: Preferences = {\n  indent: 2,\n};\n\ntype PreferencesContextType = [\n  Preferences | undefined,\n  Dispatch<SetStateAction<Preferences | undefined>>\n];\n\nconst PreferencesContext = createContext<PreferencesContextType | undefined>(undefined);\n\nconst loadPreferences = (): Preferences => {\n  const savedPreferences = localStorage.getItem('preferences');\n  const parsedPreferences = JSON.parse(savedPreferences || '{}');\n  for (const [key, value] of Object.entries(PreferencesDefaults)) {\n    if (!parsedPreferences[key]) parsedPreferences[key] = value;\n  }\n  return parsedPreferences;\n};\nconst savePreferences = (preferences: Preferences) => localStorage.setItem('preferences', JSON.stringify(preferences));\n\nexport function PreferencesProvider({\n  children,\n}: {\n  children: ReactNode;\n}) {\n  const [preferences, setPreferences] = useState<Preferences>();\n\n  useEffect(() => {\n    const preferences = loadPreferences();\n    setPreferences(preferences);\n  }, []);\n\n  useEffect(() => {\n    if (preferences === undefined) return;\n    savePreferences(preferences);\n  }, [preferences]);\n\n  return (\n    <PreferencesContext.Provider value={[preferences, setPreferences]}>\n      {children}\n    </PreferencesContext.Provider>\n  );\n}\n\nexport function usePreferences() {\n  const context = useContext(PreferencesContext);\n  if (context === undefined) {\n    throw new Error('usePreferences must be used within a PreferencesProvider');\n  }\n  return context;\n}"],
  "mappings": ";;;;;;;;AAAA;AAAA,mBAAkG;AAMlG,IAAM,sBAAmC;AAAA,EACvC,QAAQ;AAAA;AAQV,IAAM,qBAAqB,gCAAkD;AAE7E,IAAM,kBAAkB,MAAmB;AACzC,QAAM,mBAAmB,aAAa,QAAQ;AAC9C,QAAM,oBAAoB,KAAK,MAAM,oBAAoB;AACzD,aAAW,CAAC,KAAK,UAAU,OAAO,QAAQ,sBAAsB;AAC9D,QAAI,CAAC,kBAAkB;AAAM,wBAAkB,OAAO;AAAA;AAExD,SAAO;AAAA;AAET,IAAM,kBAAkB,CAAC,gBAA6B,aAAa,QAAQ,eAAe,KAAK,UAAU;AAElG,6BAA6B;AAAA,EAClC;AAAA,GAGC;AACD,QAAM,CAAC,aAAa,kBAAkB;AAEtC,8BAAU,MAAM;AACd,UAAM,eAAc;AACpB,mBAAe;AAAA,KACd;AAEH,8BAAU,MAAM;AACd,QAAI,gBAAgB;AAAW;AAC/B,oBAAgB;AAAA,KACf,CAAC;AAEJ,SACE,oCAAC,mBAAmB,UAApB;AAAA,IAA6B,OAAO,CAAC,aAAa;AAAA,KAC/C;AAAA;AAKA,0BAA0B;AAC/B,QAAM,UAAU,6BAAW;AAC3B,MAAI,YAAY,QAAW;AACzB,UAAM,IAAI,MAAM;AAAA;AAElB,SAAO;AAAA;",
  "names": []
}
