{
  "version": 3,
  "sources": ["../../../node_modules/color-name/index.js", "../../../node_modules/simple-swizzle/node_modules/is-arrayish/index.js", "../../../node_modules/simple-swizzle/index.js", "../../../node_modules/color-string/index.js", "../../../node_modules/color/node_modules/color-name/index.js", "../../../node_modules/color/node_modules/color-convert/conversions.js", "../../../node_modules/color/node_modules/color-convert/route.js", "../../../node_modules/color/node_modules/color-convert/index.js", "../../../node_modules/color/index.js", "../../../app/components/Primitives/ExtraLargeTitle.tsx", "../../../app/components/Primitives/SmallSubtitle.tsx", "../../../app/components/JsonPreview.tsx", "../../../app/components/CopyTextButton.tsx", "../../../app/components/CopyText.tsx", "../../../app/components/Preview/PreviewValue.tsx", "../../../app/components/Preview/Types/PreviewString.tsx", "../../../app/components/CodeViewer.tsx", "../../../app/components/Preview/PreviewBox.tsx", "../../../app/components/Preview/Types/PreviewAudioUri.tsx", "../../../app/components/Preview/Types/PreviewDate.tsx", "../../../app/components/Preview/CalendarMonth.tsx", "../../../app/components/Preview/Types/PreviewImageUri.tsx", "../../../app/components/Preview/Types/PreviewIPFSImage.tsx", "../../../app/components/Preview/Types/PreviewUri.tsx", "../../../app/hooks/useLoadWhenOnline.tsx", "../../../app/components/Preview/Types/PreviewUriElement.tsx", "../../../app/components/Preview/Types/PreviewHtml.tsx", "../../../app/components/Preview/Types/PreviewImage.tsx", "../../../app/components/Preview/PreviewProperties.tsx", "../../../app/components/Preview/Types/PreviewJson.tsx", "../../../app/components/OpenInWindow.tsx", "../../../app/components/Preview/Types/PreviewVideoUri.tsx", "../../../app/components/Properties/PropertiesValue.tsx", "../../../app/components/Properties/PropertiesInt.tsx", "../../../app/components/DataTable.tsx", "../../../app/components/ValueIcon.tsx", "../../../app/components/Properties/PropertiesFloat.tsx", "../../../app/components/Properties/PropertiesString.tsx", "../../../app/utilities/classnames.ts"],
  "sourcesContent": ["'use strict'\r\n\r\nmodule.exports = {\r\n\t\"aliceblue\": [240, 248, 255],\r\n\t\"antiquewhite\": [250, 235, 215],\r\n\t\"aqua\": [0, 255, 255],\r\n\t\"aquamarine\": [127, 255, 212],\r\n\t\"azure\": [240, 255, 255],\r\n\t\"beige\": [245, 245, 220],\r\n\t\"bisque\": [255, 228, 196],\r\n\t\"black\": [0, 0, 0],\r\n\t\"blanchedalmond\": [255, 235, 205],\r\n\t\"blue\": [0, 0, 255],\r\n\t\"blueviolet\": [138, 43, 226],\r\n\t\"brown\": [165, 42, 42],\r\n\t\"burlywood\": [222, 184, 135],\r\n\t\"cadetblue\": [95, 158, 160],\r\n\t\"chartreuse\": [127, 255, 0],\r\n\t\"chocolate\": [210, 105, 30],\r\n\t\"coral\": [255, 127, 80],\r\n\t\"cornflowerblue\": [100, 149, 237],\r\n\t\"cornsilk\": [255, 248, 220],\r\n\t\"crimson\": [220, 20, 60],\r\n\t\"cyan\": [0, 255, 255],\r\n\t\"darkblue\": [0, 0, 139],\r\n\t\"darkcyan\": [0, 139, 139],\r\n\t\"darkgoldenrod\": [184, 134, 11],\r\n\t\"darkgray\": [169, 169, 169],\r\n\t\"darkgreen\": [0, 100, 0],\r\n\t\"darkgrey\": [169, 169, 169],\r\n\t\"darkkhaki\": [189, 183, 107],\r\n\t\"darkmagenta\": [139, 0, 139],\r\n\t\"darkolivegreen\": [85, 107, 47],\r\n\t\"darkorange\": [255, 140, 0],\r\n\t\"darkorchid\": [153, 50, 204],\r\n\t\"darkred\": [139, 0, 0],\r\n\t\"darksalmon\": [233, 150, 122],\r\n\t\"darkseagreen\": [143, 188, 143],\r\n\t\"darkslateblue\": [72, 61, 139],\r\n\t\"darkslategray\": [47, 79, 79],\r\n\t\"darkslategrey\": [47, 79, 79],\r\n\t\"darkturquoise\": [0, 206, 209],\r\n\t\"darkviolet\": [148, 0, 211],\r\n\t\"deeppink\": [255, 20, 147],\r\n\t\"deepskyblue\": [0, 191, 255],\r\n\t\"dimgray\": [105, 105, 105],\r\n\t\"dimgrey\": [105, 105, 105],\r\n\t\"dodgerblue\": [30, 144, 255],\r\n\t\"firebrick\": [178, 34, 34],\r\n\t\"floralwhite\": [255, 250, 240],\r\n\t\"forestgreen\": [34, 139, 34],\r\n\t\"fuchsia\": [255, 0, 255],\r\n\t\"gainsboro\": [220, 220, 220],\r\n\t\"ghostwhite\": [248, 248, 255],\r\n\t\"gold\": [255, 215, 0],\r\n\t\"goldenrod\": [218, 165, 32],\r\n\t\"gray\": [128, 128, 128],\r\n\t\"green\": [0, 128, 0],\r\n\t\"greenyellow\": [173, 255, 47],\r\n\t\"grey\": [128, 128, 128],\r\n\t\"honeydew\": [240, 255, 240],\r\n\t\"hotpink\": [255, 105, 180],\r\n\t\"indianred\": [205, 92, 92],\r\n\t\"indigo\": [75, 0, 130],\r\n\t\"ivory\": [255, 255, 240],\r\n\t\"khaki\": [240, 230, 140],\r\n\t\"lavender\": [230, 230, 250],\r\n\t\"lavenderblush\": [255, 240, 245],\r\n\t\"lawngreen\": [124, 252, 0],\r\n\t\"lemonchiffon\": [255, 250, 205],\r\n\t\"lightblue\": [173, 216, 230],\r\n\t\"lightcoral\": [240, 128, 128],\r\n\t\"lightcyan\": [224, 255, 255],\r\n\t\"lightgoldenrodyellow\": [250, 250, 210],\r\n\t\"lightgray\": [211, 211, 211],\r\n\t\"lightgreen\": [144, 238, 144],\r\n\t\"lightgrey\": [211, 211, 211],\r\n\t\"lightpink\": [255, 182, 193],\r\n\t\"lightsalmon\": [255, 160, 122],\r\n\t\"lightseagreen\": [32, 178, 170],\r\n\t\"lightskyblue\": [135, 206, 250],\r\n\t\"lightslategray\": [119, 136, 153],\r\n\t\"lightslategrey\": [119, 136, 153],\r\n\t\"lightsteelblue\": [176, 196, 222],\r\n\t\"lightyellow\": [255, 255, 224],\r\n\t\"lime\": [0, 255, 0],\r\n\t\"limegreen\": [50, 205, 50],\r\n\t\"linen\": [250, 240, 230],\r\n\t\"magenta\": [255, 0, 255],\r\n\t\"maroon\": [128, 0, 0],\r\n\t\"mediumaquamarine\": [102, 205, 170],\r\n\t\"mediumblue\": [0, 0, 205],\r\n\t\"mediumorchid\": [186, 85, 211],\r\n\t\"mediumpurple\": [147, 112, 219],\r\n\t\"mediumseagreen\": [60, 179, 113],\r\n\t\"mediumslateblue\": [123, 104, 238],\r\n\t\"mediumspringgreen\": [0, 250, 154],\r\n\t\"mediumturquoise\": [72, 209, 204],\r\n\t\"mediumvioletred\": [199, 21, 133],\r\n\t\"midnightblue\": [25, 25, 112],\r\n\t\"mintcream\": [245, 255, 250],\r\n\t\"mistyrose\": [255, 228, 225],\r\n\t\"moccasin\": [255, 228, 181],\r\n\t\"navajowhite\": [255, 222, 173],\r\n\t\"navy\": [0, 0, 128],\r\n\t\"oldlace\": [253, 245, 230],\r\n\t\"olive\": [128, 128, 0],\r\n\t\"olivedrab\": [107, 142, 35],\r\n\t\"orange\": [255, 165, 0],\r\n\t\"orangered\": [255, 69, 0],\r\n\t\"orchid\": [218, 112, 214],\r\n\t\"palegoldenrod\": [238, 232, 170],\r\n\t\"palegreen\": [152, 251, 152],\r\n\t\"paleturquoise\": [175, 238, 238],\r\n\t\"palevioletred\": [219, 112, 147],\r\n\t\"papayawhip\": [255, 239, 213],\r\n\t\"peachpuff\": [255, 218, 185],\r\n\t\"peru\": [205, 133, 63],\r\n\t\"pink\": [255, 192, 203],\r\n\t\"plum\": [221, 160, 221],\r\n\t\"powderblue\": [176, 224, 230],\r\n\t\"purple\": [128, 0, 128],\r\n\t\"rebeccapurple\": [102, 51, 153],\r\n\t\"red\": [255, 0, 0],\r\n\t\"rosybrown\": [188, 143, 143],\r\n\t\"royalblue\": [65, 105, 225],\r\n\t\"saddlebrown\": [139, 69, 19],\r\n\t\"salmon\": [250, 128, 114],\r\n\t\"sandybrown\": [244, 164, 96],\r\n\t\"seagreen\": [46, 139, 87],\r\n\t\"seashell\": [255, 245, 238],\r\n\t\"sienna\": [160, 82, 45],\r\n\t\"silver\": [192, 192, 192],\r\n\t\"skyblue\": [135, 206, 235],\r\n\t\"slateblue\": [106, 90, 205],\r\n\t\"slategray\": [112, 128, 144],\r\n\t\"slategrey\": [112, 128, 144],\r\n\t\"snow\": [255, 250, 250],\r\n\t\"springgreen\": [0, 255, 127],\r\n\t\"steelblue\": [70, 130, 180],\r\n\t\"tan\": [210, 180, 140],\r\n\t\"teal\": [0, 128, 128],\r\n\t\"thistle\": [216, 191, 216],\r\n\t\"tomato\": [255, 99, 71],\r\n\t\"turquoise\": [64, 224, 208],\r\n\t\"violet\": [238, 130, 238],\r\n\t\"wheat\": [245, 222, 179],\r\n\t\"white\": [255, 255, 255],\r\n\t\"whitesmoke\": [245, 245, 245],\r\n\t\"yellow\": [255, 255, 0],\r\n\t\"yellowgreen\": [154, 205, 50]\r\n};\r\n", "module.exports = function isArrayish(obj) {\n\tif (!obj || typeof obj === 'string') {\n\t\treturn false;\n\t}\n\n\treturn obj instanceof Array || Array.isArray(obj) ||\n\t\t(obj.length >= 0 && (obj.splice instanceof Function ||\n\t\t\t(Object.getOwnPropertyDescriptor(obj, (obj.length - 1)) && obj.constructor.name !== 'String')));\n};\n", "'use strict';\n\nvar isArrayish = require('is-arrayish');\n\nvar concat = Array.prototype.concat;\nvar slice = Array.prototype.slice;\n\nvar swizzle = module.exports = function swizzle(args) {\n\tvar results = [];\n\n\tfor (var i = 0, len = args.length; i < len; i++) {\n\t\tvar arg = args[i];\n\n\t\tif (isArrayish(arg)) {\n\t\t\t// http://jsperf.com/javascript-array-concat-vs-push/98\n\t\t\tresults = concat.call(results, slice.call(arg));\n\t\t} else {\n\t\t\tresults.push(arg);\n\t\t}\n\t}\n\n\treturn results;\n};\n\nswizzle.wrap = function (fn) {\n\treturn function () {\n\t\treturn fn(swizzle(arguments));\n\t};\n};\n", "/* MIT license */\nvar colorNames = require('color-name');\nvar swizzle = require('simple-swizzle');\nvar hasOwnProperty = Object.hasOwnProperty;\n\nvar reverseNames = {};\n\n// create a list of reverse color names\nfor (var name in colorNames) {\n\tif (hasOwnProperty.call(colorNames, name)) {\n\t\treverseNames[colorNames[name]] = name;\n\t}\n}\n\nvar cs = module.exports = {\n\tto: {},\n\tget: {}\n};\n\ncs.get = function (string) {\n\tvar prefix = string.substring(0, 3).toLowerCase();\n\tvar val;\n\tvar model;\n\tswitch (prefix) {\n\t\tcase 'hsl':\n\t\t\tval = cs.get.hsl(string);\n\t\t\tmodel = 'hsl';\n\t\t\tbreak;\n\t\tcase 'hwb':\n\t\t\tval = cs.get.hwb(string);\n\t\t\tmodel = 'hwb';\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tval = cs.get.rgb(string);\n\t\t\tmodel = 'rgb';\n\t\t\tbreak;\n\t}\n\n\tif (!val) {\n\t\treturn null;\n\t}\n\n\treturn {model: model, value: val};\n};\n\ncs.get.rgb = function (string) {\n\tif (!string) {\n\t\treturn null;\n\t}\n\n\tvar abbr = /^#([a-f0-9]{3,4})$/i;\n\tvar hex = /^#([a-f0-9]{6})([a-f0-9]{2})?$/i;\n\tvar rgba = /^rgba?\\(\\s*([+-]?\\d+)(?=[\\s,])\\s*(?:,\\s*)?([+-]?\\d+)(?=[\\s,])\\s*(?:,\\s*)?([+-]?\\d+)\\s*(?:[,|\\/]\\s*([+-]?[\\d\\.]+)(%?)\\s*)?\\)$/;\n\tvar per = /^rgba?\\(\\s*([+-]?[\\d\\.]+)\\%\\s*,?\\s*([+-]?[\\d\\.]+)\\%\\s*,?\\s*([+-]?[\\d\\.]+)\\%\\s*(?:[,|\\/]\\s*([+-]?[\\d\\.]+)(%?)\\s*)?\\)$/;\n\tvar keyword = /^(\\w+)$/;\n\n\tvar rgb = [0, 0, 0, 1];\n\tvar match;\n\tvar i;\n\tvar hexAlpha;\n\n\tif (match = string.match(hex)) {\n\t\thexAlpha = match[2];\n\t\tmatch = match[1];\n\n\t\tfor (i = 0; i < 3; i++) {\n\t\t\t// https://jsperf.com/slice-vs-substr-vs-substring-methods-long-string/19\n\t\t\tvar i2 = i * 2;\n\t\t\trgb[i] = parseInt(match.slice(i2, i2 + 2), 16);\n\t\t}\n\n\t\tif (hexAlpha) {\n\t\t\trgb[3] = parseInt(hexAlpha, 16) / 255;\n\t\t}\n\t} else if (match = string.match(abbr)) {\n\t\tmatch = match[1];\n\t\thexAlpha = match[3];\n\n\t\tfor (i = 0; i < 3; i++) {\n\t\t\trgb[i] = parseInt(match[i] + match[i], 16);\n\t\t}\n\n\t\tif (hexAlpha) {\n\t\t\trgb[3] = parseInt(hexAlpha + hexAlpha, 16) / 255;\n\t\t}\n\t} else if (match = string.match(rgba)) {\n\t\tfor (i = 0; i < 3; i++) {\n\t\t\trgb[i] = parseInt(match[i + 1], 0);\n\t\t}\n\n\t\tif (match[4]) {\n\t\t\tif (match[5]) {\n\t\t\t\trgb[3] = parseFloat(match[4]) * 0.01;\n\t\t\t} else {\n\t\t\t\trgb[3] = parseFloat(match[4]);\n\t\t\t}\n\t\t}\n\t} else if (match = string.match(per)) {\n\t\tfor (i = 0; i < 3; i++) {\n\t\t\trgb[i] = Math.round(parseFloat(match[i + 1]) * 2.55);\n\t\t}\n\n\t\tif (match[4]) {\n\t\t\tif (match[5]) {\n\t\t\t\trgb[3] = parseFloat(match[4]) * 0.01;\n\t\t\t} else {\n\t\t\t\trgb[3] = parseFloat(match[4]);\n\t\t\t}\n\t\t}\n\t} else if (match = string.match(keyword)) {\n\t\tif (match[1] === 'transparent') {\n\t\t\treturn [0, 0, 0, 0];\n\t\t}\n\n\t\tif (!hasOwnProperty.call(colorNames, match[1])) {\n\t\t\treturn null;\n\t\t}\n\n\t\trgb = colorNames[match[1]];\n\t\trgb[3] = 1;\n\n\t\treturn rgb;\n\t} else {\n\t\treturn null;\n\t}\n\n\tfor (i = 0; i < 3; i++) {\n\t\trgb[i] = clamp(rgb[i], 0, 255);\n\t}\n\trgb[3] = clamp(rgb[3], 0, 1);\n\n\treturn rgb;\n};\n\ncs.get.hsl = function (string) {\n\tif (!string) {\n\t\treturn null;\n\t}\n\n\tvar hsl = /^hsla?\\(\\s*([+-]?(?:\\d{0,3}\\.)?\\d+)(?:deg)?\\s*,?\\s*([+-]?[\\d\\.]+)%\\s*,?\\s*([+-]?[\\d\\.]+)%\\s*(?:[,|\\/]\\s*([+-]?(?=\\.\\d|\\d)(?:0|[1-9]\\d*)?(?:\\.\\d*)?(?:[eE][+-]?\\d+)?)\\s*)?\\)$/;\n\tvar match = string.match(hsl);\n\n\tif (match) {\n\t\tvar alpha = parseFloat(match[4]);\n\t\tvar h = ((parseFloat(match[1]) % 360) + 360) % 360;\n\t\tvar s = clamp(parseFloat(match[2]), 0, 100);\n\t\tvar l = clamp(parseFloat(match[3]), 0, 100);\n\t\tvar a = clamp(isNaN(alpha) ? 1 : alpha, 0, 1);\n\n\t\treturn [h, s, l, a];\n\t}\n\n\treturn null;\n};\n\ncs.get.hwb = function (string) {\n\tif (!string) {\n\t\treturn null;\n\t}\n\n\tvar hwb = /^hwb\\(\\s*([+-]?\\d{0,3}(?:\\.\\d+)?)(?:deg)?\\s*,\\s*([+-]?[\\d\\.]+)%\\s*,\\s*([+-]?[\\d\\.]+)%\\s*(?:,\\s*([+-]?(?=\\.\\d|\\d)(?:0|[1-9]\\d*)?(?:\\.\\d*)?(?:[eE][+-]?\\d+)?)\\s*)?\\)$/;\n\tvar match = string.match(hwb);\n\n\tif (match) {\n\t\tvar alpha = parseFloat(match[4]);\n\t\tvar h = ((parseFloat(match[1]) % 360) + 360) % 360;\n\t\tvar w = clamp(parseFloat(match[2]), 0, 100);\n\t\tvar b = clamp(parseFloat(match[3]), 0, 100);\n\t\tvar a = clamp(isNaN(alpha) ? 1 : alpha, 0, 1);\n\t\treturn [h, w, b, a];\n\t}\n\n\treturn null;\n};\n\ncs.to.hex = function () {\n\tvar rgba = swizzle(arguments);\n\n\treturn (\n\t\t'#' +\n\t\thexDouble(rgba[0]) +\n\t\thexDouble(rgba[1]) +\n\t\thexDouble(rgba[2]) +\n\t\t(rgba[3] < 1\n\t\t\t? (hexDouble(Math.round(rgba[3] * 255)))\n\t\t\t: '')\n\t);\n};\n\ncs.to.rgb = function () {\n\tvar rgba = swizzle(arguments);\n\n\treturn rgba.length < 4 || rgba[3] === 1\n\t\t? 'rgb(' + Math.round(rgba[0]) + ', ' + Math.round(rgba[1]) + ', ' + Math.round(rgba[2]) + ')'\n\t\t: 'rgba(' + Math.round(rgba[0]) + ', ' + Math.round(rgba[1]) + ', ' + Math.round(rgba[2]) + ', ' + rgba[3] + ')';\n};\n\ncs.to.rgb.percent = function () {\n\tvar rgba = swizzle(arguments);\n\n\tvar r = Math.round(rgba[0] / 255 * 100);\n\tvar g = Math.round(rgba[1] / 255 * 100);\n\tvar b = Math.round(rgba[2] / 255 * 100);\n\n\treturn rgba.length < 4 || rgba[3] === 1\n\t\t? 'rgb(' + r + '%, ' + g + '%, ' + b + '%)'\n\t\t: 'rgba(' + r + '%, ' + g + '%, ' + b + '%, ' + rgba[3] + ')';\n};\n\ncs.to.hsl = function () {\n\tvar hsla = swizzle(arguments);\n\treturn hsla.length < 4 || hsla[3] === 1\n\t\t? 'hsl(' + hsla[0] + ', ' + hsla[1] + '%, ' + hsla[2] + '%)'\n\t\t: 'hsla(' + hsla[0] + ', ' + hsla[1] + '%, ' + hsla[2] + '%, ' + hsla[3] + ')';\n};\n\n// hwb is a bit different than rgb(a) & hsl(a) since there is no alpha specific syntax\n// (hwb have alpha optional & 1 is default value)\ncs.to.hwb = function () {\n\tvar hwba = swizzle(arguments);\n\n\tvar a = '';\n\tif (hwba.length >= 4 && hwba[3] !== 1) {\n\t\ta = ', ' + hwba[3];\n\t}\n\n\treturn 'hwb(' + hwba[0] + ', ' + hwba[1] + '%, ' + hwba[2] + '%' + a + ')';\n};\n\ncs.to.keyword = function (rgb) {\n\treturn reverseNames[rgb.slice(0, 3)];\n};\n\n// helpers\nfunction clamp(num, min, max) {\n\treturn Math.min(Math.max(min, num), max);\n}\n\nfunction hexDouble(num) {\n\tvar str = Math.round(num).toString(16).toUpperCase();\n\treturn (str.length < 2) ? '0' + str : str;\n}\n", "'use strict'\r\n\r\nmodule.exports = {\r\n\t\"aliceblue\": [240, 248, 255],\r\n\t\"antiquewhite\": [250, 235, 215],\r\n\t\"aqua\": [0, 255, 255],\r\n\t\"aquamarine\": [127, 255, 212],\r\n\t\"azure\": [240, 255, 255],\r\n\t\"beige\": [245, 245, 220],\r\n\t\"bisque\": [255, 228, 196],\r\n\t\"black\": [0, 0, 0],\r\n\t\"blanchedalmond\": [255, 235, 205],\r\n\t\"blue\": [0, 0, 255],\r\n\t\"blueviolet\": [138, 43, 226],\r\n\t\"brown\": [165, 42, 42],\r\n\t\"burlywood\": [222, 184, 135],\r\n\t\"cadetblue\": [95, 158, 160],\r\n\t\"chartreuse\": [127, 255, 0],\r\n\t\"chocolate\": [210, 105, 30],\r\n\t\"coral\": [255, 127, 80],\r\n\t\"cornflowerblue\": [100, 149, 237],\r\n\t\"cornsilk\": [255, 248, 220],\r\n\t\"crimson\": [220, 20, 60],\r\n\t\"cyan\": [0, 255, 255],\r\n\t\"darkblue\": [0, 0, 139],\r\n\t\"darkcyan\": [0, 139, 139],\r\n\t\"darkgoldenrod\": [184, 134, 11],\r\n\t\"darkgray\": [169, 169, 169],\r\n\t\"darkgreen\": [0, 100, 0],\r\n\t\"darkgrey\": [169, 169, 169],\r\n\t\"darkkhaki\": [189, 183, 107],\r\n\t\"darkmagenta\": [139, 0, 139],\r\n\t\"darkolivegreen\": [85, 107, 47],\r\n\t\"darkorange\": [255, 140, 0],\r\n\t\"darkorchid\": [153, 50, 204],\r\n\t\"darkred\": [139, 0, 0],\r\n\t\"darksalmon\": [233, 150, 122],\r\n\t\"darkseagreen\": [143, 188, 143],\r\n\t\"darkslateblue\": [72, 61, 139],\r\n\t\"darkslategray\": [47, 79, 79],\r\n\t\"darkslategrey\": [47, 79, 79],\r\n\t\"darkturquoise\": [0, 206, 209],\r\n\t\"darkviolet\": [148, 0, 211],\r\n\t\"deeppink\": [255, 20, 147],\r\n\t\"deepskyblue\": [0, 191, 255],\r\n\t\"dimgray\": [105, 105, 105],\r\n\t\"dimgrey\": [105, 105, 105],\r\n\t\"dodgerblue\": [30, 144, 255],\r\n\t\"firebrick\": [178, 34, 34],\r\n\t\"floralwhite\": [255, 250, 240],\r\n\t\"forestgreen\": [34, 139, 34],\r\n\t\"fuchsia\": [255, 0, 255],\r\n\t\"gainsboro\": [220, 220, 220],\r\n\t\"ghostwhite\": [248, 248, 255],\r\n\t\"gold\": [255, 215, 0],\r\n\t\"goldenrod\": [218, 165, 32],\r\n\t\"gray\": [128, 128, 128],\r\n\t\"green\": [0, 128, 0],\r\n\t\"greenyellow\": [173, 255, 47],\r\n\t\"grey\": [128, 128, 128],\r\n\t\"honeydew\": [240, 255, 240],\r\n\t\"hotpink\": [255, 105, 180],\r\n\t\"indianred\": [205, 92, 92],\r\n\t\"indigo\": [75, 0, 130],\r\n\t\"ivory\": [255, 255, 240],\r\n\t\"khaki\": [240, 230, 140],\r\n\t\"lavender\": [230, 230, 250],\r\n\t\"lavenderblush\": [255, 240, 245],\r\n\t\"lawngreen\": [124, 252, 0],\r\n\t\"lemonchiffon\": [255, 250, 205],\r\n\t\"lightblue\": [173, 216, 230],\r\n\t\"lightcoral\": [240, 128, 128],\r\n\t\"lightcyan\": [224, 255, 255],\r\n\t\"lightgoldenrodyellow\": [250, 250, 210],\r\n\t\"lightgray\": [211, 211, 211],\r\n\t\"lightgreen\": [144, 238, 144],\r\n\t\"lightgrey\": [211, 211, 211],\r\n\t\"lightpink\": [255, 182, 193],\r\n\t\"lightsalmon\": [255, 160, 122],\r\n\t\"lightseagreen\": [32, 178, 170],\r\n\t\"lightskyblue\": [135, 206, 250],\r\n\t\"lightslategray\": [119, 136, 153],\r\n\t\"lightslategrey\": [119, 136, 153],\r\n\t\"lightsteelblue\": [176, 196, 222],\r\n\t\"lightyellow\": [255, 255, 224],\r\n\t\"lime\": [0, 255, 0],\r\n\t\"limegreen\": [50, 205, 50],\r\n\t\"linen\": [250, 240, 230],\r\n\t\"magenta\": [255, 0, 255],\r\n\t\"maroon\": [128, 0, 0],\r\n\t\"mediumaquamarine\": [102, 205, 170],\r\n\t\"mediumblue\": [0, 0, 205],\r\n\t\"mediumorchid\": [186, 85, 211],\r\n\t\"mediumpurple\": [147, 112, 219],\r\n\t\"mediumseagreen\": [60, 179, 113],\r\n\t\"mediumslateblue\": [123, 104, 238],\r\n\t\"mediumspringgreen\": [0, 250, 154],\r\n\t\"mediumturquoise\": [72, 209, 204],\r\n\t\"mediumvioletred\": [199, 21, 133],\r\n\t\"midnightblue\": [25, 25, 112],\r\n\t\"mintcream\": [245, 255, 250],\r\n\t\"mistyrose\": [255, 228, 225],\r\n\t\"moccasin\": [255, 228, 181],\r\n\t\"navajowhite\": [255, 222, 173],\r\n\t\"navy\": [0, 0, 128],\r\n\t\"oldlace\": [253, 245, 230],\r\n\t\"olive\": [128, 128, 0],\r\n\t\"olivedrab\": [107, 142, 35],\r\n\t\"orange\": [255, 165, 0],\r\n\t\"orangered\": [255, 69, 0],\r\n\t\"orchid\": [218, 112, 214],\r\n\t\"palegoldenrod\": [238, 232, 170],\r\n\t\"palegreen\": [152, 251, 152],\r\n\t\"paleturquoise\": [175, 238, 238],\r\n\t\"palevioletred\": [219, 112, 147],\r\n\t\"papayawhip\": [255, 239, 213],\r\n\t\"peachpuff\": [255, 218, 185],\r\n\t\"peru\": [205, 133, 63],\r\n\t\"pink\": [255, 192, 203],\r\n\t\"plum\": [221, 160, 221],\r\n\t\"powderblue\": [176, 224, 230],\r\n\t\"purple\": [128, 0, 128],\r\n\t\"rebeccapurple\": [102, 51, 153],\r\n\t\"red\": [255, 0, 0],\r\n\t\"rosybrown\": [188, 143, 143],\r\n\t\"royalblue\": [65, 105, 225],\r\n\t\"saddlebrown\": [139, 69, 19],\r\n\t\"salmon\": [250, 128, 114],\r\n\t\"sandybrown\": [244, 164, 96],\r\n\t\"seagreen\": [46, 139, 87],\r\n\t\"seashell\": [255, 245, 238],\r\n\t\"sienna\": [160, 82, 45],\r\n\t\"silver\": [192, 192, 192],\r\n\t\"skyblue\": [135, 206, 235],\r\n\t\"slateblue\": [106, 90, 205],\r\n\t\"slategray\": [112, 128, 144],\r\n\t\"slategrey\": [112, 128, 144],\r\n\t\"snow\": [255, 250, 250],\r\n\t\"springgreen\": [0, 255, 127],\r\n\t\"steelblue\": [70, 130, 180],\r\n\t\"tan\": [210, 180, 140],\r\n\t\"teal\": [0, 128, 128],\r\n\t\"thistle\": [216, 191, 216],\r\n\t\"tomato\": [255, 99, 71],\r\n\t\"turquoise\": [64, 224, 208],\r\n\t\"violet\": [238, 130, 238],\r\n\t\"wheat\": [245, 222, 179],\r\n\t\"white\": [255, 255, 255],\r\n\t\"whitesmoke\": [245, 245, 245],\r\n\t\"yellow\": [255, 255, 0],\r\n\t\"yellowgreen\": [154, 205, 50]\r\n};\r\n", "/* MIT license */\n/* eslint-disable no-mixed-operators */\nconst cssKeywords = require('color-name');\n\n// NOTE: conversions should only return primitive values (i.e. arrays, or\n//       values that give correct `typeof` results).\n//       do not use box values types (i.e. Number(), String(), etc.)\n\nconst reverseKeywords = {};\nfor (const key of Object.keys(cssKeywords)) {\n\treverseKeywords[cssKeywords[key]] = key;\n}\n\nconst convert = {\n\trgb: {channels: 3, labels: 'rgb'},\n\thsl: {channels: 3, labels: 'hsl'},\n\thsv: {channels: 3, labels: 'hsv'},\n\thwb: {channels: 3, labels: 'hwb'},\n\tcmyk: {channels: 4, labels: 'cmyk'},\n\txyz: {channels: 3, labels: 'xyz'},\n\tlab: {channels: 3, labels: 'lab'},\n\tlch: {channels: 3, labels: 'lch'},\n\thex: {channels: 1, labels: ['hex']},\n\tkeyword: {channels: 1, labels: ['keyword']},\n\tansi16: {channels: 1, labels: ['ansi16']},\n\tansi256: {channels: 1, labels: ['ansi256']},\n\thcg: {channels: 3, labels: ['h', 'c', 'g']},\n\tapple: {channels: 3, labels: ['r16', 'g16', 'b16']},\n\tgray: {channels: 1, labels: ['gray']}\n};\n\nmodule.exports = convert;\n\n// Hide .channels and .labels properties\nfor (const model of Object.keys(convert)) {\n\tif (!('channels' in convert[model])) {\n\t\tthrow new Error('missing channels property: ' + model);\n\t}\n\n\tif (!('labels' in convert[model])) {\n\t\tthrow new Error('missing channel labels property: ' + model);\n\t}\n\n\tif (convert[model].labels.length !== convert[model].channels) {\n\t\tthrow new Error('channel and label counts mismatch: ' + model);\n\t}\n\n\tconst {channels, labels} = convert[model];\n\tdelete convert[model].channels;\n\tdelete convert[model].labels;\n\tObject.defineProperty(convert[model], 'channels', {value: channels});\n\tObject.defineProperty(convert[model], 'labels', {value: labels});\n}\n\nconvert.rgb.hsl = function (rgb) {\n\tconst r = rgb[0] / 255;\n\tconst g = rgb[1] / 255;\n\tconst b = rgb[2] / 255;\n\tconst min = Math.min(r, g, b);\n\tconst max = Math.max(r, g, b);\n\tconst delta = max - min;\n\tlet h;\n\tlet s;\n\n\tif (max === min) {\n\t\th = 0;\n\t} else if (r === max) {\n\t\th = (g - b) / delta;\n\t} else if (g === max) {\n\t\th = 2 + (b - r) / delta;\n\t} else if (b === max) {\n\t\th = 4 + (r - g) / delta;\n\t}\n\n\th = Math.min(h * 60, 360);\n\n\tif (h < 0) {\n\t\th += 360;\n\t}\n\n\tconst l = (min + max) / 2;\n\n\tif (max === min) {\n\t\ts = 0;\n\t} else if (l <= 0.5) {\n\t\ts = delta / (max + min);\n\t} else {\n\t\ts = delta / (2 - max - min);\n\t}\n\n\treturn [h, s * 100, l * 100];\n};\n\nconvert.rgb.hsv = function (rgb) {\n\tlet rdif;\n\tlet gdif;\n\tlet bdif;\n\tlet h;\n\tlet s;\n\n\tconst r = rgb[0] / 255;\n\tconst g = rgb[1] / 255;\n\tconst b = rgb[2] / 255;\n\tconst v = Math.max(r, g, b);\n\tconst diff = v - Math.min(r, g, b);\n\tconst diffc = function (c) {\n\t\treturn (v - c) / 6 / diff + 1 / 2;\n\t};\n\n\tif (diff === 0) {\n\t\th = 0;\n\t\ts = 0;\n\t} else {\n\t\ts = diff / v;\n\t\trdif = diffc(r);\n\t\tgdif = diffc(g);\n\t\tbdif = diffc(b);\n\n\t\tif (r === v) {\n\t\t\th = bdif - gdif;\n\t\t} else if (g === v) {\n\t\t\th = (1 / 3) + rdif - bdif;\n\t\t} else if (b === v) {\n\t\t\th = (2 / 3) + gdif - rdif;\n\t\t}\n\n\t\tif (h < 0) {\n\t\t\th += 1;\n\t\t} else if (h > 1) {\n\t\t\th -= 1;\n\t\t}\n\t}\n\n\treturn [\n\t\th * 360,\n\t\ts * 100,\n\t\tv * 100\n\t];\n};\n\nconvert.rgb.hwb = function (rgb) {\n\tconst r = rgb[0];\n\tconst g = rgb[1];\n\tlet b = rgb[2];\n\tconst h = convert.rgb.hsl(rgb)[0];\n\tconst w = 1 / 255 * Math.min(r, Math.min(g, b));\n\n\tb = 1 - 1 / 255 * Math.max(r, Math.max(g, b));\n\n\treturn [h, w * 100, b * 100];\n};\n\nconvert.rgb.cmyk = function (rgb) {\n\tconst r = rgb[0] / 255;\n\tconst g = rgb[1] / 255;\n\tconst b = rgb[2] / 255;\n\n\tconst k = Math.min(1 - r, 1 - g, 1 - b);\n\tconst c = (1 - r - k) / (1 - k) || 0;\n\tconst m = (1 - g - k) / (1 - k) || 0;\n\tconst y = (1 - b - k) / (1 - k) || 0;\n\n\treturn [c * 100, m * 100, y * 100, k * 100];\n};\n\nfunction comparativeDistance(x, y) {\n\t/*\n\t\tSee https://en.m.wikipedia.org/wiki/Euclidean_distance#Squared_Euclidean_distance\n\t*/\n\treturn (\n\t\t((x[0] - y[0]) ** 2) +\n\t\t((x[1] - y[1]) ** 2) +\n\t\t((x[2] - y[2]) ** 2)\n\t);\n}\n\nconvert.rgb.keyword = function (rgb) {\n\tconst reversed = reverseKeywords[rgb];\n\tif (reversed) {\n\t\treturn reversed;\n\t}\n\n\tlet currentClosestDistance = Infinity;\n\tlet currentClosestKeyword;\n\n\tfor (const keyword of Object.keys(cssKeywords)) {\n\t\tconst value = cssKeywords[keyword];\n\n\t\t// Compute comparative distance\n\t\tconst distance = comparativeDistance(rgb, value);\n\n\t\t// Check if its less, if so set as closest\n\t\tif (distance < currentClosestDistance) {\n\t\t\tcurrentClosestDistance = distance;\n\t\t\tcurrentClosestKeyword = keyword;\n\t\t}\n\t}\n\n\treturn currentClosestKeyword;\n};\n\nconvert.keyword.rgb = function (keyword) {\n\treturn cssKeywords[keyword];\n};\n\nconvert.rgb.xyz = function (rgb) {\n\tlet r = rgb[0] / 255;\n\tlet g = rgb[1] / 255;\n\tlet b = rgb[2] / 255;\n\n\t// Assume sRGB\n\tr = r > 0.04045 ? (((r + 0.055) / 1.055) ** 2.4) : (r / 12.92);\n\tg = g > 0.04045 ? (((g + 0.055) / 1.055) ** 2.4) : (g / 12.92);\n\tb = b > 0.04045 ? (((b + 0.055) / 1.055) ** 2.4) : (b / 12.92);\n\n\tconst x = (r * 0.4124) + (g * 0.3576) + (b * 0.1805);\n\tconst y = (r * 0.2126) + (g * 0.7152) + (b * 0.0722);\n\tconst z = (r * 0.0193) + (g * 0.1192) + (b * 0.9505);\n\n\treturn [x * 100, y * 100, z * 100];\n};\n\nconvert.rgb.lab = function (rgb) {\n\tconst xyz = convert.rgb.xyz(rgb);\n\tlet x = xyz[0];\n\tlet y = xyz[1];\n\tlet z = xyz[2];\n\n\tx /= 95.047;\n\ty /= 100;\n\tz /= 108.883;\n\n\tx = x > 0.008856 ? (x ** (1 / 3)) : (7.787 * x) + (16 / 116);\n\ty = y > 0.008856 ? (y ** (1 / 3)) : (7.787 * y) + (16 / 116);\n\tz = z > 0.008856 ? (z ** (1 / 3)) : (7.787 * z) + (16 / 116);\n\n\tconst l = (116 * y) - 16;\n\tconst a = 500 * (x - y);\n\tconst b = 200 * (y - z);\n\n\treturn [l, a, b];\n};\n\nconvert.hsl.rgb = function (hsl) {\n\tconst h = hsl[0] / 360;\n\tconst s = hsl[1] / 100;\n\tconst l = hsl[2] / 100;\n\tlet t2;\n\tlet t3;\n\tlet val;\n\n\tif (s === 0) {\n\t\tval = l * 255;\n\t\treturn [val, val, val];\n\t}\n\n\tif (l < 0.5) {\n\t\tt2 = l * (1 + s);\n\t} else {\n\t\tt2 = l + s - l * s;\n\t}\n\n\tconst t1 = 2 * l - t2;\n\n\tconst rgb = [0, 0, 0];\n\tfor (let i = 0; i < 3; i++) {\n\t\tt3 = h + 1 / 3 * -(i - 1);\n\t\tif (t3 < 0) {\n\t\t\tt3++;\n\t\t}\n\n\t\tif (t3 > 1) {\n\t\t\tt3--;\n\t\t}\n\n\t\tif (6 * t3 < 1) {\n\t\t\tval = t1 + (t2 - t1) * 6 * t3;\n\t\t} else if (2 * t3 < 1) {\n\t\t\tval = t2;\n\t\t} else if (3 * t3 < 2) {\n\t\t\tval = t1 + (t2 - t1) * (2 / 3 - t3) * 6;\n\t\t} else {\n\t\t\tval = t1;\n\t\t}\n\n\t\trgb[i] = val * 255;\n\t}\n\n\treturn rgb;\n};\n\nconvert.hsl.hsv = function (hsl) {\n\tconst h = hsl[0];\n\tlet s = hsl[1] / 100;\n\tlet l = hsl[2] / 100;\n\tlet smin = s;\n\tconst lmin = Math.max(l, 0.01);\n\n\tl *= 2;\n\ts *= (l <= 1) ? l : 2 - l;\n\tsmin *= lmin <= 1 ? lmin : 2 - lmin;\n\tconst v = (l + s) / 2;\n\tconst sv = l === 0 ? (2 * smin) / (lmin + smin) : (2 * s) / (l + s);\n\n\treturn [h, sv * 100, v * 100];\n};\n\nconvert.hsv.rgb = function (hsv) {\n\tconst h = hsv[0] / 60;\n\tconst s = hsv[1] / 100;\n\tlet v = hsv[2] / 100;\n\tconst hi = Math.floor(h) % 6;\n\n\tconst f = h - Math.floor(h);\n\tconst p = 255 * v * (1 - s);\n\tconst q = 255 * v * (1 - (s * f));\n\tconst t = 255 * v * (1 - (s * (1 - f)));\n\tv *= 255;\n\n\tswitch (hi) {\n\t\tcase 0:\n\t\t\treturn [v, t, p];\n\t\tcase 1:\n\t\t\treturn [q, v, p];\n\t\tcase 2:\n\t\t\treturn [p, v, t];\n\t\tcase 3:\n\t\t\treturn [p, q, v];\n\t\tcase 4:\n\t\t\treturn [t, p, v];\n\t\tcase 5:\n\t\t\treturn [v, p, q];\n\t}\n};\n\nconvert.hsv.hsl = function (hsv) {\n\tconst h = hsv[0];\n\tconst s = hsv[1] / 100;\n\tconst v = hsv[2] / 100;\n\tconst vmin = Math.max(v, 0.01);\n\tlet sl;\n\tlet l;\n\n\tl = (2 - s) * v;\n\tconst lmin = (2 - s) * vmin;\n\tsl = s * vmin;\n\tsl /= (lmin <= 1) ? lmin : 2 - lmin;\n\tsl = sl || 0;\n\tl /= 2;\n\n\treturn [h, sl * 100, l * 100];\n};\n\n// http://dev.w3.org/csswg/css-color/#hwb-to-rgb\nconvert.hwb.rgb = function (hwb) {\n\tconst h = hwb[0] / 360;\n\tlet wh = hwb[1] / 100;\n\tlet bl = hwb[2] / 100;\n\tconst ratio = wh + bl;\n\tlet f;\n\n\t// Wh + bl cant be > 1\n\tif (ratio > 1) {\n\t\twh /= ratio;\n\t\tbl /= ratio;\n\t}\n\n\tconst i = Math.floor(6 * h);\n\tconst v = 1 - bl;\n\tf = 6 * h - i;\n\n\tif ((i & 0x01) !== 0) {\n\t\tf = 1 - f;\n\t}\n\n\tconst n = wh + f * (v - wh); // Linear interpolation\n\n\tlet r;\n\tlet g;\n\tlet b;\n\t/* eslint-disable max-statements-per-line,no-multi-spaces */\n\tswitch (i) {\n\t\tdefault:\n\t\tcase 6:\n\t\tcase 0: r = v;  g = n;  b = wh; break;\n\t\tcase 1: r = n;  g = v;  b = wh; break;\n\t\tcase 2: r = wh; g = v;  b = n; break;\n\t\tcase 3: r = wh; g = n;  b = v; break;\n\t\tcase 4: r = n;  g = wh; b = v; break;\n\t\tcase 5: r = v;  g = wh; b = n; break;\n\t}\n\t/* eslint-enable max-statements-per-line,no-multi-spaces */\n\n\treturn [r * 255, g * 255, b * 255];\n};\n\nconvert.cmyk.rgb = function (cmyk) {\n\tconst c = cmyk[0] / 100;\n\tconst m = cmyk[1] / 100;\n\tconst y = cmyk[2] / 100;\n\tconst k = cmyk[3] / 100;\n\n\tconst r = 1 - Math.min(1, c * (1 - k) + k);\n\tconst g = 1 - Math.min(1, m * (1 - k) + k);\n\tconst b = 1 - Math.min(1, y * (1 - k) + k);\n\n\treturn [r * 255, g * 255, b * 255];\n};\n\nconvert.xyz.rgb = function (xyz) {\n\tconst x = xyz[0] / 100;\n\tconst y = xyz[1] / 100;\n\tconst z = xyz[2] / 100;\n\tlet r;\n\tlet g;\n\tlet b;\n\n\tr = (x * 3.2406) + (y * -1.5372) + (z * -0.4986);\n\tg = (x * -0.9689) + (y * 1.8758) + (z * 0.0415);\n\tb = (x * 0.0557) + (y * -0.2040) + (z * 1.0570);\n\n\t// Assume sRGB\n\tr = r > 0.0031308\n\t\t? ((1.055 * (r ** (1.0 / 2.4))) - 0.055)\n\t\t: r * 12.92;\n\n\tg = g > 0.0031308\n\t\t? ((1.055 * (g ** (1.0 / 2.4))) - 0.055)\n\t\t: g * 12.92;\n\n\tb = b > 0.0031308\n\t\t? ((1.055 * (b ** (1.0 / 2.4))) - 0.055)\n\t\t: b * 12.92;\n\n\tr = Math.min(Math.max(0, r), 1);\n\tg = Math.min(Math.max(0, g), 1);\n\tb = Math.min(Math.max(0, b), 1);\n\n\treturn [r * 255, g * 255, b * 255];\n};\n\nconvert.xyz.lab = function (xyz) {\n\tlet x = xyz[0];\n\tlet y = xyz[1];\n\tlet z = xyz[2];\n\n\tx /= 95.047;\n\ty /= 100;\n\tz /= 108.883;\n\n\tx = x > 0.008856 ? (x ** (1 / 3)) : (7.787 * x) + (16 / 116);\n\ty = y > 0.008856 ? (y ** (1 / 3)) : (7.787 * y) + (16 / 116);\n\tz = z > 0.008856 ? (z ** (1 / 3)) : (7.787 * z) + (16 / 116);\n\n\tconst l = (116 * y) - 16;\n\tconst a = 500 * (x - y);\n\tconst b = 200 * (y - z);\n\n\treturn [l, a, b];\n};\n\nconvert.lab.xyz = function (lab) {\n\tconst l = lab[0];\n\tconst a = lab[1];\n\tconst b = lab[2];\n\tlet x;\n\tlet y;\n\tlet z;\n\n\ty = (l + 16) / 116;\n\tx = a / 500 + y;\n\tz = y - b / 200;\n\n\tconst y2 = y ** 3;\n\tconst x2 = x ** 3;\n\tconst z2 = z ** 3;\n\ty = y2 > 0.008856 ? y2 : (y - 16 / 116) / 7.787;\n\tx = x2 > 0.008856 ? x2 : (x - 16 / 116) / 7.787;\n\tz = z2 > 0.008856 ? z2 : (z - 16 / 116) / 7.787;\n\n\tx *= 95.047;\n\ty *= 100;\n\tz *= 108.883;\n\n\treturn [x, y, z];\n};\n\nconvert.lab.lch = function (lab) {\n\tconst l = lab[0];\n\tconst a = lab[1];\n\tconst b = lab[2];\n\tlet h;\n\n\tconst hr = Math.atan2(b, a);\n\th = hr * 360 / 2 / Math.PI;\n\n\tif (h < 0) {\n\t\th += 360;\n\t}\n\n\tconst c = Math.sqrt(a * a + b * b);\n\n\treturn [l, c, h];\n};\n\nconvert.lch.lab = function (lch) {\n\tconst l = lch[0];\n\tconst c = lch[1];\n\tconst h = lch[2];\n\n\tconst hr = h / 360 * 2 * Math.PI;\n\tconst a = c * Math.cos(hr);\n\tconst b = c * Math.sin(hr);\n\n\treturn [l, a, b];\n};\n\nconvert.rgb.ansi16 = function (args, saturation = null) {\n\tconst [r, g, b] = args;\n\tlet value = saturation === null ? convert.rgb.hsv(args)[2] : saturation; // Hsv -> ansi16 optimization\n\n\tvalue = Math.round(value / 50);\n\n\tif (value === 0) {\n\t\treturn 30;\n\t}\n\n\tlet ansi = 30\n\t\t+ ((Math.round(b / 255) << 2)\n\t\t| (Math.round(g / 255) << 1)\n\t\t| Math.round(r / 255));\n\n\tif (value === 2) {\n\t\tansi += 60;\n\t}\n\n\treturn ansi;\n};\n\nconvert.hsv.ansi16 = function (args) {\n\t// Optimization here; we already know the value and don't need to get\n\t// it converted for us.\n\treturn convert.rgb.ansi16(convert.hsv.rgb(args), args[2]);\n};\n\nconvert.rgb.ansi256 = function (args) {\n\tconst r = args[0];\n\tconst g = args[1];\n\tconst b = args[2];\n\n\t// We use the extended greyscale palette here, with the exception of\n\t// black and white. normal palette only has 4 greyscale shades.\n\tif (r === g && g === b) {\n\t\tif (r < 8) {\n\t\t\treturn 16;\n\t\t}\n\n\t\tif (r > 248) {\n\t\t\treturn 231;\n\t\t}\n\n\t\treturn Math.round(((r - 8) / 247) * 24) + 232;\n\t}\n\n\tconst ansi = 16\n\t\t+ (36 * Math.round(r / 255 * 5))\n\t\t+ (6 * Math.round(g / 255 * 5))\n\t\t+ Math.round(b / 255 * 5);\n\n\treturn ansi;\n};\n\nconvert.ansi16.rgb = function (args) {\n\tlet color = args % 10;\n\n\t// Handle greyscale\n\tif (color === 0 || color === 7) {\n\t\tif (args > 50) {\n\t\t\tcolor += 3.5;\n\t\t}\n\n\t\tcolor = color / 10.5 * 255;\n\n\t\treturn [color, color, color];\n\t}\n\n\tconst mult = (~~(args > 50) + 1) * 0.5;\n\tconst r = ((color & 1) * mult) * 255;\n\tconst g = (((color >> 1) & 1) * mult) * 255;\n\tconst b = (((color >> 2) & 1) * mult) * 255;\n\n\treturn [r, g, b];\n};\n\nconvert.ansi256.rgb = function (args) {\n\t// Handle greyscale\n\tif (args >= 232) {\n\t\tconst c = (args - 232) * 10 + 8;\n\t\treturn [c, c, c];\n\t}\n\n\targs -= 16;\n\n\tlet rem;\n\tconst r = Math.floor(args / 36) / 5 * 255;\n\tconst g = Math.floor((rem = args % 36) / 6) / 5 * 255;\n\tconst b = (rem % 6) / 5 * 255;\n\n\treturn [r, g, b];\n};\n\nconvert.rgb.hex = function (args) {\n\tconst integer = ((Math.round(args[0]) & 0xFF) << 16)\n\t\t+ ((Math.round(args[1]) & 0xFF) << 8)\n\t\t+ (Math.round(args[2]) & 0xFF);\n\n\tconst string = integer.toString(16).toUpperCase();\n\treturn '000000'.substring(string.length) + string;\n};\n\nconvert.hex.rgb = function (args) {\n\tconst match = args.toString(16).match(/[a-f0-9]{6}|[a-f0-9]{3}/i);\n\tif (!match) {\n\t\treturn [0, 0, 0];\n\t}\n\n\tlet colorString = match[0];\n\n\tif (match[0].length === 3) {\n\t\tcolorString = colorString.split('').map(char => {\n\t\t\treturn char + char;\n\t\t}).join('');\n\t}\n\n\tconst integer = parseInt(colorString, 16);\n\tconst r = (integer >> 16) & 0xFF;\n\tconst g = (integer >> 8) & 0xFF;\n\tconst b = integer & 0xFF;\n\n\treturn [r, g, b];\n};\n\nconvert.rgb.hcg = function (rgb) {\n\tconst r = rgb[0] / 255;\n\tconst g = rgb[1] / 255;\n\tconst b = rgb[2] / 255;\n\tconst max = Math.max(Math.max(r, g), b);\n\tconst min = Math.min(Math.min(r, g), b);\n\tconst chroma = (max - min);\n\tlet grayscale;\n\tlet hue;\n\n\tif (chroma < 1) {\n\t\tgrayscale = min / (1 - chroma);\n\t} else {\n\t\tgrayscale = 0;\n\t}\n\n\tif (chroma <= 0) {\n\t\thue = 0;\n\t} else\n\tif (max === r) {\n\t\thue = ((g - b) / chroma) % 6;\n\t} else\n\tif (max === g) {\n\t\thue = 2 + (b - r) / chroma;\n\t} else {\n\t\thue = 4 + (r - g) / chroma;\n\t}\n\n\thue /= 6;\n\thue %= 1;\n\n\treturn [hue * 360, chroma * 100, grayscale * 100];\n};\n\nconvert.hsl.hcg = function (hsl) {\n\tconst s = hsl[1] / 100;\n\tconst l = hsl[2] / 100;\n\n\tconst c = l < 0.5 ? (2.0 * s * l) : (2.0 * s * (1.0 - l));\n\n\tlet f = 0;\n\tif (c < 1.0) {\n\t\tf = (l - 0.5 * c) / (1.0 - c);\n\t}\n\n\treturn [hsl[0], c * 100, f * 100];\n};\n\nconvert.hsv.hcg = function (hsv) {\n\tconst s = hsv[1] / 100;\n\tconst v = hsv[2] / 100;\n\n\tconst c = s * v;\n\tlet f = 0;\n\n\tif (c < 1.0) {\n\t\tf = (v - c) / (1 - c);\n\t}\n\n\treturn [hsv[0], c * 100, f * 100];\n};\n\nconvert.hcg.rgb = function (hcg) {\n\tconst h = hcg[0] / 360;\n\tconst c = hcg[1] / 100;\n\tconst g = hcg[2] / 100;\n\n\tif (c === 0.0) {\n\t\treturn [g * 255, g * 255, g * 255];\n\t}\n\n\tconst pure = [0, 0, 0];\n\tconst hi = (h % 1) * 6;\n\tconst v = hi % 1;\n\tconst w = 1 - v;\n\tlet mg = 0;\n\n\t/* eslint-disable max-statements-per-line */\n\tswitch (Math.floor(hi)) {\n\t\tcase 0:\n\t\t\tpure[0] = 1; pure[1] = v; pure[2] = 0; break;\n\t\tcase 1:\n\t\t\tpure[0] = w; pure[1] = 1; pure[2] = 0; break;\n\t\tcase 2:\n\t\t\tpure[0] = 0; pure[1] = 1; pure[2] = v; break;\n\t\tcase 3:\n\t\t\tpure[0] = 0; pure[1] = w; pure[2] = 1; break;\n\t\tcase 4:\n\t\t\tpure[0] = v; pure[1] = 0; pure[2] = 1; break;\n\t\tdefault:\n\t\t\tpure[0] = 1; pure[1] = 0; pure[2] = w;\n\t}\n\t/* eslint-enable max-statements-per-line */\n\n\tmg = (1.0 - c) * g;\n\n\treturn [\n\t\t(c * pure[0] + mg) * 255,\n\t\t(c * pure[1] + mg) * 255,\n\t\t(c * pure[2] + mg) * 255\n\t];\n};\n\nconvert.hcg.hsv = function (hcg) {\n\tconst c = hcg[1] / 100;\n\tconst g = hcg[2] / 100;\n\n\tconst v = c + g * (1.0 - c);\n\tlet f = 0;\n\n\tif (v > 0.0) {\n\t\tf = c / v;\n\t}\n\n\treturn [hcg[0], f * 100, v * 100];\n};\n\nconvert.hcg.hsl = function (hcg) {\n\tconst c = hcg[1] / 100;\n\tconst g = hcg[2] / 100;\n\n\tconst l = g * (1.0 - c) + 0.5 * c;\n\tlet s = 0;\n\n\tif (l > 0.0 && l < 0.5) {\n\t\ts = c / (2 * l);\n\t} else\n\tif (l >= 0.5 && l < 1.0) {\n\t\ts = c / (2 * (1 - l));\n\t}\n\n\treturn [hcg[0], s * 100, l * 100];\n};\n\nconvert.hcg.hwb = function (hcg) {\n\tconst c = hcg[1] / 100;\n\tconst g = hcg[2] / 100;\n\tconst v = c + g * (1.0 - c);\n\treturn [hcg[0], (v - c) * 100, (1 - v) * 100];\n};\n\nconvert.hwb.hcg = function (hwb) {\n\tconst w = hwb[1] / 100;\n\tconst b = hwb[2] / 100;\n\tconst v = 1 - b;\n\tconst c = v - w;\n\tlet g = 0;\n\n\tif (c < 1) {\n\t\tg = (v - c) / (1 - c);\n\t}\n\n\treturn [hwb[0], c * 100, g * 100];\n};\n\nconvert.apple.rgb = function (apple) {\n\treturn [(apple[0] / 65535) * 255, (apple[1] / 65535) * 255, (apple[2] / 65535) * 255];\n};\n\nconvert.rgb.apple = function (rgb) {\n\treturn [(rgb[0] / 255) * 65535, (rgb[1] / 255) * 65535, (rgb[2] / 255) * 65535];\n};\n\nconvert.gray.rgb = function (args) {\n\treturn [args[0] / 100 * 255, args[0] / 100 * 255, args[0] / 100 * 255];\n};\n\nconvert.gray.hsl = function (args) {\n\treturn [0, 0, args[0]];\n};\n\nconvert.gray.hsv = convert.gray.hsl;\n\nconvert.gray.hwb = function (gray) {\n\treturn [0, 100, gray[0]];\n};\n\nconvert.gray.cmyk = function (gray) {\n\treturn [0, 0, 0, gray[0]];\n};\n\nconvert.gray.lab = function (gray) {\n\treturn [gray[0], 0, 0];\n};\n\nconvert.gray.hex = function (gray) {\n\tconst val = Math.round(gray[0] / 100 * 255) & 0xFF;\n\tconst integer = (val << 16) + (val << 8) + val;\n\n\tconst string = integer.toString(16).toUpperCase();\n\treturn '000000'.substring(string.length) + string;\n};\n\nconvert.rgb.gray = function (rgb) {\n\tconst val = (rgb[0] + rgb[1] + rgb[2]) / 3;\n\treturn [val / 255 * 100];\n};\n", "const conversions = require('./conversions');\n\n/*\n\tThis function routes a model to all other models.\n\n\tall functions that are routed have a property `.conversion` attached\n\tto the returned synthetic function. This property is an array\n\tof strings, each with the steps in between the 'from' and 'to'\n\tcolor models (inclusive).\n\n\tconversions that are not possible simply are not included.\n*/\n\nfunction buildGraph() {\n\tconst graph = {};\n\t// https://jsperf.com/object-keys-vs-for-in-with-closure/3\n\tconst models = Object.keys(conversions);\n\n\tfor (let len = models.length, i = 0; i < len; i++) {\n\t\tgraph[models[i]] = {\n\t\t\t// http://jsperf.com/1-vs-infinity\n\t\t\t// micro-opt, but this is simple.\n\t\t\tdistance: -1,\n\t\t\tparent: null\n\t\t};\n\t}\n\n\treturn graph;\n}\n\n// https://en.wikipedia.org/wiki/Breadth-first_search\nfunction deriveBFS(fromModel) {\n\tconst graph = buildGraph();\n\tconst queue = [fromModel]; // Unshift -> queue -> pop\n\n\tgraph[fromModel].distance = 0;\n\n\twhile (queue.length) {\n\t\tconst current = queue.pop();\n\t\tconst adjacents = Object.keys(conversions[current]);\n\n\t\tfor (let len = adjacents.length, i = 0; i < len; i++) {\n\t\t\tconst adjacent = adjacents[i];\n\t\t\tconst node = graph[adjacent];\n\n\t\t\tif (node.distance === -1) {\n\t\t\t\tnode.distance = graph[current].distance + 1;\n\t\t\t\tnode.parent = current;\n\t\t\t\tqueue.unshift(adjacent);\n\t\t\t}\n\t\t}\n\t}\n\n\treturn graph;\n}\n\nfunction link(from, to) {\n\treturn function (args) {\n\t\treturn to(from(args));\n\t};\n}\n\nfunction wrapConversion(toModel, graph) {\n\tconst path = [graph[toModel].parent, toModel];\n\tlet fn = conversions[graph[toModel].parent][toModel];\n\n\tlet cur = graph[toModel].parent;\n\twhile (graph[cur].parent) {\n\t\tpath.unshift(graph[cur].parent);\n\t\tfn = link(conversions[graph[cur].parent][cur], fn);\n\t\tcur = graph[cur].parent;\n\t}\n\n\tfn.conversion = path;\n\treturn fn;\n}\n\nmodule.exports = function (fromModel) {\n\tconst graph = deriveBFS(fromModel);\n\tconst conversion = {};\n\n\tconst models = Object.keys(graph);\n\tfor (let len = models.length, i = 0; i < len; i++) {\n\t\tconst toModel = models[i];\n\t\tconst node = graph[toModel];\n\n\t\tif (node.parent === null) {\n\t\t\t// No possible conversion, or this node is the source model.\n\t\t\tcontinue;\n\t\t}\n\n\t\tconversion[toModel] = wrapConversion(toModel, graph);\n\t}\n\n\treturn conversion;\n};\n\n", "const conversions = require('./conversions');\nconst route = require('./route');\n\nconst convert = {};\n\nconst models = Object.keys(conversions);\n\nfunction wrapRaw(fn) {\n\tconst wrappedFn = function (...args) {\n\t\tconst arg0 = args[0];\n\t\tif (arg0 === undefined || arg0 === null) {\n\t\t\treturn arg0;\n\t\t}\n\n\t\tif (arg0.length > 1) {\n\t\t\targs = arg0;\n\t\t}\n\n\t\treturn fn(args);\n\t};\n\n\t// Preserve .conversion property if there is one\n\tif ('conversion' in fn) {\n\t\twrappedFn.conversion = fn.conversion;\n\t}\n\n\treturn wrappedFn;\n}\n\nfunction wrapRounded(fn) {\n\tconst wrappedFn = function (...args) {\n\t\tconst arg0 = args[0];\n\n\t\tif (arg0 === undefined || arg0 === null) {\n\t\t\treturn arg0;\n\t\t}\n\n\t\tif (arg0.length > 1) {\n\t\t\targs = arg0;\n\t\t}\n\n\t\tconst result = fn(args);\n\n\t\t// We're assuming the result is an array here.\n\t\t// see notice in conversions.js; don't use box types\n\t\t// in conversion functions.\n\t\tif (typeof result === 'object') {\n\t\t\tfor (let len = result.length, i = 0; i < len; i++) {\n\t\t\t\tresult[i] = Math.round(result[i]);\n\t\t\t}\n\t\t}\n\n\t\treturn result;\n\t};\n\n\t// Preserve .conversion property if there is one\n\tif ('conversion' in fn) {\n\t\twrappedFn.conversion = fn.conversion;\n\t}\n\n\treturn wrappedFn;\n}\n\nmodels.forEach(fromModel => {\n\tconvert[fromModel] = {};\n\n\tObject.defineProperty(convert[fromModel], 'channels', {value: conversions[fromModel].channels});\n\tObject.defineProperty(convert[fromModel], 'labels', {value: conversions[fromModel].labels});\n\n\tconst routes = route(fromModel);\n\tconst routeModels = Object.keys(routes);\n\n\trouteModels.forEach(toModel => {\n\t\tconst fn = routes[toModel];\n\n\t\tconvert[fromModel][toModel] = wrapRounded(fn);\n\t\tconvert[fromModel][toModel].raw = wrapRaw(fn);\n\t});\n});\n\nmodule.exports = convert;\n", "const colorString = require('color-string');\nconst convert = require('color-convert');\n\nconst _slice = [].slice;\n\nconst skippedModels = [\n\t// To be honest, I don't really feel like keyword belongs in color convert, but eh.\n\t'keyword',\n\n\t// Gray conflicts with some method names, and has its own method defined.\n\t'gray',\n\n\t// Shouldn't really be in color-convert either...\n\t'hex',\n];\n\nconst hashedModelKeys = {};\nfor (const model of Object.keys(convert)) {\n\thashedModelKeys[_slice.call(convert[model].labels).sort().join('')] = model;\n}\n\nconst limiters = {};\n\nfunction Color(object, model) {\n\tif (!(this instanceof Color)) {\n\t\treturn new Color(object, model);\n\t}\n\n\tif (model && model in skippedModels) {\n\t\tmodel = null;\n\t}\n\n\tif (model && !(model in convert)) {\n\t\tthrow new Error('Unknown model: ' + model);\n\t}\n\n\tlet i;\n\tlet channels;\n\n\tif (object == null) { // eslint-disable-line no-eq-null,eqeqeq\n\t\tthis.model = 'rgb';\n\t\tthis.color = [0, 0, 0];\n\t\tthis.valpha = 1;\n\t} else if (object instanceof Color) {\n\t\tthis.model = object.model;\n\t\tthis.color = object.color.slice();\n\t\tthis.valpha = object.valpha;\n\t} else if (typeof object === 'string') {\n\t\tconst result = colorString.get(object);\n\t\tif (result === null) {\n\t\t\tthrow new Error('Unable to parse color from string: ' + object);\n\t\t}\n\n\t\tthis.model = result.model;\n\t\tchannels = convert[this.model].channels;\n\t\tthis.color = result.value.slice(0, channels);\n\t\tthis.valpha = typeof result.value[channels] === 'number' ? result.value[channels] : 1;\n\t} else if (object.length > 0) {\n\t\tthis.model = model || 'rgb';\n\t\tchannels = convert[this.model].channels;\n\t\tconst newArray = _slice.call(object, 0, channels);\n\t\tthis.color = zeroArray(newArray, channels);\n\t\tthis.valpha = typeof object[channels] === 'number' ? object[channels] : 1;\n\t} else if (typeof object === 'number') {\n\t\t// This is always RGB - can be converted later on.\n\t\tthis.model = 'rgb';\n\t\tthis.color = [\n\t\t\t(object >> 16) & 0xFF,\n\t\t\t(object >> 8) & 0xFF,\n\t\t\tobject & 0xFF,\n\t\t];\n\t\tthis.valpha = 1;\n\t} else {\n\t\tthis.valpha = 1;\n\n\t\tconst keys = Object.keys(object);\n\t\tif ('alpha' in object) {\n\t\t\tkeys.splice(keys.indexOf('alpha'), 1);\n\t\t\tthis.valpha = typeof object.alpha === 'number' ? object.alpha : 0;\n\t\t}\n\n\t\tconst hashedKeys = keys.sort().join('');\n\t\tif (!(hashedKeys in hashedModelKeys)) {\n\t\t\tthrow new Error('Unable to parse color from object: ' + JSON.stringify(object));\n\t\t}\n\n\t\tthis.model = hashedModelKeys[hashedKeys];\n\n\t\tconst labels = convert[this.model].labels;\n\t\tconst color = [];\n\t\tfor (i = 0; i < labels.length; i++) {\n\t\t\tcolor.push(object[labels[i]]);\n\t\t}\n\n\t\tthis.color = zeroArray(color);\n\t}\n\n\t// Perform limitations (clamping, etc.)\n\tif (limiters[this.model]) {\n\t\tchannels = convert[this.model].channels;\n\t\tfor (i = 0; i < channels; i++) {\n\t\t\tconst limit = limiters[this.model][i];\n\t\t\tif (limit) {\n\t\t\t\tthis.color[i] = limit(this.color[i]);\n\t\t\t}\n\t\t}\n\t}\n\n\tthis.valpha = Math.max(0, Math.min(1, this.valpha));\n\n\tif (Object.freeze) {\n\t\tObject.freeze(this);\n\t}\n}\n\nColor.prototype = {\n\ttoString() {\n\t\treturn this.string();\n\t},\n\n\ttoJSON() {\n\t\treturn this[this.model]();\n\t},\n\n\tstring(places) {\n\t\tlet self = this.model in colorString.to ? this : this.rgb();\n\t\tself = self.round(typeof places === 'number' ? places : 1);\n\t\tconst args = self.valpha === 1 ? self.color : self.color.concat(this.valpha);\n\t\treturn colorString.to[self.model](args);\n\t},\n\n\tpercentString(places) {\n\t\tconst self = this.rgb().round(typeof places === 'number' ? places : 1);\n\t\tconst args = self.valpha === 1 ? self.color : self.color.concat(this.valpha);\n\t\treturn colorString.to.rgb.percent(args);\n\t},\n\n\tarray() {\n\t\treturn this.valpha === 1 ? this.color.slice() : this.color.concat(this.valpha);\n\t},\n\n\tobject() {\n\t\tconst result = {};\n\t\tconst channels = convert[this.model].channels;\n\t\tconst labels = convert[this.model].labels;\n\n\t\tfor (let i = 0; i < channels; i++) {\n\t\t\tresult[labels[i]] = this.color[i];\n\t\t}\n\n\t\tif (this.valpha !== 1) {\n\t\t\tresult.alpha = this.valpha;\n\t\t}\n\n\t\treturn result;\n\t},\n\n\tunitArray() {\n\t\tconst rgb = this.rgb().color;\n\t\trgb[0] /= 255;\n\t\trgb[1] /= 255;\n\t\trgb[2] /= 255;\n\n\t\tif (this.valpha !== 1) {\n\t\t\trgb.push(this.valpha);\n\t\t}\n\n\t\treturn rgb;\n\t},\n\n\tunitObject() {\n\t\tconst rgb = this.rgb().object();\n\t\trgb.r /= 255;\n\t\trgb.g /= 255;\n\t\trgb.b /= 255;\n\n\t\tif (this.valpha !== 1) {\n\t\t\trgb.alpha = this.valpha;\n\t\t}\n\n\t\treturn rgb;\n\t},\n\n\tround(places) {\n\t\tplaces = Math.max(places || 0, 0);\n\t\treturn new Color(this.color.map(roundToPlace(places)).concat(this.valpha), this.model);\n\t},\n\n\talpha(value) {\n\t\tif (arguments.length > 0) {\n\t\t\treturn new Color(this.color.concat(Math.max(0, Math.min(1, value))), this.model);\n\t\t}\n\n\t\treturn this.valpha;\n\t},\n\n\t// Rgb\n\tred: getset('rgb', 0, maxfn(255)),\n\tgreen: getset('rgb', 1, maxfn(255)),\n\tblue: getset('rgb', 2, maxfn(255)),\n\n\thue: getset(['hsl', 'hsv', 'hsl', 'hwb', 'hcg'], 0, value => ((value % 360) + 360) % 360),\n\n\tsaturationl: getset('hsl', 1, maxfn(100)),\n\tlightness: getset('hsl', 2, maxfn(100)),\n\n\tsaturationv: getset('hsv', 1, maxfn(100)),\n\tvalue: getset('hsv', 2, maxfn(100)),\n\n\tchroma: getset('hcg', 1, maxfn(100)),\n\tgray: getset('hcg', 2, maxfn(100)),\n\n\twhite: getset('hwb', 1, maxfn(100)),\n\twblack: getset('hwb', 2, maxfn(100)),\n\n\tcyan: getset('cmyk', 0, maxfn(100)),\n\tmagenta: getset('cmyk', 1, maxfn(100)),\n\tyellow: getset('cmyk', 2, maxfn(100)),\n\tblack: getset('cmyk', 3, maxfn(100)),\n\n\tx: getset('xyz', 0, maxfn(100)),\n\ty: getset('xyz', 1, maxfn(100)),\n\tz: getset('xyz', 2, maxfn(100)),\n\n\tl: getset('lab', 0, maxfn(100)),\n\ta: getset('lab', 1),\n\tb: getset('lab', 2),\n\n\tkeyword(value) {\n\t\tif (arguments.length > 0) {\n\t\t\treturn new Color(value);\n\t\t}\n\n\t\treturn convert[this.model].keyword(this.color);\n\t},\n\n\thex(value) {\n\t\tif (arguments.length > 0) {\n\t\t\treturn new Color(value);\n\t\t}\n\n\t\treturn colorString.to.hex(this.rgb().round().color);\n\t},\n\n\thexa(value) {\n\t\tif (arguments.length > 0) {\n\t\t\treturn new Color(value);\n\t\t}\n\n\t\tconst rgbArray = this.rgb().round().color;\n\n\t\tlet alphaHex = Math.round(this.valpha * 255).toString(16).toUpperCase();\n\t\tif (alphaHex.length === 1) {\n\t\t\talphaHex = '0' + alphaHex;\n\t\t}\n\n\t\treturn colorString.to.hex(rgbArray) + alphaHex;\n\t},\n\n\trgbNumber() {\n\t\tconst rgb = this.rgb().color;\n\t\treturn ((rgb[0] & 0xFF) << 16) | ((rgb[1] & 0xFF) << 8) | (rgb[2] & 0xFF);\n\t},\n\n\tluminosity() {\n\t\t// http://www.w3.org/TR/WCAG20/#relativeluminancedef\n\t\tconst rgb = this.rgb().color;\n\n\t\tconst lum = [];\n\t\tfor (const [i, element] of rgb.entries()) {\n\t\t\tconst chan = element / 255;\n\t\t\tlum[i] = (chan <= 0.039_28) ? chan / 12.92 : ((chan + 0.055) / 1.055) ** 2.4;\n\t\t}\n\n\t\treturn 0.2126 * lum[0] + 0.7152 * lum[1] + 0.0722 * lum[2];\n\t},\n\n\tcontrast(color2) {\n\t\t// http://www.w3.org/TR/WCAG20/#contrast-ratiodef\n\t\tconst lum1 = this.luminosity();\n\t\tconst lum2 = color2.luminosity();\n\n\t\tif (lum1 > lum2) {\n\t\t\treturn (lum1 + 0.05) / (lum2 + 0.05);\n\t\t}\n\n\t\treturn (lum2 + 0.05) / (lum1 + 0.05);\n\t},\n\n\tlevel(color2) {\n\t\tconst contrastRatio = this.contrast(color2);\n\t\tif (contrastRatio >= 7.1) {\n\t\t\treturn 'AAA';\n\t\t}\n\n\t\treturn (contrastRatio >= 4.5) ? 'AA' : '';\n\t},\n\n\tisDark() {\n\t\t// YIQ equation from http://24ways.org/2010/calculating-color-contrast\n\t\tconst rgb = this.rgb().color;\n\t\tconst yiq = (rgb[0] * 299 + rgb[1] * 587 + rgb[2] * 114) / 1000;\n\t\treturn yiq < 128;\n\t},\n\n\tisLight() {\n\t\treturn !this.isDark();\n\t},\n\n\tnegate() {\n\t\tconst rgb = this.rgb();\n\t\tfor (let i = 0; i < 3; i++) {\n\t\t\trgb.color[i] = 255 - rgb.color[i];\n\t\t}\n\n\t\treturn rgb;\n\t},\n\n\tlighten(ratio) {\n\t\tconst hsl = this.hsl();\n\t\thsl.color[2] += hsl.color[2] * ratio;\n\t\treturn hsl;\n\t},\n\n\tdarken(ratio) {\n\t\tconst hsl = this.hsl();\n\t\thsl.color[2] -= hsl.color[2] * ratio;\n\t\treturn hsl;\n\t},\n\n\tsaturate(ratio) {\n\t\tconst hsl = this.hsl();\n\t\thsl.color[1] += hsl.color[1] * ratio;\n\t\treturn hsl;\n\t},\n\n\tdesaturate(ratio) {\n\t\tconst hsl = this.hsl();\n\t\thsl.color[1] -= hsl.color[1] * ratio;\n\t\treturn hsl;\n\t},\n\n\twhiten(ratio) {\n\t\tconst hwb = this.hwb();\n\t\thwb.color[1] += hwb.color[1] * ratio;\n\t\treturn hwb;\n\t},\n\n\tblacken(ratio) {\n\t\tconst hwb = this.hwb();\n\t\thwb.color[2] += hwb.color[2] * ratio;\n\t\treturn hwb;\n\t},\n\n\tgrayscale() {\n\t\t// http://en.wikipedia.org/wiki/Grayscale#Converting_color_to_grayscale\n\t\tconst rgb = this.rgb().color;\n\t\tconst value = rgb[0] * 0.3 + rgb[1] * 0.59 + rgb[2] * 0.11;\n\t\treturn Color.rgb(value, value, value);\n\t},\n\n\tfade(ratio) {\n\t\treturn this.alpha(this.valpha - (this.valpha * ratio));\n\t},\n\n\topaquer(ratio) {\n\t\treturn this.alpha(this.valpha + (this.valpha * ratio));\n\t},\n\n\trotate(degrees) {\n\t\tconst hsl = this.hsl();\n\t\tlet hue = hsl.color[0];\n\t\thue = (hue + degrees) % 360;\n\t\thue = hue < 0 ? 360 + hue : hue;\n\t\thsl.color[0] = hue;\n\t\treturn hsl;\n\t},\n\n\tmix(mixinColor, weight) {\n\t\t// Ported from sass implementation in C\n\t\t// https://github.com/sass/libsass/blob/0e6b4a2850092356aa3ece07c6b249f0221caced/functions.cpp#L209\n\t\tif (!mixinColor || !mixinColor.rgb) {\n\t\t\tthrow new Error('Argument to \"mix\" was not a Color instance, but rather an instance of ' + typeof mixinColor);\n\t\t}\n\n\t\tconst color1 = mixinColor.rgb();\n\t\tconst color2 = this.rgb();\n\t\tconst p = weight === undefined ? 0.5 : weight;\n\n\t\tconst w = 2 * p - 1;\n\t\tconst a = color1.alpha() - color2.alpha();\n\n\t\tconst w1 = (((w * a === -1) ? w : (w + a) / (1 + w * a)) + 1) / 2;\n\t\tconst w2 = 1 - w1;\n\n\t\treturn Color.rgb(\n\t\t\tw1 * color1.red() + w2 * color2.red(),\n\t\t\tw1 * color1.green() + w2 * color2.green(),\n\t\t\tw1 * color1.blue() + w2 * color2.blue(),\n\t\t\tcolor1.alpha() * p + color2.alpha() * (1 - p));\n\t},\n};\n\n// Model conversion methods and static constructors\nfor (const model of Object.keys(convert)) {\n\tif (skippedModels.includes(model)) {\n\t\tcontinue;\n\t}\n\n\tconst channels = convert[model].channels;\n\n\t// Conversion methods\n\tColor.prototype[model] = function () {\n\t\tif (this.model === model) {\n\t\t\treturn new Color(this);\n\t\t}\n\n\t\tif (arguments.length > 0) {\n\t\t\treturn new Color(arguments, model);\n\t\t}\n\n\t\tconst newAlpha = typeof arguments[channels] === 'number' ? channels : this.valpha;\n\t\treturn new Color(assertArray(convert[this.model][model].raw(this.color)).concat(newAlpha), model);\n\t};\n\n\t// 'static' construction methods\n\tColor[model] = function (color) {\n\t\tif (typeof color === 'number') {\n\t\t\tcolor = zeroArray(_slice.call(arguments), channels);\n\t\t}\n\n\t\treturn new Color(color, model);\n\t};\n}\n\nfunction roundTo(number, places) {\n\treturn Number(number.toFixed(places));\n}\n\nfunction roundToPlace(places) {\n\treturn function (number) {\n\t\treturn roundTo(number, places);\n\t};\n}\n\nfunction getset(model, channel, modifier) {\n\tmodel = Array.isArray(model) ? model : [model];\n\n\tfor (const m of model) {\n\t\t(limiters[m] || (limiters[m] = []))[channel] = modifier;\n\t}\n\n\tmodel = model[0];\n\n\treturn function (value) {\n\t\tlet result;\n\n\t\tif (arguments.length > 0) {\n\t\t\tif (modifier) {\n\t\t\t\tvalue = modifier(value);\n\t\t\t}\n\n\t\t\tresult = this[model]();\n\t\t\tresult.color[channel] = value;\n\t\t\treturn result;\n\t\t}\n\n\t\tresult = this[model]().color[channel];\n\t\tif (modifier) {\n\t\t\tresult = modifier(result);\n\t\t}\n\n\t\treturn result;\n\t};\n}\n\nfunction maxfn(max) {\n\treturn function (v) {\n\t\treturn Math.max(0, Math.min(max, v));\n\t};\n}\n\nfunction assertArray(value) {\n\treturn Array.isArray(value) ? value : [value];\n}\n\nfunction zeroArray(array, length) {\n\tfor (let i = 0; i < length; i++) {\n\t\tif (typeof array[i] !== 'number') {\n\t\t\tarray[i] = 0;\n\t\t}\n\t}\n\n\treturn array;\n}\n\nmodule.exports = Color;\n", "import { FunctionComponent } from \"react\";\n\nexport const ExtraLargeTitle: FunctionComponent<{ className?: string }> = ({\n  className,\n  children,\n}) => {\n  return (\n    <h1 className={`font-sans font-bold text-6xl ${className}`}>{children}</h1>\n  );\n};\n", "import { FunctionComponent } from \"react\";\n\nexport const SmallSubtitle: FunctionComponent<{ className?: string }> = ({\n  className,\n  children,\n}) => {\n  return (\n    <h3 className={`font-sans text-xl text-slate-300 ${className}`}>{children}</h3>\n  );\n};\n", "import { RangeSetBuilder } from \"@codemirror/rangeset\";\nimport { JSONHeroPath } from \"@jsonhero/path\";\nimport {\n  useCodeMirror,\n  EditorView,\n  Decoration,\n  Facet,\n  ViewPlugin,\n  Compartment,\n  TransactionSpec,\n} from \"@uiw/react-codemirror\";\nimport jsonMap from \"json-source-map\";\nimport { useRef, useEffect, useMemo, useState } from \"react\";\nimport { getPreviewSetup } from \"~/utilities/codeMirrorSetup\";\nimport { lightTheme, darkTheme } from \"~/utilities/codeMirrorTheme\";\nimport { CopyTextButton } from \"./CopyTextButton\";\nimport { useTheme } from \"./ThemeProvider\";\nimport {usePreferences} from '~/components/PreferencesProvider';\nimport { useHotkeys } from \"react-hotkeys-hook\";\n\nexport type JsonPreviewProps = {\n  json: unknown;\n  highlightPath?: string;\n};\n\nexport function JsonPreview({ json, highlightPath }: JsonPreviewProps) {\n  const editor = useRef(null);\n  const [preferences] = usePreferences();\n\n  const jsonMapped = useMemo(() => {\n    return jsonMap.stringify(json, null, preferences?.indent || 2);\n  }, [json, preferences]);\n\n  const lines: LineRange | undefined = useMemo(() => {\n    if (!highlightPath) {\n      return;\n    }\n\n    let path = new JSONHeroPath(highlightPath);\n    let pointer = path.jsonPointer();\n\n    let selectionInfo = jsonMapped.pointers[pointer];\n\n    return {\n      from: selectionInfo.value.line + 1,\n      to: selectionInfo.valueEnd.line + 1,\n    };\n  }, [jsonMapped, highlightPath]);\n\n  const extensions = getPreviewSetup();\n\n  const highlighting = new Compartment();\n\n  if (lines) {\n    extensions.push(highlighting.of(highlightLineRange(lines)));\n  }\n\n  const [theme] = useTheme();\n\n  const { setContainer, view, state } = useCodeMirror({\n    container: editor.current,\n    extensions,\n    value: jsonMapped.json,\n    editable: false,\n    contentEditable: false,\n    autoFocus: false,\n    basicSetup: false,\n    theme: theme === \"light\" ? lightTheme() : darkTheme(),\n  });\n\n  useEffect(() => {\n    if (editor.current) {\n      setContainer(editor.current);\n    }\n  }, [editor.current]);\n\n  useEffect(() => {\n    if (!view) {\n      return;\n    }\n\n    let transactionSpec: TransactionSpec = {\n      changes: { from: 0, to: view.state.doc.length, insert: jsonMapped.json },\n    };\n\n    let range = lines;\n    if (range != null) {\n      transactionSpec.effects = highlighting.reconfigure(\n        highlightLineRange(range)\n      );\n    }\n\n    view.dispatch(transactionSpec);\n  }, [view, highlighting, jsonMapped, highlightPath]);\n\n  useHotkeys(\n    \"ctrl+a,meta+a,command+a\",\n    (e) => {\n      e.preventDefault();\n      view?.dispatch({ selection: { anchor: 0, head: state?.doc.length } });\n    },\n    [view, state]\n  );\n\n  const [hovering, setHovering] = useState(false);\n\n  return (\n    <div\n      className=\"relative w-full h-full\"\n      onMouseEnter={() => setHovering(true)}\n      onMouseLeave={() => setHovering(false)}\n    >\n      <div ref={editor} />\n      <div\n        className={`absolute top-1 right-0 flex justify-end w-full transition ${\n          hovering ? \"opacity-100\" : \"opacity-0\"\n        }`}\n      >\n        <CopyTextButton\n          value={jsonMapped.json}\n          className=\"bg-slate-200 hover:bg-slate-300 h-fit mr-1 px-2 py-0.5 rounded-sm transition hover:cursor-pointer dark:text-white dark:bg-slate-700 dark:hover:bg-slate-600\"\n        ></CopyTextButton>\n      </div>\n    </div>\n  );\n}\n\ninterface LineRange {\n  from: number;\n  to: number;\n}\n\nconst baseTheme = EditorView.baseTheme({\n  \"&light .cm-highlighted\": { backgroundColor: \"#ffee0055\" },\n  \"&dark .cm-highlighted\": { backgroundColor: \"#ffee0055\" },\n});\n\nconst highlightedRange = Facet.define<LineRange, LineRange>({\n  combine: (values) => (values.length ? values[0] : { from: -1, to: -1 }),\n});\n\nfunction highlightLineRange(range: LineRange | null) {\n  return [\n    baseTheme,\n    range == null ? [] : highlightedRange.of(range),\n    highlightLineRangePlugin,\n  ];\n}\nconst lineHighlightDecoration = Decoration.line({\n  attributes: { class: \"cm-highlighted\" },\n});\n\nfunction highlightLines(view: EditorView) {\n  let highlightRange = view.state.facet(highlightedRange);\n  let builder = new RangeSetBuilder();\n  for (let { from, to } of view.visibleRanges) {\n    for (let pos = from; pos <= to; ) {\n      let line = view.state.doc.lineAt(pos);\n      if (\n        line.number >= highlightRange.from &&\n        line.number <= highlightRange.to\n      ) {\n        builder.add(line.from, line.from, lineHighlightDecoration);\n      }\n      pos = line.to + 1;\n    }\n  }\n  return builder.finish();\n}\n\nconst highlightLineRangePlugin = ViewPlugin.fromClass(\n  class {\n    decorations: any;\n    constructor(view: any) {\n      this.decorations = highlightLines(view);\n    }\n\n    update(update: { docChanged: any; viewportChanged: any; view: any }) {\n      if (update.docChanged || update.viewportChanged)\n        this.decorations = highlightLines(update.view);\n    }\n  },\n  {\n    decorations: (v) => v.decorations,\n  }\n);\n", "import { ClipboardIcon } from \"@heroicons/react/outline\";\nimport { useCallback, useState } from \"react\";\nimport { CopyText } from \"./CopyText\";\nimport { Body } from \"./Primitives/Body\";\n\nexport type CopyTextButtonProps = {\n  value: string;\n  className?: string;\n};\n\nexport function CopyTextButton({ value, className }: CopyTextButtonProps) {\n  const [copied, setCopied] = useState(false);\n  const onCopied = useCallback(() => {\n    setCopied(true);\n    const timeout = setTimeout(() => {\n      setCopied(false);\n    }, 1500);\n  }, [value]);\n  return (\n    <CopyText className={`${className}`} value={value} onCopied={onCopied}>\n      {copied ? (\n        <Body>Copied!</Body>\n      ) : (\n        <div className=\"flex items-center\">\n          <ClipboardIcon className=\"h-4 w-4 mr-[2px]\" />\n          <Body>Copy</Body>\n        </div>\n      )}\n    </CopyText>\n  );\n}\n", "import React, { useCallback } from \"react\";\n\nexport type CopyTextProps = {\n  children?: React.ReactNode;\n  value: string;\n  className?: string;\n  onCopied?: () => void;\n};\n\nexport function CopyText({\n  children,\n  value,\n  className,\n  onCopied,\n}: CopyTextProps) {\n  const onClick = useCallback(() => {\n    navigator.clipboard.writeText(value);\n    if (onCopied) {\n      onCopied();\n    }\n  }, [value]);\n\n  return (\n    <div onClick={onClick} className={`${className}`}>\n      {children}\n    </div>\n  );\n}\n", "import { useSelectedInfo } from \"~/hooks/useSelectedInfo\";\nimport { PreviewString } from \"./Types/PreviewString\";\n\nexport function PreviewValue() {\n  const info = useSelectedInfo();\n\n  if (!info) {\n    return <></>;\n  }\n\n  switch (info.name) {\n    case \"string\":\n      return <PreviewString info={info} />;\n    default:\n      return <></>;\n  }\n}\n", "import { JSONStringType } from \"@jsonhero/json-infer-types/lib/@types\";\nimport {\n  JSONColorFormat,\n  JSONJSONFormat,\n} from \"@jsonhero/json-infer-types/lib/formats\";\nimport Color from \"color\";\nimport { CodeViewer } from \"~/components/CodeViewer\";\nimport { PreviewBox } from \"../PreviewBox\";\nimport { PreviewAudioUri } from \"./PreviewAudioUri\";\nimport { PreviewDate } from \"./PreviewDate\";\nimport { PreviewImageUri } from \"./PreviewImageUri\";\nimport { PreviewIPFSImage } from \"./PreviewIPFSImage\";\nimport { PreviewUri } from \"./PreviewUri\";\nimport { PreviewVideoUri } from \"./PreviewVideoUri\";\n\nexport function PreviewString({ info }: { info: JSONStringType }) {\n  if (info.format == null) {\n    return <></>;\n  }\n\n  switch (info.format.name) {\n    case \"uri\":\n      if (\n        info.format.contentType === \"image/png\" ||\n        info.format.contentType === \"image/jpeg\" ||\n        info.format.contentType === \"image/gif\" ||\n        info.format.contentType === \"image/svg+xml\" ||\n        info.format.contentType === \"image/webp\"\n      ) {\n        const url = new URL(info.value);\n\n        if (url.protocol === \"ipfs:\") {\n          return <PreviewIPFSImage src={url} />;\n        } else {\n          return (\n            <PreviewImageUri\n              src={info.value}\n              contentType={info.format.contentType}\n            />\n          );\n        }\n      } else if (\n        info.format.contentType === \"video/mp4\" ||\n        info.format.contentType === \"video/webm\" ||\n        info.format.contentType === \"video/ogg\"\n      ) {\n        return (\n          <PreviewVideoUri\n            src={info.value}\n            contentType={info.format.contentType}\n          />\n        );\n      } else if (\n        info.format.contentType === \"audio/mpeg\" ||\n        info.format.contentType === \"audio/ogg\" ||\n        info.format.contentType === \"audio/wav\"\n      ) {\n        return (\n          <PreviewAudioUri\n            src={info.value}\n            contentType={info.format.contentType}\n          />\n        );\n      } else {\n        return <PreviewUri value={info.value} type={info} />;\n      }\n    case \"datetime\":\n      if (info.format.parts === \"date\" || info.format.parts === \"datetime\") {\n        return <PreviewDate value={info.value} format={info.format} />;\n      }\n      return <></>;\n    case \"color\":\n      return <PreviewColor value={info.value} format={info.format} />;\n    case \"json\":\n      return <PreviewJson value={info.value} format={info.format} />;\n    default:\n      return <></>;\n  }\n}\n\nfunction PreviewJson({\n  value,\n  format,\n}: {\n  value: string;\n  format: JSONJSONFormat;\n}) {\n  if (format.variant === \"json5\") {\n    return <></>;\n  }\n\n  return <CodeViewer code={JSON.stringify(JSON.parse(value), null, 2)} />;\n}\n\nfunction PreviewColor({\n  value,\n  format,\n}: {\n  value: string;\n  format: JSONColorFormat;\n}) {\n  const color = new Color(value);\n\n  const textColor = color.isLight() ? \"text-slate-800\" : \"text-slate-100\";\n\n  return (\n    <>\n      <PreviewBox>\n        <div>\n          <div\n            className=\"flex items-center justify-center w-full h-52\"\n            style={{ backgroundColor: color.hex().toString() }}\n          >\n            <p className={`text-center text-xl ${textColor}`}>{value}</p>\n          </div>\n        </div>\n      </PreviewBox>\n    </>\n  );\n}\n", "import { json as jsonLang } from \"@codemirror/lang-json\";\nimport { useCodeMirror } from \"@uiw/react-codemirror\";\nimport { useRef, useEffect } from \"react\";\nimport { getViewerSetup } from \"~/utilities/codeMirrorSetup\";\nimport { darkTheme, lightTheme } from \"~/utilities/codeMirrorTheme\";\nimport { useTheme } from \"./ThemeProvider\";\nimport { useHotkeys } from \"react-hotkeys-hook\";\n\nexport function CodeViewer({ code, lang }: { code: string; lang?: \"json\" }) {\n  const editor = useRef(null);\n\n  const extensions = getViewerSetup();\n\n  if (!lang || lang === \"json\") {\n    extensions.push(jsonLang());\n  }\n\n  const [theme] = useTheme();\n\n  const { setContainer, view, state } = useCodeMirror({\n    container: editor.current,\n    extensions,\n    value: code,\n    editable: false,\n    contentEditable: false,\n    autoFocus: false,\n    basicSetup: false,\n    theme: theme === \"light\" ? lightTheme() : darkTheme(),\n  });\n\n  useEffect(() => {\n    if (editor.current) {\n      setContainer(editor.current);\n    }\n  }, [editor.current]);\n\n  useHotkeys(\n    \"ctrl+a,meta+a,command+a\",\n    (e) => {\n      e.preventDefault();\n      view?.dispatch({ selection: { anchor: 0, head: state?.doc.length } });\n    },\n    [view, state]\n  );\n\n  return (\n    <div>\n      <div ref={editor} />\n    </div>\n  );\n}\n", "import { useCallback } from \"react\";\nimport { Title } from \"../Primitives/Title\";\n\nexport type PreviewBoxProps = {\n  link?: string;\n  children: React.ReactNode;\n  className?: string;\n};\n\nexport function PreviewBox({ link, className, children }: PreviewBoxProps) {\n  const onClick = useCallback(() => {\n    if (!link) return;\n    window.open(link, \"_blank\");\n  }, [link]);\n\n  return (\n    <div className={className}>\n      <Title className=\"text-slate-700 transition dark:text-slate-400 mb-2\">\n        Preview\n      </Title>\n      <div\n        onClick={onClick}\n        className=\"block rounded-sm p-2 text-slate-700 bg-slate-100 transition dark:text-slate-300 dark:bg-white dark:bg-opacity-5 hover:cursor-pointer\"\n      >\n        <div>{children}</div>\n      </div>\n    </div>\n  );\n}\n", "import { useRef } from \"react\";\nimport { useHotkeys } from \"react-hotkeys-hook\";\nimport { Body } from \"~/components/Primitives/Body\";\nimport { PreviewBox } from \"../PreviewBox\";\n\nexport function PreviewAudioUri({\n  src,\n  contentType,\n}: {\n  src: string;\n  contentType: string;\n}) {\n  const mediaRef = useRef<HTMLMediaElement>(null);\n\n  useHotkeys(\n    \"space\",\n    (e) => {\n      e.preventDefault();\n\n      if (mediaRef.current) {\n        if (mediaRef.current.paused) {\n          mediaRef.current.play();\n        } else {\n          mediaRef.current.pause();\n        }\n      }\n    },\n    [mediaRef]\n  );\n\n  return (\n    <div>\n      <PreviewBox>\n        <Body>\n          <audio controls src={src} ref={mediaRef}>\n            Sorry, your browser doesn't support embedded audio.\n          </audio>\n        </Body>\n      </PreviewBox>\n    </div>\n  );\n}\n", "import { Temporal } from \"@js-temporal/polyfill\";\nimport { JSONDateTimeFormat, JSONStringType } from \"@jsonhero/json-infer-types\";\nimport { useMemo } from \"react\";\nimport { inferTemporal } from \"~/utilities/inferredTemporal\";\nimport { CalendarMonth } from \"../CalendarMonth\";\n\nexport type PreviewDateProps = {\n  value: string;\n  format: JSONDateTimeFormat;\n};\n\nexport function PreviewDate({ value, format }: PreviewDateProps) {\n  const temporal = inferTemporal(value, format);\n\n  if (!temporal) {\n    return <></>;\n  }\n\n  // Can only convert to the legacy Date class if temporal is either a ZonedDateTime or an Instant\n  if (\"epochMilliseconds\" in temporal) {\n    const date = new Date(temporal.epochMilliseconds);\n\n    return <CalendarMonth date={date} />;\n  } else if (temporal instanceof Temporal.PlainDate) {\n    const date = new Date(temporal.year, temporal.month - 1, temporal.day);\n\n    return <CalendarMonth date={date} />;\n  } else if (temporal instanceof Temporal.PlainDateTime) {\n    const date = new Date(\n      temporal.year,\n      temporal.month - 1,\n      temporal.day,\n      temporal.hour,\n      temporal.minute,\n      temporal.second,\n      temporal.millisecond\n    );\n\n    return <CalendarMonth date={date} />;\n  } else {\n    return <></>;\n  }\n}\n", "import { useMemo } from \"react\";\nimport { Title } from \"../Primitives/Title\";\n\nexport type CalendarMonthProps = {\n  date: Date;\n};\n\ntype Day = {\n  date: string;\n  isCurrentMonth: boolean;\n  isHighlighted: boolean;\n};\n\nfunction dateString(date: Date): string {\n  return `${date.getFullYear()}-${date.getMonth()}-${date.getDate()}`;\n}\n\nfunction isSameDay(date: Date, otherDate: Date): boolean {\n  return (\n    date.getFullYear() === otherDate.getFullYear() &&\n    date.getMonth() === otherDate.getMonth() &&\n    date.getDate() === otherDate.getDate()\n  );\n}\n\nexport function CalendarMonth({ date }: CalendarMonthProps) {\n  const days = useMemo<Array<Day>>(() => {\n    let days: Array<Day> = [];\n\n    //create first day of the month\n    const firstDayOfMonth = new Date(date);\n    firstDayOfMonth.setDate(1);\n\n    //if the first day isn't a monday, we need to add days from the previous month in\n    const firstDayOfWeek = firstDayOfMonth.getDay() - 1;\n    if (firstDayOfWeek != 0) {\n      const previousMonthDate = new Date(firstDayOfMonth);\n      for (let index = 0; index < firstDayOfWeek; index++) {\n        previousMonthDate.setDate(previousMonthDate.getDate() - 1);\n        days.push({\n          date: dateString(previousMonthDate),\n          isCurrentMonth: false,\n          isHighlighted: isSameDay(date, previousMonthDate),\n        });\n      }\n    }\n\n    //current month\n    let currentMonthDate = new Date(firstDayOfMonth);\n    const monthNumber = firstDayOfMonth.getMonth();\n    while (true) {\n      days.push({\n        date: dateString(currentMonthDate),\n        isCurrentMonth: true,\n        isHighlighted: isSameDay(date, currentMonthDate),\n      });\n\n      currentMonthDate.setDate(currentMonthDate.getDate() + 1);\n\n      if (currentMonthDate.getMonth() !== monthNumber) {\n        break;\n      }\n    }\n\n    //next month\n    const lastDayOfMonthDayOfWeek = currentMonthDate.getDay() - 1;\n    const nextMonthDayCount = 7 - lastDayOfMonthDayOfWeek;\n    for (let index = 0; index < nextMonthDayCount; index++) {\n      days.push({\n        date: dateString(currentMonthDate),\n        isCurrentMonth: false,\n        isHighlighted: isSameDay(date, currentMonthDate),\n      });\n      currentMonthDate.setDate(currentMonthDate.getDate() + 1);\n    }\n\n    return days;\n  }, [date]);\n\n  return (\n    <section className=\"\">\n      <Title className=\"text-left text-slate-800 dark:text-slate-400\">\n        {new Intl.DateTimeFormat(\"en-US\", {\n          weekday: \"short\",\n          year: \"numeric\",\n          month: \"short\",\n          day: \"numeric\",\n          hour: \"numeric\",\n          hour12: true,\n          minute: \"2-digit\",\n          second: \"2-digit\",\n          timeZoneName: \"short\",\n        }).format(date)}\n      </Title>\n      <div className=\"uppercase mt-2 grid text-center tracking-wider grid-cols-7 text-sm leading-6 text-gray-500 dark:text-slate-500\">\n        <div>Mon</div>\n        <div>Tue</div>\n        <div>Wed</div>\n        <div>Thu</div>\n        <div>Fri</div>\n        <div>Sat</div>\n        <div>Sun</div>\n      </div>\n      <div className=\"isolate mt-2 grid grid-cols-7 gap-px rounded-lg bg-gray-200 text-sm ring-1 cursor-default ring-slate-200 dark:ring-slate-600 dark:bg-slate-600\">\n        {days.map((day, dayIdx) => (\n          <button\n            key={day.date}\n            type=\"button\"\n            className={`\"cursor-default\" ${classNames(\n              day.isCurrentMonth\n                ? \"bg-white text-slate-900 dark:text-slate-300 dark:bg-slate-800\"\n                : \"bg-slate-100 text-slate-400 dark:text-slate-500 dark:bg-slate-800 dark:bg-opacity-90\",\n              dayIdx === 0 && \"rounded-tl-lg\",\n              dayIdx === 6 && \"rounded-tr-lg\",\n              dayIdx === days.length - 7 && \"rounded-bl-lg\",\n              dayIdx === days.length - 1 && \"rounded-br-lg\",\n              \"relative py-1.5 focus:z-10\"\n            )}`}\n          >\n            <time\n              dateTime={day.date}\n              className={classNames(\n                day.isHighlighted && \"bg-indigo-600 font-semibold text-white\",\n                \"mx-auto flex h-7 w-7 items-center cursor-default justify-center rounded-full\"\n              )}\n            >\n              {day.date.split(\"-\").pop()?.replace(/^0/, \"\")}\n            </time>\n          </button>\n        ))}\n      </div>\n    </section>\n  );\n}\n\nfunction classNames(...classes: (string | boolean)[]) {\n  return classes.filter(Boolean).join(\" \");\n}\n", "import { Body } from \"~/components/Primitives/Body\";\nimport { PreviewBox } from \"../PreviewBox\";\n\nexport function PreviewImageUri({\n  src,\n  contentType,\n  alt = \"\",\n}: {\n  src: string;\n  contentType?: string;\n  alt?: string\n}) {\n  return (\n    <div>\n      <PreviewBox link={src}>\n        <Body>\n          <img src={src} alt={alt} />\n        </Body>\n      </PreviewBox>\n    </div>\n  );\n}\n", "import { PreviewImageUri } from \"./PreviewImageUri\";\n\nexport function PreviewIPFSImage({ src }: { src: URL }) {\n  const newSrc = createPreviewIPFSImageURL(src);\n\n  return <PreviewImageUri src={newSrc} />;\n}\n\nconst createPreviewIPFSImageURL = (src: URL): string => {\n  const url = new URL(src.href);\n\n  url.protocol = \"https:\";\n  url.pathname = `/ipfs/${src.pathname.substring(1)}`;\n  url.hostname = \"ipfs.io\";\n  // Remove the leading slash\n\n  return url.href;\n};\n", "import { JSONStringType } from \"@jsonhero/json-infer-types/lib/@types\";\nimport { useEffect } from \"react\";\nimport { useFetcher } from \"remix\";\nimport { Body } from \"~/components/Primitives/Body\";\nimport { useLoadWhenOnline } from \"~/hooks/useLoadWhenOnline\";\nimport { PreviewBox } from \"../PreviewBox\";\nimport { PreviewResult } from \"./preview.types\";\nimport { PreviewUriElement } from \"./PreviewUriElement\";\n\nexport type PreviewUriProps = {\n  value: string;\n  type: JSONStringType;\n};\n\nexport function PreviewUri(props: PreviewUriProps) {\n  const previewFetcher = useFetcher<PreviewResult>();\n  const encodedUri = encodeURIComponent(props.value);\n  const load = () => previewFetcher.load(`/actions/getPreview/${encodedUri}`);\n\n  useLoadWhenOnline(load, [encodedUri]);\n\n  return (\n    <div>\n      {previewFetcher.type === \"done\" ? (\n        <>\n          {typeof previewFetcher.data == \"string\" ? (\n            <PreviewBox>\n              <Body>\n                <span\n                  dangerouslySetInnerHTML={{ __html: previewFetcher.data }}\n                ></span>\n              </Body>\n            </PreviewBox>\n          ) : \"error\" in previewFetcher.data ? (\n            <PreviewBox>\n              <Body>{previewFetcher.data.error}</Body>\n            </PreviewBox>\n          ) : (\n            <PreviewUriElement info={previewFetcher.data} />\n          )}\n        </>\n      ) : (\n        <PreviewBox>\n          <Body className=\"h-96 animate-pulse bg-slate-300 dark:text-slate-300 dark:bg-slate-500 flex justify-center items-center\">\n            Loading\u2026\n          </Body>\n        </PreviewBox>\n      )}\n    </div>\n  );\n}\n", "import { useEffect, useRef } from \"react\";\n\nexport function useLoadWhenOnline(callback: () => void, deps: unknown[] = []) {\n    const callbackRef = useRef <() => void>(callback);\n\n    useEffect(() => {\n        callbackRef.current = callback;\n    });\n\n    useEffect(() => {\n        const cb = () => callbackRef.current();\n\n        if (window.navigator.onLine) {\n            cb();\n            return;\n        }\n\n        window.addEventListener(\"online\", cb);\n\n        return () => {\n            window.removeEventListener(\"online\", cb);\n        };\n    }, [...deps]);\n}\n", "import { PreviewInfo } from \"./preview.types\";\nimport { PreviewHtml } from \"./PreviewHtml\";\nimport { PreviewImage } from \"./PreviewImage\";\nimport { PreviewJson } from \"./PreviewJson\";\n\nexport type PreviewUriElementProps = {\n  info: PreviewInfo;\n};\n\nexport function PreviewUriElement({ info }: PreviewUriElementProps) {\n  switch (info.contentType) {\n    case \"html\":\n      return <PreviewHtml info={info} />;\n    case \"image\":\n    case \"gif\":\n      return <PreviewImage info={info} />;\n    case \"json\":\n      return <PreviewJson preview={info} />;\n    default:\n      return <></>;\n  }\n}\n", "import { Body } from \"~/components/Primitives/Body\";\nimport { Title } from \"~/components/Primitives/Title\";\nimport { PreviewBox } from \"../PreviewBox\";\nimport { PreviewHtml } from \"./preview.types\";\n\nexport type PreviewHtmlProps = {\n  info: PreviewHtml;\n};\n\nexport function PreviewHtml({ info }: PreviewHtmlProps) {\n  return (\n    <PreviewBox link={info.url}>\n      <div>\n        {info.title && (\n          <Title>\n            {info.icon && (\n              <img src={info.icon.url} className=\"w-4 h-4 inline mr-1\" alt=\"\" />\n            )}\n            <span className=\"inline\">{info.title}</span>\n          </Title>\n        )}\n        {info.description && <Body>{info.description}</Body>}\n      </div>\n      {info.image && (\n        <div>\n          <img className=\"block\" src={info.image?.url} alt={info.image?.alt} />\n        </div>\n      )}\n    </PreviewBox>\n  );\n}\n", "import { formatBytes } from \"~/utilities/formatter\";\nimport { PreviewBox } from \"../PreviewBox\";\nimport { PreviewProperties, PreviewProperty } from \"../PreviewProperties\";\nimport { PreviewImage } from \"./preview.types\";\n\nexport type PreviewImageProps = {\n  info: PreviewImage;\n};\n\nexport function PreviewImage({ info }: PreviewImageProps) {\n  let properties: Array<PreviewProperty> = [];\n\n  if (info.mimeType) {\n    properties.push({ key: \"mimeType\", title: info.mimeType });\n  }\n\n  if (info.size) {\n    properties.push({ key: \"fileSize\", title: `${formatBytes(info.size)}` });\n  }\n\n  const src = info.image ? info.image.url : info.url;\n\n  return (\n    <PreviewBox link={info.url}>\n      <img className=\"block max-h-96 w-full object-contain\" src={src} />\n      <PreviewProperties properties={properties} />\n    </PreviewBox>\n  );\n}\n", "import { Body } from \"../Primitives/Body\";\n\nexport type PreviewPropertyProps = {\n  properties: Array<PreviewProperty>;\n};\n\nexport type PreviewProperty = {\n  key: string;\n  title: string;\n  icon?: JSX.Element;\n};\n\nexport function PreviewProperties({ properties }: PreviewPropertyProps) {\n  return (\n    <div className=\"-mb-1\">\n      {properties.map((property) => {\n        return (\n          <Body\n            className=\"text-slate-500 mr-2 inline-flex items-center\"\n            key={property.key}\n          >\n            {property.icon && (\n              <span className=\"w-4 h-4 inline-block text-slate-500 mr-1 flex-none\">\n                {property.icon}\n              </span>\n            )}\n            <span>{property.title}</span>\n          </Body>\n        );\n      })}\n    </div>\n  );\n}\n", "import { useState } from \"react\";\nimport { CodeViewer } from \"~/components/CodeViewer\";\nimport { CopyTextButton } from \"~/components/CopyTextButton\";\nimport { OpenInNewWindow } from \"~/components/OpenInWindow\";\nimport { Body } from \"~/components/Primitives/Body\";\nimport { PreviewBox } from \"../PreviewBox\";\nimport { PreviewJson } from \"./preview.types\";\n\nexport function PreviewJson({ preview }: { preview: PreviewJson }) {\n  const [hovering, setHovering] = useState(false);\n  const jsonHeroUrl = new URL(\n    `/actions/createFromUrl?jsonUrl=${encodeURIComponent(preview.url)}`,\n    window.location.origin\n  );\n\n  jsonHeroUrl.searchParams.append(\"utm_source\", \"preview\");\n\n  const code = JSON.stringify(preview.json, null, 2);\n\n  return (\n    <PreviewBox className=\"relative\">\n      <div\n        className=\"relative w-full h-full\"\n        onMouseEnter={() => setHovering(true)}\n        onMouseLeave={() => setHovering(false)}\n      >\n        <CodeViewer code={code} />\n        <div\n          className={`absolute top-0 flex justify-end pt-1 pr-1 w-full transition ${\n            hovering ? \"opacity-100\" : \"opacity-0\"\n          }`}\n        >\n          <CopyTextButton\n            value={code}\n            className=\"bg-slate-200 hover:bg-slate-300 h-fit mr-1 px-2 py-0.5 rounded-sm transition dark:text-white dark:bg-slate-700 dark:hover:bg-slate-600\"\n          ></CopyTextButton>\n          <OpenInNewWindow\n            url={jsonHeroUrl.href}\n            className=\"bg-slate-200 hover:bg-slate-300 h-fit px-2 py-0.5 rounded-sm transition dark:text-white dark:bg-slate-700 dark:hover:bg-slate-600\"\n          >\n            <Body>Open in tab</Body>\n          </OpenInNewWindow>\n        </div>\n      </div>\n    </PreviewBox>\n  );\n}\n", "export type OpenInNewWindowProps = {\n  children?: React.ReactNode;\n  url?: string;\n  className?: string;\n};\n\nexport function OpenInNewWindow({\n  url,\n  className,\n  children,\n}: OpenInNewWindowProps) {\n  return (\n    <a href={url} target=\"_blank\" className={`${className} relative`}>\n      {children}\n    </a>\n  );\n}\n", "import { useRef } from \"react\";\nimport { useHotkeys } from \"react-hotkeys-hook\";\nimport { Body } from \"~/components/Primitives/Body\";\nimport { PreviewBox } from \"../PreviewBox\";\n\nexport function PreviewVideoUri({\n  src,\n  contentType,\n}: {\n  src: string;\n  contentType: string;\n}) {\n  const videoRef = useRef<HTMLVideoElement>(null);\n\n  useHotkeys(\n    \"space\",\n    (e) => {\n      e.preventDefault();\n\n      if (videoRef.current) {\n        if (videoRef.current.paused) {\n          videoRef.current.play();\n        } else {\n          videoRef.current.pause();\n        }\n      }\n    },\n    [videoRef]\n  );\n\n  return (\n    <div>\n      <PreviewBox>\n        <Body>\n          <video key={src} controls ref={videoRef}>\n            <source src={src} type={contentType} />\n            Sorry, your browser doesn't support embedded videos.\n          </video>\n        </Body>\n      </PreviewBox>\n    </div>\n  );\n}\n", "import { useSelectedInfo } from \"~/hooks/useSelectedInfo\";\nimport { PropertiesInt } from \"./PropertiesInt\";\nimport { PropertiesFloat } from \"./PropertiesFloat\";\nimport { PropertiesString } from \"./PropertiesString\";\n\nexport function PropertiesValue() {\n  const info = useSelectedInfo();\n\n  if (!info) {\n    return <></>;\n  }\n\n  switch (info.name) {\n    case \"float\":\n      return <PropertiesFloat type={info} />;\n    case \"int\":\n      return <PropertiesInt type={info} />;\n    case \"string\":\n      return <PropertiesString type={info} />;\n    default:\n      return <></>;\n  }\n}\n", "import { JSONIntType } from \"@jsonhero/json-infer-types\";\nimport {\n  JSONTimestampFormat,\n} from \"@jsonhero/json-infer-types/lib/formats\";\nimport { formatValue } from \"~/utilities/formatter\";\nimport { DataTable } from \"../DataTable\";\nimport { ValueIcon } from \"../ValueIcon\";\n\nexport type PropertiesNumberProps = {\n  type: JSONIntType;\n};\n\nexport function PropertiesInt({ type }: { type: JSONIntType }) {\n  if (type.format == null) {\n    return (\n      <DataTable\n        rows={[\n          {\n            key: \"Formatted value\",\n            value: formatValue(type) ?? \"\",\n            icon: <ValueIcon type={type} />,\n          },\n          {\n            key: \"Type\",\n            value: type.name,\n          },\n        ]}\n      />\n    );\n  }\n  switch (type.format.name) {\n    case \"timestamp\":\n      return <PropertiesTimestamp value={type.value} format={type.format} />;\n    default:\n      return <></>;\n  }\n}\n\nfunction PropertiesTimestamp({\n  value,\n  format,\n}: {\n  value: number;\n  format: JSONTimestampFormat;\n}) {\n  const date =\n    format.variant === \"millisecondsSinceEpoch\"\n      ? new Date(value)\n      : format.variant === \"secondsSinceEpoch\"\n      ? new Date(value * 1000)\n      : new Date(value / 1000000);\n\n  const properties = [\n    {\n      key: \"rfc3339\",\n      value: date.toISOString(),\n    },\n    {\n      key: \"rfc2822\",\n      value: date.toUTCString(),\n    },\n    {\n      key: \"unix\",\n      value: (date.getTime() / 1000).toFixed(0),\n    },\n    {\n      key: \"unix ms\",\n      value: date.getTime().toString(),\n    },\n    {\n      key: \"date\",\n      value: date.toDateString(),\n    },\n    {\n      key: \"time\",\n      value: date.toTimeString(),\n    },\n  ];\n\n  return <DataTable rows={properties} />;\n}", "import { FunctionComponent, useState } from \"react\";\nimport { CopyTextButton } from \"./CopyTextButton\";\nimport { Title } from \"./Primitives/Title\";\n\nexport type DataTableProps = {\n  rows: DataTableRow[];\n};\n\nexport type DataTableRow = {\n  key: string;\n  value: string;\n  icon?: JSX.Element;\n};\n\ntype DataRowProps = {\n  title: string;\n  value: string;\n  icon?: JSX.Element;\n};\n\nconst DataRow: FunctionComponent<DataRowProps> = ({ title, value, icon }) => {\n  const [hovering, setHovering] = useState(false);\n  return (\n    <tr className=\"divide-solid divide-x transition dark:divide-slate-700\">\n      <td className=\"flex items-baseline py-2 pr-3 text-base dark:text-slate-400\">\n        <div className=\"flex-1 ml-1\">{title}</div>\n      </td>\n      <td\n        onMouseOver={() => setHovering(true)}\n        onMouseOut={() => setHovering(false)}\n        className={`relative w-full h-full pl-2 py-2 text-base text-slate-800 transition dark:text-slate-300 break-all ${\n          hovering ? \"bg-slate-100 dark:bg-slate-700\" : \"bg-transparent\"\n        }`}\n      >\n        {value}\n        <div\n          className={`absolute top-0 right-0 flex justify-end h-full w-full transition ${\n            hovering ? \"opacity-100\" : \"opacity-0\"\n          }`}\n        >\n          <CopyTextButton\n            className=\"bg-slate-200 hover:bg-slate-300 h-fit mt-1 mr-1 px-2 py-0.5 rounded-sm transition hover:cursor-pointer dark:text-white dark:bg-slate-600 dark:hover:bg-slate-500\"\n            value={value}\n          ></CopyTextButton>\n        </div>\n      </td>\n    </tr>\n  );\n};\n\nexport const DataTable: FunctionComponent<DataTableProps> = ({ rows }) => {\n  return (\n    <div>\n      <Title className=\"text-slate-700 dark:text-slate-400 mb-2\">\n        Properties\n      </Title>\n      <table className=\"w-full table-auto border-y-[0.5px] border-slate-300 transition dark:border-slate-700\">\n        <tbody className=\"divide-solid divide-y divide-slate-300 w-full transition dark:divide-slate-700\">\n          {rows.map((row) => {\n            return (\n              <DataRow\n                key={row.key}\n                title={row.key}\n                value={row.value}\n                icon={row.icon}\n              />\n            );\n          })}\n        </tbody>\n      </table>\n    </div>\n  );\n};\n", "import { FunctionComponent } from \"react\";\nimport {\n  ArchiveIcon,\n  AtSymbolIcon,\n  CalendarIcon,\n  ChatAlt2Icon,\n  CheckCircleIcon,\n  ClockIcon,\n  CodeIcon,\n  CollectionIcon,\n  ColorSwatchIcon,\n  CreditCardIcon,\n  CubeIcon,\n  CurrencyDollarIcon,\n  DocumentTextIcon,\n  EmojiHappyIcon,\n  EyeOffIcon,\n  GlobeAltIcon,\n  GlobeIcon,\n  HashtagIcon,\n  IdentificationIcon,\n  KeyIcon,\n  PhoneIcon,\n  PhotographIcon,\n} from \"@heroicons/react/outline\";\nimport { JSONValueType } from \"@jsonhero/json-infer-types\";\nimport { colorForTypeName } from \"../utilities/colors\";\nimport { StringIcon } from \"./Icons/StringIcon\";\n\ntype ValueIconProps = {\n  type: JSONValueType;\n  size?: ValueIconSize;\n  monochrome?: boolean;\n};\n\nexport enum ValueIconSize {\n  Small,\n  Medium,\n}\n\nexport const ValueIcon: FunctionComponent<ValueIconProps> = ({\n  type,\n  size = ValueIconSize.Small,\n  monochrome = false,\n}) => {\n  let classes = monochrome ? `text-slate-300` : colorForTypeName(type.name);\n  switch (size) {\n    case ValueIconSize.Small:\n      classes += \" h-4 w-4\";\n      break;\n    case ValueIconSize.Medium:\n      classes += \" h-6 w-6\";\n      break;\n  }\n\n  switch (type.name) {\n    case \"object\": {\n      return <CubeIcon className={classes} />;\n    }\n    case \"array\": {\n      return <CollectionIcon className={classes} />;\n    }\n    case \"null\": {\n      return <EyeOffIcon className={classes} />;\n    }\n    case \"bool\": {\n      return <CheckCircleIcon className={classes} />;\n    }\n    case \"int\": {\n      if (type.format == null) {\n        return <HashtagIcon className={classes} />;\n      }\n      switch (type.format.name) {\n        case \"timestamp\": {\n          return <CalendarIcon className={classes} />;\n        }\n      }\n    }\n    case \"float\": {\n      return <HashtagIcon className={classes} />;\n    }\n    case \"string\": {\n      if (type.format == null) {\n        return <StringIcon className={classes} />;\n      }\n\n      switch (type.format.name) {\n        case \"timestamp\": {\n          return <CalendarIcon className={classes} />;\n        }\n        case \"datetime\": {\n          switch (type.format.parts) {\n            case \"time\":\n              return <ClockIcon className={classes} />;\n          }\n          return <CalendarIcon className={classes} />;\n        }\n        case \"email\": {\n          return <AtSymbolIcon className={classes} />;\n        }\n        case \"hostname\":\n        case \"tld\":\n        case \"ip\": {\n          return <GlobeAltIcon className={classes} />;\n        }\n        case \"uri\": {\n          switch (type.format.contentType) {\n            case \"image/jpeg\":\n            case \"image/png\":\n            case \"image/gif\":\n            case \"image/webm\":\n              return <PhotographIcon className={classes} />;\n            case \"application/json\":\n              return <CodeIcon className={classes} />;\n            default:\n              return <GlobeAltIcon className={classes} />;\n          }\n        }\n        case \"phoneNumber\": {\n          return <PhoneIcon className={classes} />;\n        }\n        case \"currency\": {\n          return <CurrencyDollarIcon className={classes} />;\n        }\n        case \"country\": {\n          return <GlobeIcon className={classes} />;\n        }\n        case \"emoji\": {\n          return <EmojiHappyIcon className={classes} />;\n        }\n        case \"language\": {\n          return <ChatAlt2Icon className={classes} />;\n        }\n        case \"filesize\": {\n          return <ArchiveIcon className={classes} />;\n        }\n        case \"uuid\": {\n          return <IdentificationIcon className={classes} />;\n        }\n        case \"json\":\n        case \"jsonPointer\": {\n          return <CodeIcon className={classes} />;\n        }\n        case \"jwt\": {\n          return <KeyIcon className={classes} />;\n        }\n        case \"semver\": {\n          return <DocumentTextIcon className={classes} />;\n        }\n        case \"color\": {\n          return <ColorSwatchIcon className={classes} />;\n        }\n        case \"creditcard\": {\n          switch (type.format.variant) {\n            case \"visa\": {\n              return <CreditCardIcon className={classes} />;\n            }\n            case \"mastercard\": {\n              return <CreditCardIcon className={classes} />;\n            }\n            case \"amex\": {\n              return <CreditCardIcon className={classes} />;\n            }\n            case \"discover\": {\n              return <CreditCardIcon className={classes} />;\n            }\n            case \"dinersclub\": {\n              return <CreditCardIcon className={classes} />;\n            }\n            default:\n              return <CreditCardIcon className={classes} />;\n          }\n        }\n      }\n    }\n  }\n\n  return <></>;\n};\n", "import { JSONFloatType } from \"@jsonhero/json-infer-types\";\nimport { formatValue } from \"~/utilities/formatter\";\nimport { DataTable } from \"../DataTable\";\nimport { ValueIcon } from \"../ValueIcon\";\n\nexport type PropertiesFloatProps = {\n  type: JSONFloatType;\n};\n\nexport function PropertiesFloat(info: PropertiesFloatProps) {\n  return (\n    <DataTable\n      rows={[\n        {\n          key: \"Formatted value\",\n          value: formatValue(info.type) ?? \"\",\n          icon: <ValueIcon type={info.type} />,\n        },\n        {\n          key: \"Type\",\n          value: info.type.name,\n        },\n      ]}\n    />\n  );\n}", "import { JSONStringType, JSONURIFormat } from \"@jsonhero/json-infer-types\";\nimport {\n  JSONColorFormat,\n  JSONDateTimeFormat,\n  JSONJWTStringFormat,\n  JSONTimestampFormat,\n} from \"@jsonhero/json-infer-types/lib/formats\";\nimport Color from \"color\";\nimport { DataTableRow, DataTable } from \"../DataTable\";\n\nexport type PropertiesStringProps = {\n  type: JSONStringType;\n};\n\nexport function PropertiesString({ type }: { type: JSONStringType }) {\n  if (type.format == null) {\n    return <></>;\n  }\n\n  switch (type.format.name) {\n    case \"uri\":\n      return <PropertiesUri value={type.value} format={type.format} />;\n    case \"color\":\n      return <PropertiesColor value={type.value} format={type.format} />;\n    case \"datetime\":\n      return <PropertiesDateTime value={type.value} format={type.format} />;\n    case \"timestamp\":\n      return <PropertiesTimestamp value={type.value} format={type.format} />;\n    case \"jwt\":\n      return <PropertiesJwt value={type.value} format={type.format} />;\n    default:\n      return <></>;\n  }\n}\n\nimport jwtDecode from \"jwt-decode\";\nimport { inferTemporal } from \"~/utilities/inferredTemporal\";\n\nfunction PropertiesJwt({\n  value,\n  format,\n}: {\n  value: string;\n  format: JSONJWTStringFormat;\n}) {\n  const properties: DataTableRow[] = [];\n\n  const decodedPayload = jwtDecode(value) as Record<string, any>;\n\n  for (const [key, value] of Object.entries(decodedPayload)) {\n    properties.push({\n      key: key,\n      value,\n    });\n  }\n\n  const decodedHeader = jwtDecode(value, { header: true }) as Record<\n    string,\n    any\n  >;\n\n  for (const [key, value] of Object.entries(decodedHeader)) {\n    properties.push({\n      key: key,\n      value,\n    });\n  }\n\n  return <DataTable rows={properties} />;\n}\n\nfunction PropertiesTimestamp({\n  value,\n  format,\n}: {\n  value: string;\n  format: JSONTimestampFormat;\n}) {\n  const date =\n    format.variant === \"millisecondsSinceEpoch\"\n      ? new Date(parseInt(value))\n      : format.variant === \"secondsSinceEpoch\"\n      ? new Date(parseInt(value) * 1000)\n      : new Date(parseInt(value) / 1000000);\n\n  const properties = [\n    {\n      key: \"rfc3339\",\n      value: date.toISOString(),\n    },\n    {\n      key: \"rfc2822\",\n      value: date.toUTCString(),\n    },\n    {\n      key: \"unix\",\n      value: (date.getTime() / 1000).toFixed(0),\n    },\n    {\n      key: \"unix ms\",\n      value: date.getTime().toString(),\n    },\n    {\n      key: \"date\",\n      value: date.toDateString(),\n    },\n    {\n      key: \"time\",\n      value: date.toTimeString(),\n    },\n  ];\n\n  return <DataTable rows={properties} />;\n}\n\nfunction PropertiesDateTime({\n  value,\n  format,\n}: {\n  value: string;\n  format: JSONDateTimeFormat;\n}) {\n  if (format.parts === \"time\") {\n    return <></>;\n  }\n\n  const temporal = inferTemporal(value, format);\n\n  if (!temporal) {\n    return <></>;\n  }\n\n  const properties = [\n    {\n      key: \"rfc3339\",\n      value: temporal.toString(),\n    },\n    // {\n    //   key: \"unix\",\n    //   value: (date.getTime() / 1000).toFixed(0),\n    // },\n    // {\n    //   key: \"unix ms\",\n    //   value: date.getTime().toString(),\n    // },\n    // {\n    //   key: \"date\",\n    //   value: date.toDateString(),\n    // },\n    // {\n    //   key: \"time\",\n    //   value: date.toTimeString(),\n    // },\n  ];\n\n  if (\"epochSeconds\" in temporal) {\n    properties.push({\n      key: \"unix\",\n      value: temporal.epochSeconds.toString(),\n    });\n  }\n\n  if (\"epochMilliseconds\" in temporal) {\n    properties.push({\n      key: \"unix ms\",\n      value: temporal.epochMilliseconds.toString(),\n    });\n  }\n\n  properties.push({\n    key: \"date\",\n    value: temporal.toLocaleString(\"en-US\", {\n      year: \"numeric\",\n      month: \"long\",\n      day: \"numeric\",\n    }),\n  });\n\n  return <DataTable rows={properties} />;\n}\n\nfunction PropertiesColor({\n  value,\n  format,\n}: {\n  value: string;\n  format: JSONColorFormat;\n}) {\n  const color = new Color(value);\n\n  const properties = [\n    {\n      key: \"hex\",\n      value: color.hex(),\n    },\n    {\n      key: \"rgb\",\n      value: color.rgb().string(),\n    },\n    {\n      key: \"hsl\",\n      value: color.hsl().string(),\n    },\n    {\n      key: \"luminosity\",\n      value: color.luminosity().toFixed(4),\n    },\n    {\n      key: \"contrastRatio\",\n      value: color.isLight() ? \"light\" : \"dark\",\n    },\n  ];\n\n  return <DataTable rows={properties} />;\n}\n\nfunction PropertiesUri({\n  value,\n  format,\n}: {\n  value: string;\n  format: JSONURIFormat;\n}) {\n  let uri = new URL(value);\n\n  let standardProperties: DataTableRow[] = [\n    {\n      key: \"href\",\n      value: uri.href,\n    },\n    {\n      key: \"origin\",\n      value: uri.origin,\n    },\n    {\n      key: \"protocol\",\n      value: uri.protocol,\n    },\n    {\n      key: \"hostname\",\n      value: uri.hostname,\n    },\n    {\n      key: \"pathname\",\n      value: uri.pathname,\n    },\n  ];\n\n  if (uri.search) {\n    standardProperties.push({\n      key: \"search\",\n      value: uri.search,\n    });\n  }\n\n  if (uri.hash) {\n    standardProperties.push({\n      key: \"hash\",\n      value: uri.hash,\n    });\n  }\n\n  if (format.contentType != null) {\n    standardProperties.push({\n      key: \"mimeType\",\n      value: format.contentType,\n    });\n  }\n\n  return <DataTable rows={standardProperties} />;\n}\n", "export default function classnames(...args: string[]): string {\n  return args.filter(Boolean).join(\" \");\n}\n"],
  "mappings": "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",
  "names": []
}
