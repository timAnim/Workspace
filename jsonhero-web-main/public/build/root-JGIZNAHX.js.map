{
  "version": 3,
  "sources": ["empty-module:./theme.server", "empty-module:./services/github.server", "browser-route-module:E:\\Workspace\\jsonhero-web-main\\app\\root.tsx?browser", "../../app/root.tsx", "../../node_modules/clsx/dist/clsx.m.js"],
  "sourcesContent": ["module.exports = {};", "module.exports = {};", "export { default, links, meta } from \"E:\\\\Workspace\\\\jsonhero-web-main\\\\app\\\\root.tsx\";", "import {\n  Links,\n  LiveReload,\n  LoaderFunction,\n  Meta,\n  Outlet,\n  Scripts,\n  ScrollRestoration,\n  useLoaderData,\n  useLocation,\n} from \"remix\";\nimport type { MetaFunction } from \"remix\";\nimport clsx from \"clsx\";\nimport {\n  NonFlashOfWrongThemeEls,\n  Theme,\n  ThemeProvider,\n  useTheme,\n} from \"~/components/ThemeProvider\";\n\nimport openGraphImage from \"~/assets/images/opengraph.png\";\n\nexport const meta: MetaFunction = ({ location }) => {\n  const description =\n    \"JSON Hero makes reading and understand JSON files easy by giving you a clean and beautiful UI packed with extra features.\";\n  return {\n    title: \"JSON Hero - a beautiful JSON viewer for the web\",\n    viewport: \"width=device-width,initial-scale=1\",\n    description,\n    \"og:image\": `https://jsonhero.io${openGraphImage}`,\n    \"og:url\": `https://jsonhero.io${location.pathname}`,\n    \"og:title\": \"JSON Hero - A beautiful JSON viewer\",\n    \"og:description\": description,\n    \"twitter:image\": `https://jsonhero.io${openGraphImage}`,\n    \"twitter:card\": \"summary_large_image\",\n    \"twitter:creator\": \"@json_hero\",\n    \"twitter:site\": \"@json_hero\",\n    \"twitter:title\": \"JSON Hero\",\n    \"twitter:description\": description,\n  };\n};\n\nimport styles from \"./tailwind.css\";\nimport { getThemeSession } from \"./theme.server\";\nimport { getStarCount } from \"./services/github.server\";\nimport { StarCountProvider } from \"./components/StarCountProvider\";\nimport { PreferencesProvider } from \"~/components/PreferencesProvider\";\n\nexport function links() {\n  return [{ rel: \"stylesheet\", href: styles }];\n}\n\nexport type LoaderData = {\n  theme?: Theme;\n  starCount?: number;\n  themeOverride?: Theme;\n};\n\nexport const loader: LoaderFunction = async ({ request }) => {\n  const themeSession = await getThemeSession(request);\n  const starCount = await getStarCount();\n  const themeOverride = getThemeFromRequest(request);\n\n  const data: LoaderData = {\n    theme: themeSession.getTheme(),\n    starCount,\n    themeOverride,\n  };\n\n  return data;\n};\n\nfunction getThemeFromRequest(request: Request): Theme | undefined {\n  const url = new URL(request.url);\n  const theme = url.searchParams.get(\"theme\");\n  if (theme) {\n    return theme as Theme;\n  }\n  return undefined;\n}\n\nfunction App() {\n  const [theme] = useTheme();\n\n  return (\n    <html lang=\"en\" className={clsx(theme)}>\n      <head>\n        <Meta />\n        <meta charSet=\"utf-8\" />\n        <Links />\n        <NonFlashOfWrongThemeEls ssrTheme={Boolean(theme)} />\n      </head>\n      <body className=\"overscroll-none\">\n        <Outlet />\n        <ScrollRestoration />\n        <Scripts />\n        {process.env.NODE_ENV === \"development\" && <LiveReload />}\n      </body>\n    </html>\n  );\n}\n\nexport default function AppWithProviders() {\n  const { theme, starCount, themeOverride } = useLoaderData<LoaderData>();\n\n  const location = useLocation();\n\n  // Force dark mode on the homepage\n  const forceDarkMode = location.pathname === \"/\";\n\n  return (\n    <ThemeProvider\n      specifiedTheme={theme}\n      themeOverride={forceDarkMode ? \"dark\" : themeOverride}\n    >\n      <PreferencesProvider>\n        <StarCountProvider starCount={starCount}>\n          <App />\n        </StarCountProvider>\n      </PreferencesProvider>\n    </ThemeProvider>\n  );\n}\n", "function toVal(mix) {\n\tvar k, y, str='';\n\n\tif (typeof mix === 'string' || typeof mix === 'number') {\n\t\tstr += mix;\n\t} else if (typeof mix === 'object') {\n\t\tif (Array.isArray(mix)) {\n\t\t\tfor (k=0; k < mix.length; k++) {\n\t\t\t\tif (mix[k]) {\n\t\t\t\t\tif (y = toVal(mix[k])) {\n\t\t\t\t\t\tstr && (str += ' ');\n\t\t\t\t\t\tstr += y;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tfor (k in mix) {\n\t\t\t\tif (mix[k]) {\n\t\t\t\t\tstr && (str += ' ');\n\t\t\t\t\tstr += k;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn str;\n}\n\nexport default function () {\n\tvar i=0, tmp, x, str='';\n\twhile (i < arguments.length) {\n\t\tif (tmp = arguments[i++]) {\n\t\t\tif (x = toVal(tmp)) {\n\t\t\t\tstr && (str += ' ');\n\t\t\t\tstr += x\n\t\t\t}\n\t\t}\n\t}\n\treturn str;\n}\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA,WAAO,UAAU;AAAA;AAAA;;;ACAjB;AAAA;AAAA;AAAA,WAAO,UAAU;AAAA;AAAA;;;ACAjB;;;ACAA;;;ACAA;AAAA,eAAe,KAAK;AACnB,MAAI,GAAG,GAAG,MAAI;AAEd,MAAI,OAAO,QAAQ,YAAY,OAAO,QAAQ,UAAU;AACvD,WAAO;AAAA,aACG,OAAO,QAAQ,UAAU;AACnC,QAAI,MAAM,QAAQ,MAAM;AACvB,WAAK,IAAE,GAAG,IAAI,IAAI,QAAQ,KAAK;AAC9B,YAAI,IAAI,IAAI;AACX,cAAI,IAAI,MAAM,IAAI,KAAK;AACtB,mBAAQ,QAAO;AACf,mBAAO;AAAA;AAAA;AAAA;AAAA,WAIJ;AACN,WAAK,KAAK,KAAK;AACd,YAAI,IAAI,IAAI;AACX,iBAAQ,QAAO;AACf,iBAAO;AAAA;AAAA;AAAA;AAAA;AAMX,SAAO;AAAA;AAGO,0BAAY;AAC1B,MAAI,IAAE,GAAG,KAAK,GAAG,MAAI;AACrB,SAAO,IAAI,UAAU,QAAQ;AAC5B,QAAI,MAAM,UAAU,MAAM;AACzB,UAAI,IAAI,MAAM,MAAM;AACnB,eAAQ,QAAO;AACf,eAAO;AAAA;AAAA;AAAA;AAIV,SAAO;AAAA;;;;;;;;;ADKR,mBAAgC;AAChC,oBAA6B;AAtBtB,IAAM,OAAqB,CAAC,EAAE,eAAe;AAClD,QAAM,cACJ;AACF,SAAO;AAAA,IACL,OAAO;AAAA,IACP,UAAU;AAAA,IACV;AAAA,IACA,YAAY,sBAAsB;AAAA,IAClC,UAAU,sBAAsB,SAAS;AAAA,IACzC,YAAY;AAAA,IACZ,kBAAkB;AAAA,IAClB,iBAAiB,sBAAsB;AAAA,IACvC,gBAAgB;AAAA,IAChB,mBAAmB;AAAA,IACnB,gBAAgB;AAAA,IAChB,iBAAiB;AAAA,IACjB,uBAAuB;AAAA;AAAA;AAUpB,iBAAiB;AACtB,SAAO,CAAC,EAAE,KAAK,cAAc,MAAM;AAAA;AAgCrC,eAAe;AACb,QAAM,CAAC,SAAS;AAEhB,SACE,oCAAC,QAAD;AAAA,IAAM,MAAK;AAAA,IAAK,WAAW,eAAK;AAAA,KAC9B,oCAAC,QAAD,MACE,oCAAC,MAAD,OACA,oCAAC,QAAD;AAAA,IAAM,SAAQ;AAAA,MACd,oCAAC,OAAD,OACA,oCAAC,yBAAD;AAAA,IAAyB,UAAU,QAAQ;AAAA,OAE7C,oCAAC,QAAD;AAAA,IAAM,WAAU;AAAA,KACd,oCAAC,QAAD,OACA,oCAAC,mBAAD,OACA,oCAAC,SAAD,OAC2C,oCAAC,YAAD;AAAA;AAMpC,4BAA4B;AACzC,QAAM,EAAE,OAAO,WAAW,kBAAkB;AAE5C,QAAM,WAAW;AAGjB,QAAM,gBAAgB,SAAS,aAAa;AAE5C,SACE,oCAAC,eAAD;AAAA,IACE,gBAAgB;AAAA,IAChB,eAAe,gBAAgB,SAAS;AAAA,KAExC,oCAAC,qBAAD,MACE,oCAAC,mBAAD;AAAA,IAAmB;AAAA,KACjB,oCAAC,KAAD;AAAA;",
  "names": []
}
